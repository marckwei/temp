<!-- saved from url=(0014)about:internet -->
<html>
<head>
<meta http-equiv="X-UA-Compatible" content="IE=8"></meta>
</head>
<body>
<script language="Jscript.Encode">

var vars = new Array(100);

var runcount = {main:0, f0:0, f1:0, f2:0, f3:0, f4:0, f5:0, f6:0, f7:0, f8:0, f9:0}

function main() {
runcount.main++; if(runcount.main>2) return;
//alert('main');
//beginjs
try { var ret = String.prototype.substring.call(vars[75], false); if(ret) vars[83] = ret; } catch(e) { }
try { var ret = new Date(); if(ret) vars[70] = ret; } catch(e) { }
try { vars[37].toJSON = f3; } catch(e) { }
try { var ret = String.prototype.toUpperCase.call(vars[76]); if(ret) vars[47] = ret; } catch(e) { }
try { var ret = URIError(vars[61], vars[94], vars[39]); if(ret) vars[42] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[58], true); if(ret) vars[35] = ret; } catch(e) { }
try { var ret = Debug.write(vars[12]); if(ret) vars[38] = ret; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[73], vars[99], vars[33], true); if(ret) vars[55] = ret; } catch(e) { }
try { var ret = RegExp.$3; if(ret) vars[69] = ret; } catch(e) { }
try { var ret = new Array(false); if(ret) vars[34] = ret; } catch(e) { }
try { vars[77] = {}; } catch(e) { }
try { var ret = RegExp.$8; if(ret) vars[27] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[60]); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = decodeURIComponent(false); if(ret) vars[31] = ret; } catch(e) { }
try { vars[63].arguments = vars[23]; } catch(e) { }
try { var ret = vars[77].global; if(ret) vars[68] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[57], Array(65537).join(String.fromCharCode(93)), 'm'); } catch(e) { }
try { var ret = new Array(); if(ret) vars[84] = ret; } catch(e) { }
try { var ret = Error.prototype.toString.call(vars[62]); if(ret) vars[53] = ret; } catch(e) { }
try { vars[38] = RegExp; } catch(e) { }
try { var ret = new Array(vars[54]); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[16], false, -1); if(ret) vars[38] = ret; } catch(e) { }
try { var ret = Enumerator(false); if(ret) vars[66] = ret; } catch(e) { }
try { var ret = Date.prototype.getTimezoneOffset.call(vars[17]); if(ret) vars[49] = ret; } catch(e) { }
try { var ret = String.prototype.match.call(vars[46], Infinity); if(ret) vars[46] = ret; } catch(e) { }
try { var ret = JSON.parse('a'); if(ret) vars[16] = ret; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[38], f1); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[73], vars[51]); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = new Array(vars[42]); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = String.FromCharCode(vars[14], Infinity, true); if(ret) vars[55] = ret; } catch(e) { }
try { var ret = new Error(vars[79]); if(ret) vars[37] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[11], Array(1025).join(String.fromCharCode(10, 126)) + Array(65).join(String.fromCharCode(69))); } catch(e) { }
try { vars[49].toLocaleString = vars[36]; } catch(e) { }
try { var ret = VBArray.prototype.toArray.call(vars[8]); if(ret) vars[82] = ret; } catch(e) { }
try { vars[41] = this; } catch(e) { }
try { var ret = new Error(); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = vars[67].lastIndex; if(ret) vars[38] = ret; } catch(e) { }
try { vars[2] = RegExp; } catch(e) { }
try { vars[35].toJSON = f1; } catch(e) { }
try { var ret = Function.prototype.toString.call(vars[41]); if(ret) vars[84] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[96], vars[92]); if(ret) vars[14] = ret; } catch(e) { }
try { vars[29].length = true; } catch(e) { }
try { vars[3].toFixed = 5; } catch(e) { }
try { var ret = Error.prototype.toString.call(vars[41]); if(ret) vars[94] = ret; } catch(e) { }
try { vars[43] = JSON; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[21], Infinity, vars[41], Infinity, Infinity); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[33], 1000000, vars[34]); if(ret) vars[73] = ret; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[45], arg3, true, false, vars[59]); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = EvalError(vars[99], true, vars[14]); if(ret) vars[29] = ret; } catch(e) { }
try { var ret = Debug.writeln(arg4, arg5, Infinity); if(ret) vars[70] = ret; } catch(e) { }
try { var ret = new ActiveXObject(false, vars[29]); if(ret) vars[4] = ret; } catch(e) { }
try { var ret = Date.prototype.valueOf.call(vars[80]); if(ret) vars[47] = ret; } catch(e) { }
try { var ret = VBArray.prototype.ubound.call(vars[18], vars[80]); if(ret) vars[71] = ret; } catch(e) { }
try { vars[52].caller = vars[59]; } catch(e) { }
try { var ret = vars[11].input; if(ret) vars[64] = ret; } catch(e) { }
try { var ret = vars[73].options; if(ret) vars[95] = ret; } catch(e) { }
try { var ret = Array(257).join(String.fromCharCode(99)); if(ret) vars[76] = ret; } catch(e) { }
try { var ret = RegExp.lastMatch; if(ret) vars[48] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[70], 100); } catch(e) { }
try { vars[70].toString = f0; } catch(e) { }
try { vars[26] = Enumerator; } catch(e) { }
try { var ret = Date('a', 'a', arg7, true, 'a', vars[89], vars[33]); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[76]); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = vars[6].caller; if(ret) vars[45] = ret; } catch(e) { }
try { var ret = RegExp.$9; if(ret) vars[60] = ret; } catch(e) { }
try { var ret = vars[22][10]; if(ret) vars[30] = ret; } catch(e) { }
try { var ret = vars[3].toLocaleString; if(ret) vars[71] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[67], vars[25], vars[57]); } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[51]); if(ret) vars[52] = ret; } catch(e) { }
try { var ret = VBArray(vars[83]); if(ret) vars[71] = ret; } catch(e) { }
try { var ret = new Error(arg5, vars[86], vars[18]); if(ret) vars[36] = ret; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[92], vars[58], 1000, vars[32]); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = RegExp(Array(4097).join(String.fromCharCode(58, 39)), 'gg'); if(ret) vars[60] = ret; } catch(e) { }
try { var ret = RegExp.lastMatch; if(ret) vars[97] = ret; } catch(e) { }
try { var ret = Array(65537).join(String.fromCharCode(85)); if(ret) vars[65] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleTimeString.call(vars[32]); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = new Date(); if(ret) vars[5] = ret; } catch(e) { }
try { var ret = vars[6].appy(vars[32], vars[48]); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = RegExp.leftContext; if(ret) vars[16] = ret; } catch(e) { }
try { var ret = new Error(); if(ret) vars[45] = ret; } catch(e) { }
try { var ret = new ActiveXObject(10, vars[34]); if(ret) vars[93] = ret; } catch(e) { }
try { vars[65] = {}; } catch(e) { }
try { var ret = URIError(vars[29], Infinity, vars[28]); if(ret) vars[93] = ret; } catch(e) { }
try { var ret = vars[27].toLocaleString; if(ret) vars[47] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[32], vars[15], Infinity); } catch(e) { }
try { var ret = new ActiveXObject(1000, vars[36]); if(ret) vars[79] = ret; } catch(e) { }
try { var ret = vars[95].options; if(ret) vars[25] = ret; } catch(e) { }
try { var ret = JSON.parse(vars[82]); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = vars[58].valueOf; if(ret) vars[81] = ret; } catch(e) { }
try { vars[1] = {}; } catch(e) { }
try { var ret = Boolean.prototype.valueOf.call(vars[57]); if(ret) vars[97] = ret; } catch(e) { }
try { var ret = vars[52][4]; if(ret) vars[26] = ret; } catch(e) { }
try { var ret = new vars[39].call(vars[76], vars[31], arg3, vars[13], vars[89], vars[61]); if(ret) vars[46] = ret; } catch(e) { }
try { var ret = String.prototype.search.call(vars[10], true); if(ret) vars[48] = ret; } catch(e) { }
try { vars[48].toJSON = true; } catch(e) { }
try { var ret = LuHigh('a'); if(ret) vars[42] = ret; } catch(e) { }
try { var ret = vars[61].toExponential; if(ret) vars[11] = ret; } catch(e) { }
try { var ret = arguments; if(ret) vars[68] = ret; } catch(e) { }
try { var ret = RangeError(vars[81], vars[9], vars[3]); if(ret) vars[79] = ret; } catch(e) { }
try { var ret = VBArray.prototype.lbound.call(vars[77], vars[44]); if(ret) vars[67] = ret; } catch(e) { }
try { var ret = Error(4, vars[52], vars[2]); if(ret) vars[99] = ret; } catch(e) { }
try { var ret = new ActiveXObject(1, Infinity); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = Array(vars[32], vars[89], arg2); if(ret) vars[12] = ret; } catch(e) { }
try { vars[4].toFixed = f3; } catch(e) { }
try { var ret = String.prototype.split.call(vars[95], 'a', 1073741823); if(ret) vars[45] = ret; } catch(e) { }
try { vars[7] = {}; } catch(e) { }
try { vars[28].valueOf = vars[11]; } catch(e) { }
try { var ret = vars[77].prototype; if(ret) vars[49] = ret; } catch(e) { }
try { vars[17].constructor = arg7; } catch(e) { }
try { var ret = vars[56][4]; if(ret) vars[36] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleString.call(vars[39]); if(ret) vars[5] = ret; } catch(e) { }
try { var ret = arguments; if(ret) vars[41] = ret; } catch(e) { }
try { vars[8].foo = arg5; } catch(e) { }
try { var ret = encodeURIComponent(vars[53]); if(ret) vars[13] = ret; } catch(e) { }
try { vars[94].toPrecision = arg4; } catch(e) { }
try { vars[76] = Boolean; } catch(e) { }
try { var ret = RegExp.lastIndex; if(ret) vars[31] = ret; } catch(e) { }
try { var ret = RegExp.lastIndex; if(ret) vars[66] = ret; } catch(e) { }
try { var ret = VBArray.prototype.ubound.call(vars[92], vars[52]); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = RegExp.$9; if(ret) vars[4] = ret; } catch(e) { }
try { var ret = new VBArray(vars[18]); if(ret) vars[75] = ret; } catch(e) { }
try { vars[70] = Date; } catch(e) { }
try { var ret = RegExp.lastParen; if(ret) vars[77] = ret; } catch(e) { }
try { vars[47].valueOf = f8; } catch(e) { }
try { var ret = Error(); if(ret) vars[28] = ret; } catch(e) { }
try { vars[48].source = 'a'; } catch(e) { }
try { var ret = new Array(vars[14], vars[67], vars[76]); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = new VBArray(); if(ret) vars[99] = ret; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[1], vars[88], vars[11], false); if(ret) vars[39] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[55], vars[56]); if(ret) vars[44] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[66], vars[4]); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = new vars[21](vars[33], vars[30], arg2, false, vars[51]); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[83], false, 'a'); if(ret) vars[99] = ret; } catch(e) { }
try { vars[75][4] = vars[35]; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[70], vars[92]); if(ret) vars[15] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[66], true); if(ret) vars[12] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[22], true); if(ret) vars[26] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[43], 4, false); if(ret) vars[66] = ret; } catch(e) { }
try { var ret = new VBArray(); if(ret) vars[35] = ret; } catch(e) { }
try { var ret = Date(false, vars[9], Infinity, vars[1], vars[33], Infinity, vars[19]); if(ret) vars[63] = ret; } catch(e) { }
try { var ret = Date.prototype.valueOf.call(vars[58]); if(ret) vars[26] = ret; } catch(e) { }
try { var ret = Debug.write(true); if(ret) vars[89] = ret; } catch(e) { }
try { function f_inner_63() { return f1(); } vars[13] = f_inner_63; } catch(e) { }
try { var ret = Array.prototype.toLocaleString.call(vars[61]); if(ret) vars[80] = ret; } catch(e) { }
try { var ret = Date.UTC(vars[3], Infinity, 4, false, true, vars[31], vars[77]); if(ret) vars[0] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[45], Array(17).join(String.fromCharCode(78, 124))); } catch(e) { }
try { var ret = Enumerator(vars[37]); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[41]); if(ret) vars[20] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[89], 10); if(ret) vars[38] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.moveFirst.call(vars[83]); if(ret) vars[71] = ret; } catch(e) { }
try { var ret = vars[32].toPrecision; if(ret) vars[89] = ret; } catch(e) { }
try { var ret = vars[14].source; if(ret) vars[79] = ret; } catch(e) { }
try { vars[51].toLocaleString = 2; } catch(e) { }
try { vars[73].toFixed = f4; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[13], vars[66], arg2); if(ret) vars[81] = ret; } catch(e) { }
try { var ret = Debug.writeln(arg3, vars[52], vars[65]); if(ret) vars[8] = ret; } catch(e) { }
try { var ret = new Date(true); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = vars[19].constructor; if(ret) vars[69] = ret; } catch(e) { }
try { var ret = new vars[48].apply(vars[42], false); if(ret) vars[43] = ret; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[31], false, true); if(ret) vars[19] = ret; } catch(e) { }
try { vars[16] = RegExp; } catch(e) { }
try { var ret = String.prototype.split.call(vars[69], vars[13]); if(ret) vars[29] = ret; } catch(e) { }
try { var ret = vars[54][1000]; if(ret) vars[19] = ret; } catch(e) { }
try { vars[91].toJSON = f7; } catch(e) { }
try { vars[77][2] = Infinity; } catch(e) { }
try { var ret = RegExp.input; if(ret) vars[56] = ret; } catch(e) { }
try { vars[44].arguments = 'a'; } catch(e) { }
try { vars[51].valueOf = 'a'; } catch(e) { }
try { var ret = Error(true, arg1, vars[18]); if(ret) vars[29] = ret; } catch(e) { }
try { var ret = Boolean(); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = RegExp.$3; if(ret) vars[80] = ret; } catch(e) { }
try { vars[82] = document.createElement("foo"); Object.defineProperty(vars[82], "toJSON", {get: f0, set: f2} ); } catch(e) { }
try { vars[48].toFixed = vars[9]; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[45], true, arg2, true, vars[14]); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = EncodeURI(vars[39]); if(ret) vars[67] = ret; } catch(e) { }
try { var ret = unescape(vars[15]); if(ret) vars[36] = ret; } catch(e) { }
try { var ret = String.prototype.charAt.call(vars[65], Infinity); if(ret) vars[52] = ret; } catch(e) { }
try { var ret = RegExp.$7; if(ret) vars[36] = ret; } catch(e) { }
try { var ret = RangeError(false, false, vars[66]); if(ret) vars[64] = ret; } catch(e) { }
try { var ret = vars[56].foo; if(ret) vars[12] = ret; } catch(e) { }
try { vars[12] = document.createElement("foo"); } catch(e) { }
try { var ret = String.prototype.anchor.call(vars[62], 'a'); if(ret) vars[13] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[60], vars[60]); } catch(e) { }
try { var ret = vars[39](arg3, vars[56], vars[88], true, vars[82]); if(ret) vars[41] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[36], vars[92], 'a', vars[55], vars[83]); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = Date.UTC(false, vars[37], true, true, vars[64], vars[26], vars[67]); if(ret) vars[53] = ret; } catch(e) { }
try { var ret = Error.prototype.toString.call(vars[17]); if(ret) vars[17] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.moveFirst.call(vars[8]); if(ret) vars[67] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[58], false, false); if(ret) vars[41] = ret; } catch(e) { }
try { vars[5] = {}; } catch(e) { }
try { var ret = Date.prototype.toJSON.call(vars[44]); if(ret) vars[32] = ret; } catch(e) { }
try { var ret = RegExp.$6; if(ret) vars[87] = ret; } catch(e) { }
try { var ret = new ReferenceError(vars[9], vars[88], vars[75]); if(ret) vars[17] = ret; } catch(e) { }
try { vars[5] = Enumerator; } catch(e) { }
try { var ret = String.prototype.toLocaleLowerCase.call(vars[37]); if(ret) vars[78] = ret; } catch(e) { }
try { vars[69].toString = true; } catch(e) { }
try { var ret = vars[37].call(vars[86], vars[81], arg6, vars[9], vars[73], vars[85]); if(ret) vars[12] = ret; } catch(e) { }
try { vars[64] = Boolean; } catch(e) { }
try { var ret = new Date(vars[81], 100, vars[57], 'a', arg6, Infinity, arg9); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = Array(false); if(ret) vars[74] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[56], 'a', 4); if(ret) vars[56] = ret; } catch(e) { }
try { var ret = Array.prototype.reverse.call(vars[86]); if(ret) vars[34] = ret; } catch(e) { }
try { var ret = vars[33].arguments; if(ret) vars[18] = ret; } catch(e) { }
try { var ret = vars[88].toJSON; if(ret) vars[59] = ret; } catch(e) { }
try { vars[45] = document.createElement("foo"); Object.defineProperty(vars[45], "lastIndex", {get: f6, set: f9} ); } catch(e) { }
try { var ret = Function.prototype.call.call(vars[40], vars[30], Infinity, 'a', true); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = new Date(false, vars[66], vars[30], vars[81], vars[2], vars[83], Infinity); if(ret) vars[72] = ret; } catch(e) { }
try { vars[42] = document.createElement("foo"); Object.defineProperty(vars[42], "length", {get: f0, set: f6} ); } catch(e) { }
try { var ret = isFinite(false); if(ret) vars[34] = ret; } catch(e) { }
try { var ret = LuHigh(vars[54]); if(ret) vars[97] = ret; } catch(e) { }
try { var ret = vars[26].lastIndex; if(ret) vars[29] = ret; } catch(e) { }
try { var ret = RegExp.input; if(ret) vars[12] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[53], vars[71]); } catch(e) { }
try { var ret = Error(1000); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = Enumerator(false); if(ret) vars[24] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[5]); if(ret) vars[74] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[2], true, 1000000); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[27], Infinity, vars[80]); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = Enumerator(); if(ret) vars[68] = ret; } catch(e) { }
try { vars[0] = new Array(5); } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[16], vars[83], true); if(ret) vars[17] = ret; } catch(e) { }
try { var ret = Date.prototype.getTimezoneOffset.call(vars[12]); if(ret) vars[2] = ret; } catch(e) { }
try { var ret = String.prototype.anchor.call(vars[61], vars[11]); if(ret) vars[76] = ret; } catch(e) { }
try { var ret = String.prototype.toLowerCase.call(vars[26]); if(ret) vars[31] = ret; } catch(e) { }
try { var ret = RegExp.index; if(ret) vars[6] = ret; } catch(e) { }
try { var ret = vars[42][1073741823]; if(ret) vars[93] = ret; } catch(e) { }
try { var ret = Date.prototype.toJSON.call(vars[58]); if(ret) vars[24] = ret; } catch(e) { }
try { var ret = vars[2].constructor; if(ret) vars[99] = ret; } catch(e) { }
try { var ret = vars[7][2]; if(ret) vars[69] = ret; } catch(e) { }
try { var ret = Function.prototype.toString.call(vars[63]); if(ret) vars[24] = ret; } catch(e) { }
try { var ret = new RegExp(Array(257).join(String.fromCharCode(14, 126)) + Array(257).join(String.fromCharCode(84, 55))); if(ret) vars[2] = ret; } catch(e) { }
try { var ret = VBArray.prototype.toArray.call(vars[57]); if(ret) vars[34] = ret; } catch(e) { }
try { var ret = new VBArray(); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = Boolean.prototype.toString.call(vars[6]); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = VBArray.prototype.toArray.call(vars[81]); if(ret) vars[82] = ret; } catch(e) { }
try { var ret = decodeURI(true); if(ret) vars[35] = ret; } catch(e) { }
try { var ret = new Error(vars[2], vars[92], vars[87]); if(ret) vars[77] = ret; } catch(e) { }
try { vars[48] = Error; } catch(e) { }
try { var ret = RegExp.$6; if(ret) vars[53] = ret; } catch(e) { }
try { var ret = RegExp.index; if(ret) vars[28] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[71], Array(257).join(String.fromCharCode(84, 82))); } catch(e) { }
try { var ret = vars[0].constructor; if(ret) vars[0] = ret; } catch(e) { }
try { var ret = LuLow('a'); if(ret) vars[50] = ret; } catch(e) { }
try { var ret = vars[22][3]; if(ret) vars[39] = ret; } catch(e) { }
try { var ret = RegExp(Array(65537).join(String.fromCharCode(58))); if(ret) vars[99] = ret; } catch(e) { }
try { var ret = RuntimeObject(); if(ret) vars[93] = ret; } catch(e) { }
try { var ret = ['a', true, false]; if(ret) vars[81] = ret; } catch(e) { }
try { var ret = Function.prototype.toString.call(vars[14]); if(ret) vars[51] = ret; } catch(e) { }
try { var ret = String.prototype.toLowerCase.call(vars[47]); if(ret) vars[79] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[95], true, f4); if(ret) vars[97] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[90], 4); } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[38]); if(ret) vars[2] = ret; } catch(e) { }
try { var ret = new Boolean(); if(ret) vars[13] = ret; } catch(e) { }
try { vars[46] = new Array(10); } catch(e) { }
try { var ret = String.prototype.match.call(vars[7], 1000000); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = new RegExp(); if(ret) vars[26] = ret; } catch(e) { }
try { var ret = parseInt(vars[86]); if(ret) vars[74] = ret; } catch(e) { }
try { var ret = Date.prototype.getFullYear.call(vars[58]); if(ret) vars[60] = ret; } catch(e) { }
try { var ret = new ActiveXObject(vars[63]); if(ret) vars[78] = ret; } catch(e) { }
try { vars[51] = {}; } catch(e) { }
try { var ret = arg2; if(ret) vars[66] = ret; } catch(e) { }
try { vars[47].arguments = vars[31]; } catch(e) { }
try { var ret = Boolean.prototype.valueOf.call(vars[84]); if(ret) vars[13] = ret; } catch(e) { }
try { var ret = escape('a'); if(ret) vars[74] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[90], vars[42], 'a'); if(ret) vars[38] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[19], 'a', f8); if(ret) vars[32] = ret; } catch(e) { }
try { vars[16] = {}; } catch(e) { }
try { var ret = Boolean.prototype.toJSON.call(vars[43]); if(ret) vars[73] = ret; } catch(e) { }
try { vars[97] = {}; } catch(e) { }
try { var ret = Array.prototype.unshift.call(vars[59], 4294967295, vars[36]); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[11], vars[85], true, vars[52], vars[37]); if(ret) vars[46] = ret; } catch(e) { }
try { var ret = new RuntimeObject(); if(ret) vars[14] = ret; } catch(e) { }
try { vars[63] = Date; } catch(e) { }
try { var ret = String.prototype.toUpperCase.call(vars[54]); if(ret) vars[65] = ret; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[9], vars[47], vars[59]); if(ret) vars[84] = ret; } catch(e) { }
try { vars[52] = {}; } catch(e) { }
try { vars[80].valueOf = f4; } catch(e) { }
try { RegExp.prototype.test.call(vars[43], Array(1025).join(String.fromCharCode(126)) + Array(1025).join(String.fromCharCode(80))); } catch(e) { }
try { vars[57] = Function; } catch(e) { }
try { var ret = Date(vars[2], true, true, vars[17], arg2, vars[26], vars[73]); if(ret) vars[20] = ret; } catch(e) { }
try { var ret = new ActiveXObject(false); if(ret) vars[93] = ret; } catch(e) { }
try { vars[0].valueOf = vars[37]; } catch(e) { }
try { var ret = Enumerator.prototype.moveNext.call(vars[68]); if(ret) vars[55] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[15], Infinity); if(ret) vars[21] = ret; } catch(e) { }
try { vars[99] = {}; } catch(e) { }
try { var ret = RegExp.lastMatch; if(ret) vars[0] = ret; } catch(e) { }
try { RegExp.input = vars[50]; } catch(e) { }
try { var ret = Date(vars[62]); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = new Date(1000, vars[5], vars[50], 'a', 'a', false, 'a'); if(ret) vars[91] = ret; } catch(e) { }
try { vars[4].toFixed = f1; } catch(e) { }
try { var ret = String.prototype.localeCompare.call(vars[59], vars[33]); if(ret) vars[31] = ret; } catch(e) { }
try { var ret = RegExp.$2; if(ret) vars[60] = ret; } catch(e) { }
try { vars[12] = Array(65).join(String.fromCharCode(106)) + Array(4097).join(String.fromCharCode(42)); } catch(e) { }
try { var ret = String.prototype.match.call(vars[29], vars[48]); if(ret) vars[93] = ret; } catch(e) { }
try { var ret = VBArray.prototype.lbound.call(vars[87], vars[62]); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = vars[45].length; if(ret) vars[19] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[65], vars[46], vars[38]); if(ret) vars[65] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[33], vars[5], 5); if(ret) vars[18] = ret; } catch(e) { }
try { vars[31] = {}; } catch(e) { }
try { var ret = Date.UTC(vars[65], vars[28], vars[62], 100, vars[89], arg8, Infinity); if(ret) vars[47] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[16], vars[14]); if(ret) vars[66] = ret; } catch(e) { }
try { var ret = JSON.parse(arg8); if(ret) vars[41] = ret; } catch(e) { }
try { vars[44].options = vars[51]; } catch(e) { }
try { var ret = vars[96].caller; if(ret) vars[98] = ret; } catch(e) { }
try { var ret = encodeURIComponent(Infinity); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[97], Infinity); if(ret) vars[78] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[65], Array(257).join(String.fromCharCode(17))); } catch(e) { }
try { var ret = vars[6].toLocaleString; if(ret) vars[5] = ret; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[77], 'a', vars[27]); if(ret) vars[81] = ret; } catch(e) { }
try { var ret = new Array(); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = Array.prototype.reverse.call(vars[1]); if(ret) vars[39] = ret; } catch(e) { }
try { var ret = new VBArray(); if(ret) vars[24] = ret; } catch(e) { }
try { var ret = String.prototype.localeCompare.call(vars[71], arg6); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = []; if(ret) vars[1] = ret; } catch(e) { }
try { var ret = parseInt(Infinity); if(ret) vars[54] = ret; } catch(e) { }
try { var ret = vars[69].call(vars[57], false, 2, Infinity); if(ret) vars[96] = ret; } catch(e) { }
try { vars[87].callee = vars[8]; } catch(e) { }
try { var ret = new RegExp(Array(65537).join(String.fromCharCode(72)) + Array(257).join(String.fromCharCode(4)), 'mg'); if(ret) vars[80] = ret; } catch(e) { }
try { var ret = vars[1][-1]; if(ret) vars[89] = ret; } catch(e) { }
try { vars[49].constructor = vars[49]; } catch(e) { }
try { var ret = vars[7].toJSON; if(ret) vars[22] = ret; } catch(e) { }
try { var ret = RegExp.$3; if(ret) vars[82] = ret; } catch(e) { }
try { vars[69] = new Array(1); } catch(e) { }
try { var ret = Function.prototype.call.call(vars[24], vars[41]); if(ret) vars[61] = ret; } catch(e) { }
try { var ret = new ActiveXObject(vars[29], vars[91]); if(ret) vars[78] = ret; } catch(e) { }
try { var ret = vars[98].call(vars[4], 4, vars[48], vars[85], Infinity, vars[55]); if(ret) vars[60] = ret; } catch(e) { }
try { vars[38][5] = 'a'; } catch(e) { }
try { vars[8].valueOf = vars[57]; } catch(e) { }
try { vars[31].toLocaleString = f8; } catch(e) { }
try { var ret = RegExp.leftContext; if(ret) vars[28] = ret; } catch(e) { }
try { vars[97].toLocaleString = vars[29]; } catch(e) { }
try { var ret = EvalError(vars[4], vars[53], Infinity); if(ret) vars[4] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[34], vars[37]); if(ret) vars[2] = ret; } catch(e) { }
try { var ret = new Boolean(); if(ret) vars[17] = ret; } catch(e) { }
try { var ret = new vars[98].call(vars[72], vars[69], 4294967296, Infinity, 'a', Infinity); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = Date(true, vars[93], vars[81], vars[91], 1, vars[33], vars[77]); if(ret) vars[11] = ret; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[50], Infinity, vars[18], vars[10], arg1); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = escape(vars[94]); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[90], vars[26], 'a'); if(ret) vars[84] = ret; } catch(e) { }
try { vars[5][3] = vars[81]; } catch(e) { }
try { var ret = String.prototype.toLocaleUpperCase.call(vars[74]); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[50], vars[31], vars[69]); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = new vars[93].call(vars[93], 'a', vars[39], vars[76], vars[42], vars[30]); if(ret) vars[11] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[13], vars[44], vars[57]); if(ret) vars[16] = ret; } catch(e) { }
try { vars[1] = new Array(100); } catch(e) { }
try { var ret = vars[52].toJSON; if(ret) vars[23] = ret; } catch(e) { }
try { var ret = RegExp.$6; if(ret) vars[87] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[42], true); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = RegExp.index; if(ret) vars[35] = ret; } catch(e) { }
try { vars[14] = Array; } catch(e) { }
try { var ret = new URIError(vars[48], vars[52], vars[26]); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = String.prototype.toUpperCase.call(vars[0]); if(ret) vars[71] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[33], false, vars[5]); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = RegExp.$1; if(ret) vars[96] = ret; } catch(e) { }
try { var ret = Debug.writeln(vars[98], vars[24], 1000); if(ret) vars[40] = ret; } catch(e) { }
try { vars[86].toJSON = vars[57]; } catch(e) { }
try { var ret = LuHigh(arg6); if(ret) vars[88] = ret; } catch(e) { }
try { var ret = Array.prototype.toString.call(vars[47]); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = Array.prototype.toString.call(vars[47]); if(ret) vars[26] = ret; } catch(e) { }
try { var ret = URIError(vars[35], vars[75], vars[35]); if(ret) vars[19] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[48], vars[32], vars[2]); if(ret) vars[51] = ret; } catch(e) { }
try { var ret = Enumerator(); if(ret) vars[35] = ret; } catch(e) { }
try { vars[18].input = vars[29]; } catch(e) { }
try { var ret = Date.UTC(arg4, vars[21], vars[49], vars[69], vars[45], Infinity, vars[63]); if(ret) vars[10] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[11], Array(4097).join(String.fromCharCode(49)) + Array(65).join(String.fromCharCode(55, 98, 118))); } catch(e) { }
try { var ret = new ReferenceError(vars[5], vars[4], vars[82]); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = ActiveXObject(0, vars[48]); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = String.prototype.toLowerCase.call(vars[71]); if(ret) vars[11] = ret; } catch(e) { }
try { vars[62].toLocaleString = f8; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[51], vars[39], vars[21], vars[1], vars[75]); if(ret) vars[69] = ret; } catch(e) { }
try { var ret = new EvalError(true, vars[5], 1000); if(ret) vars[6] = ret; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[77], vars[47], vars[54]); if(ret) vars[11] = ret; } catch(e) { }
try { var ret = Boolean.prototype.toString.call(vars[48]); if(ret) vars[34] = ret; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[81]); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = GetObject(vars[52], vars[73]); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = String.prototype.strike.call(vars[44], Infinity); if(ret) vars[28] = ret; } catch(e) { }
try { var ret = vars[68].callee; if(ret) vars[47] = ret; } catch(e) { }
try { var ret = new ActiveXObject(vars[63], 'a'); if(ret) vars[66] = ret; } catch(e) { }
try { vars[78].toString = f6; } catch(e) { }
try { vars[17].valueOf = f7; } catch(e) { }
try { var ret = new Date(vars[42]); if(ret) vars[43] = ret; } catch(e) { }
try { var ret = new RegExp(Array(1025).join(String.fromCharCode(86, 84, 16)) + Array(17).join(String.fromCharCode(34, 101, 108)) + Array(4097).join(String.fromCharCode(103))); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = String.prototype.strike.call(vars[70], vars[38]); if(ret) vars[47] = ret; } catch(e) { }
try { var ret = VBArray.prototype.lbound.call(vars[52], vars[52]); if(ret) vars[88] = ret; } catch(e) { }
try { vars[41][10] = vars[8]; } catch(e) { }
try { vars[96].constructor = true; } catch(e) { }
try { var ret = RangeError(vars[45], vars[68], -1); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleLowerCase.call(vars[16]); if(ret) vars[77] = ret; } catch(e) { }
try { var ret = unescape(vars[46]); if(ret) vars[93] = ret; } catch(e) { }
try { var ret = String.prototype.search.call(vars[6], vars[42]); if(ret) vars[62] = ret; } catch(e) { }
try { var ret = vars[87].foo; if(ret) vars[32] = ret; } catch(e) { }
try { var ret = vars[22].toString; if(ret) vars[59] = ret; } catch(e) { }
try { var ret = vars[40].arguments; if(ret) vars[68] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleLowerCase.call(vars[37]); if(ret) vars[14] = ret; } catch(e) { }
try { var ret = vars[99].lastIndex; if(ret) vars[67] = ret; } catch(e) { }
try { var ret = vars[29].apply(vars[17], vars[63]); if(ret) vars[11] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleLowerCase.call(vars[58]); if(ret) vars[19] = ret; } catch(e) { }
try { vars[50] = f0; } catch(e) { }
try { vars[79] = {}; } catch(e) { }
try { var ret = EvalError(Infinity, vars[27], 1); if(ret) vars[75] = ret; } catch(e) { }
try { vars[88].toString = f1; } catch(e) { }
try { var ret = vars[12].apply(vars[7], vars[64]); if(ret) vars[16] = ret; } catch(e) { }
try { var ret = Date.prototype.getMilliseconds.call(vars[14]); if(ret) vars[26] = ret; } catch(e) { }
try { vars[16].foo = vars[69]; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[89], arg2); if(ret) vars[75] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[27], Array(257).join(String.fromCharCode(39, 83))); } catch(e) { }
try { vars[55] = Array; } catch(e) { }
try { vars[48] = document.createElement("foo"); Object.defineProperty(vars[48], "source", {get: f9, set: f3} ); } catch(e) { }
try { var ret = vars[17].toString; if(ret) vars[29] = ret; } catch(e) { }
try { var ret = VBArray.prototype.lbound.call(vars[6], false); if(ret) vars[36] = ret; } catch(e) { }
try { var ret = vars[98].toString; if(ret) vars[8] = ret; } catch(e) { }
try { var ret = RegExp.$3; if(ret) vars[86] = ret; } catch(e) { }
try { var ret = unescape(vars[59]); if(ret) vars[23] = ret; } catch(e) { }
try { vars[5].toPrecision = f1; } catch(e) { }
try { var ret = Boolean.prototype.toJSON.call(vars[29]); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = decodeURIComponent(vars[57]); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = parseInt(10); if(ret) vars[55] = ret; } catch(e) { }
try { var ret = vars[77].call(vars[22], vars[87], 'a', true, false, vars[34]); if(ret) vars[87] = ret; } catch(e) { }
try { vars[92].arguments = arg3; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[80], f1); if(ret) vars[23] = ret; } catch(e) { }
try { var ret = RegExp.lastParen; if(ret) vars[52] = ret; } catch(e) { }
try { var ret = RegExp.$7; if(ret) vars[81] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[60]); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[52], vars[13], vars[69]); if(ret) vars[56] = ret; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[3], false); if(ret) vars[15] = ret; } catch(e) { }
try { var ret = Date(false); if(ret) vars[20] = ret; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[6], vars[58], vars[53], arg4, vars[56]); if(ret) vars[67] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[54], Infinity); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[95], vars[3]); if(ret) vars[91] = ret; } catch(e) { }
try { var ret = Error(vars[13]); if(ret) vars[28] = ret; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[44], vars[33], vars[23], false); if(ret) vars[14] = ret; } catch(e) { }
try { vars[71].toString = f6; } catch(e) { }
try { vars[76].toPrecision = vars[19]; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[24], vars[13], false); if(ret) vars[45] = ret; } catch(e) { }
try { var ret = vars[98][100]; if(ret) vars[30] = ret; } catch(e) { }
try { var ret = vars[28].global; if(ret) vars[68] = ret; } catch(e) { }
try { var ret = RegExp.index; if(ret) vars[23] = ret; } catch(e) { }
try { vars[86] = Array; } catch(e) { }
try { vars[59][1000] = arg1; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[90], f7); if(ret) vars[83] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[0], Array(257).join(String.fromCharCode(31)) + Array(65537).join(String.fromCharCode(79, 72)) + Array(65).join(String.fromCharCode(42, 89))); } catch(e) { }
try { var ret = String.prototype.slice.call(vars[91], vars[14]); if(ret) vars[16] = ret; } catch(e) { }
try { vars[37] = RegExp; } catch(e) { }
try { var ret = Date.prototype.toLocaleString.call(vars[41]); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = new EvalError('a', 'a', vars[91]); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = Date(vars[95]); if(ret) vars[24] = ret; } catch(e) { }
try { var ret = new ActiveXObject(0, false); if(ret) vars[5] = ret; } catch(e) { }
try { var ret = Object.getOwnPropertyDescriptor(vars[53], Infinity); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = Enumerator(); if(ret) vars[19] = ret; } catch(e) { }
try { var ret = Array.prototype.unshift.call(vars[36], false, 'a'); if(ret) vars[29] = ret; } catch(e) { }
try { vars[23].toLocaleString = f2; } catch(e) { }
try { var ret = ReferenceError(true, vars[93], vars[46]); if(ret) vars[0] = ret; } catch(e) { }
try { function f_inner_63() { return f2(); } vars[64] = f_inner_63; } catch(e) { }
try { var ret = new RegExp(); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[33], vars[92], vars[98]); if(ret) vars[52] = ret; } catch(e) { }
try { var ret = VBArray(vars[34]); if(ret) vars[86] = ret; } catch(e) { }
try { vars[70] = Array; } catch(e) { }
try { vars[57].arguments = Infinity; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[25], arg6); if(ret) vars[34] = ret; } catch(e) { }
try { var ret = decodeURI(arg8); if(ret) vars[61] = ret; } catch(e) { }
try { var ret = decodeURI(5); if(ret) vars[83] = ret; } catch(e) { }
try { var ret = vars[65][2]; if(ret) vars[59] = ret; } catch(e) { }
try { var ret = URIError(vars[53], vars[79], false); if(ret) vars[99] = ret; } catch(e) { }
try { var ret = vars[47].callee; if(ret) vars[70] = ret; } catch(e) { }
try { var ret = vars[3].options; if(ret) vars[68] = ret; } catch(e) { }
try { var ret = RegExp.$4; if(ret) vars[32] = ret; } catch(e) { }
try { var ret = Error(); if(ret) vars[23] = ret; } catch(e) { }
try { var ret = ActiveXObject(10, vars[94]); if(ret) vars[22] = ret; } catch(e) { }
try { var ret = EvalError(5, vars[8], Infinity); if(ret) vars[82] = ret; } catch(e) { }
try { var ret = new RegExp(); if(ret) vars[44] = ret; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[95], vars[0]); if(ret) vars[65] = ret; } catch(e) { }
try { var ret = RegExp.lastIndex; if(ret) vars[5] = ret; } catch(e) { }
try { vars[82] = JSON; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[30], vars[47], 'a'); if(ret) vars[4] = ret; } catch(e) { }
try { vars[5] = {}; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[28], vars[63], vars[31]); if(ret) vars[82] = ret; } catch(e) { }
try { var ret = new RuntimeObject(); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[27], true, Infinity); if(ret) vars[36] = ret; } catch(e) { }
try { var ret = URIError(true, vars[99], true); if(ret) vars[14] = ret; } catch(e) { }
try { var ret = Array.prototype.reverse.call(vars[37]); if(ret) vars[58] = ret; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[76], 'a'); if(ret) vars[38] = ret; } catch(e) { }
try { var ret = RegExp.leftContext; if(ret) vars[53] = ret; } catch(e) { }
try { var ret = vars[25][1]; if(ret) vars[95] = ret; } catch(e) { }
try { vars[36].toJSON = true; } catch(e) { }
try { var ret = VBArray(); if(ret) vars[77] = ret; } catch(e) { }
try { var ret = vars[18].callee; if(ret) vars[43] = ret; } catch(e) { }
try { var ret = new RangeError('a', vars[66], vars[79]); if(ret) vars[36] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[77], vars[7]); if(ret) vars[39] = ret; } catch(e) { }
try { var ret = vars[52].arguments; if(ret) vars[8] = ret; } catch(e) { }
try { vars[48].prototype = false; } catch(e) { }
try { var ret = arg9; if(ret) vars[33] = ret; } catch(e) { }
try { vars[3] = {}; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[2], 'a', vars[21]); if(ret) vars[49] = ret; } catch(e) { }
try { vars[22] = Boolean; } catch(e) { }
try { var ret = vars[3][1]; if(ret) vars[65] = ret; } catch(e) { }
try { var ret = new RegExp(); if(ret) vars[41] = ret; } catch(e) { }
try { var ret = Array.prototype.toLocaleString.call(vars[24]); if(ret) vars[55] = ret; } catch(e) { }
try { var ret = vars[97].arguments; if(ret) vars[36] = ret; } catch(e) { }
try { var ret = RuntimeObject(); if(ret) vars[40] = ret; } catch(e) { }
try { var ret = new Error(false, vars[69], vars[35]); if(ret) vars[91] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[54], vars[79], 'a'); if(ret) vars[27] = ret; } catch(e) { }
try { vars[95].valueOf = 'a'; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[58], vars[29]); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = new Array(arg1, 4, Infinity); if(ret) vars[53] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[97], Array(65).join(String.fromCharCode(119))); } catch(e) { }
try { vars[48].toPrecision = f6; } catch(e) { }
try { vars[86] = this; } catch(e) { }
try { var ret = Array(vars[14]); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = RegExp.lastParen; if(ret) vars[48] = ret; } catch(e) { }
try { vars[50].options = false; } catch(e) { }
try { var ret = LuHigh(vars[28]); if(ret) vars[62] = ret; } catch(e) { }
try { var ret = Debug.write(true); if(ret) vars[43] = ret; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[62]); if(ret) vars[49] = ret; } catch(e) { }
try { function f_inner_37() { return f6(); } vars[23] = f_inner_37; } catch(e) { }
try { var ret = vars[32].toJSON; if(ret) vars[57] = ret; } catch(e) { }
try { var ret = Date(arg6, false, Infinity, vars[66], vars[78], 'a', vars[94]); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = Error(vars[49]); if(ret) vars[77] = ret; } catch(e) { }
try { var ret = new Enumerator(); if(ret) vars[64] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleUpperCase.call(vars[97]); if(ret) vars[25] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[30], false, vars[40]); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = GetObject(vars[14]); if(ret) vars[85] = ret; } catch(e) { }
try { vars[97].valueOf = arg1; } catch(e) { }
try { vars[50].toPrecision = f5; } catch(e) { }
try { RegExp.prototype.compile.call(vars[34], vars[48], 'a'); } catch(e) { }
try { var ret = Object.getOwnPropertyDescriptor(vars[29], vars[84]); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = VBArray.prototype.dimensions.call(vars[88]); if(ret) vars[56] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[46], 2147483648, 'a'); if(ret) vars[64] = ret; } catch(e) { }
try { var ret = Error(vars[52]); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[99], vars[97]); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = Array.prototype.toLocaleString.call(vars[32]); if(ret) vars[72] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[51], vars[41]); } catch(e) { }
try { var ret = new vars[57](vars[27], vars[46], vars[5], vars[5], vars[47]); if(ret) vars[41] = ret; } catch(e) { }
try { var ret = String.prototype.strike.call(vars[62], true); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = VBArray.prototype.dimensions.call(vars[78]); if(ret) vars[7] = ret; } catch(e) { }
try { vars[31].foo = Infinity; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[66], arg4, true, vars[73]); if(ret) vars[83] = ret; } catch(e) { }
try { vars[69].global = arg4; } catch(e) { }
try { var ret = Date.prototype.toLocaleString.call(vars[40]); if(ret) vars[8] = ret; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[50], arg2, vars[52], false, vars[94]); if(ret) vars[77] = ret; } catch(e) { }
try { vars[79].lastIndex = 'a'; } catch(e) { }
try { var ret = new ActiveXObject(vars[90], vars[74]); if(ret) vars[79] = ret; } catch(e) { }
try { var ret = new Date(); if(ret) vars[63] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[69], vars[38], vars[74]); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = LuLow(vars[88]); if(ret) vars[9] = ret; } catch(e) { }
try { vars[62].prototype = -1; } catch(e) { }
try { var ret = vars[66].toFixed; if(ret) vars[88] = ret; } catch(e) { }
try { var ret = [arg8, vars[69], vars[54]]; if(ret) vars[76] = ret; } catch(e) { }
try { var ret = vars[74].options; if(ret) vars[23] = ret; } catch(e) { }
try { vars[88].arguments = vars[87]; } catch(e) { }
try { var ret = new Date('a'); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[8]); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = new RuntimeObject(); if(ret) vars[71] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[33], 'a', vars[0], 'a', 'a'); if(ret) vars[12] = ret; } catch(e) { }
try { var ret = RegExp.$4; if(ret) vars[35] = ret; } catch(e) { }
try { var ret = Date.prototype.getTimezoneOffset.call(vars[81]); if(ret) vars[23] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[84]); if(ret) vars[49] = ret; } catch(e) { }
try { var ret = new Enumerator(Infinity); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.atEnd.call(vars[12]); if(ret) vars[51] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[78]); if(ret) vars[12] = ret; } catch(e) { }
try { var ret = Date.prototype.toUTCString.call(vars[9]); if(ret) vars[56] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.atEnd.call(vars[77]); if(ret) vars[30] = ret; } catch(e) { }
try { vars[7].toExponential = vars[40]; } catch(e) { }
try { var ret = vars[95].call(vars[86], arg5, Infinity, arg3, Infinity, true); if(ret) vars[9] = ret; } catch(e) { }
try { vars[69].toLocaleString = vars[6]; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[56], vars[53], vars[36], 'a', vars[94]); if(ret) vars[82] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[69], vars[37]); if(ret) vars[84] = ret; } catch(e) { }
try { var ret = Enumerator(true); if(ret) vars[71] = ret; } catch(e) { }
try { var ret = Date('a'); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = vars[12].apply(vars[9], vars[86]); if(ret) vars[8] = ret; } catch(e) { }
try { var ret = JSON.stringify(1000); if(ret) vars[28] = ret; } catch(e) { }
try { var ret = new vars[14].apply(vars[92], vars[40]); if(ret) vars[8] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleUpperCase.call(vars[1]); if(ret) vars[61] = ret; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[91], vars[49], arg2, vars[4]); if(ret) vars[52] = ret; } catch(e) { }
try { var ret = vars[61].options; if(ret) vars[59] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[8], false); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = Date(); if(ret) vars[55] = ret; } catch(e) { }
try { var ret = vars[80].callee; if(ret) vars[37] = ret; } catch(e) { }
try { var ret = new Date('a', vars[61], arg9, vars[76], vars[27], vars[3], vars[20]); if(ret) vars[61] = ret; } catch(e) { }
try { vars[56] = ActiveXObject; } catch(e) { }
try { vars[4] = f0; } catch(e) { }
try { var ret = vars[85].arguments; if(ret) vars[15] = ret; } catch(e) { }
try { var ret = decodeURI(vars[47]); if(ret) vars[61] = ret; } catch(e) { }
try { var ret = new Date(); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[12], vars[32]); if(ret) vars[41] = ret; } catch(e) { }
try { var ret = new Array(); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = String.prototype.localeCompare.call(vars[31], vars[44]); if(ret) vars[75] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleTimeString.call(vars[66]); if(ret) vars[85] = ret; } catch(e) { }
try { var ret = String.prototype.charAt.call(vars[57], vars[2]); if(ret) vars[26] = ret; } catch(e) { }
try { vars[64] = {}; } catch(e) { }
try { var ret = new ActiveXObject(vars[24]); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = VBArray.prototype.toArray.call(vars[46]); if(ret) vars[34] = ret; } catch(e) { }
try { vars[2].input = vars[98]; } catch(e) { }
try { vars[87] = document.createElement("foo"); Object.defineProperty(vars[87], "valueOf", {get: f6, set: f8} ); } catch(e) { }
try { vars[70] = document.createElement("foo"); Object.defineProperty(vars[70], "toPrecision", {get: f4, set: f9} ); } catch(e) { }
try { vars[77].toPrecision = vars[46]; } catch(e) { }
try { var ret = Enumerator(100); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = vars[20].call(vars[56], vars[45], 'a', vars[29]); if(ret) vars[31] = ret; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[96], 'a', vars[91]); if(ret) vars[40] = ret; } catch(e) { }
try { vars[63] = this; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[80], vars[99]); if(ret) vars[99] = ret; } catch(e) { }
try { var ret = vars[74].lastIndex; if(ret) vars[54] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[32]); if(ret) vars[23] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.moveFirst.call(vars[90]); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = String.prototype.toUpperCase.call(vars[87]); if(ret) vars[46] = ret; } catch(e) { }
try { var ret = URIError(vars[36], arg2, 'a'); if(ret) vars[39] = ret; } catch(e) { }
try { var ret = new Error(); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = new Error(vars[40]); if(ret) vars[21] = ret; } catch(e) { }
try { vars[20].input = Infinity; } catch(e) { }
try { var ret = Enumerator.prototype.moveFirst.call(vars[81]); if(ret) vars[76] = ret; } catch(e) { }
try { var ret = [false, Infinity, vars[43]]; if(ret) vars[4] = ret; } catch(e) { }
try { var ret = vars[12][4294967296]; if(ret) vars[22] = ret; } catch(e) { }
try { var ret = Error(); if(ret) vars[97] = ret; } catch(e) { }
try { vars[99] = Error; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[45], vars[94]); if(ret) vars[52] = ret; } catch(e) { }
try { var ret = new RegExp(Array(65537).join(String.fromCharCode(65)) + Array(17).join(String.fromCharCode(60)) + Array(257).join(String.fromCharCode(10, 108))); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = new RangeError(10, vars[54], vars[28]); if(ret) vars[52] = ret; } catch(e) { }
try { var ret = new Array(vars[20]); if(ret) vars[99] = ret; } catch(e) { }
try { var ret = vars[25].toFixed; if(ret) vars[59] = ret; } catch(e) { }
try { var ret = RegExp.$3; if(ret) vars[13] = ret; } catch(e) { }
try { var ret = Array(4097).join(String.fromCharCode(113)) + Array(65537).join(String.fromCharCode(74, 127, 21)) + Array(4097).join(String.fromCharCode(75, 85, 28)); if(ret) vars[63] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[95], Infinity); if(ret) vars[31] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[87], vars[17], vars[78]); if(ret) vars[24] = ret; } catch(e) { }
try { var ret = Array.prototype.unshift.call(vars[16], vars[17], vars[63]); if(ret) vars[83] = ret; } catch(e) { }
try { vars[32].toExponential = Infinity; } catch(e) { }
try { var ret = new Array(); if(ret) vars[25] = ret; } catch(e) { }
try { var ret = vars[2].call(vars[95]); if(ret) vars[44] = ret; } catch(e) { }
try { var ret = VBArray.prototype.toArray.call(vars[79]); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = Array(65537).join(String.fromCharCode(40)); if(ret) vars[29] = ret; } catch(e) { }
try { var ret = Date.prototype.toJSON.call(vars[58]); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = String.prototype.localeCompare.call(vars[13], vars[64]); if(ret) vars[12] = ret; } catch(e) { }
try { var ret = vars[32].toJSON; if(ret) vars[86] = ret; } catch(e) { }
try { vars[49].toExponential = vars[35]; } catch(e) { }
try { var ret = vars[37].apply(vars[21], vars[77]); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = new URIError(vars[41], vars[79], false); if(ret) vars[54] = ret; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[54], vars[79]); if(ret) vars[70] = ret; } catch(e) { }
try { var ret = vars[20].toPrecision; if(ret) vars[50] = ret; } catch(e) { }
try { var ret = EncodeURI('a'); if(ret) vars[79] = ret; } catch(e) { }
try { vars[72] = {}; } catch(e) { }
try { var ret = new vars[50](vars[1], Infinity, vars[67], 'a', vars[22]); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[53], vars[7], f8); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = RegExp(Array(257).join(String.fromCharCode(62)), 'mg'); if(ret) vars[69] = ret; } catch(e) { }
try { var ret = escape(1); if(ret) vars[49] = ret; } catch(e) { }
try { var ret = vars[67].options; if(ret) vars[47] = ret; } catch(e) { }
try { vars[94] = Function; } catch(e) { }
try { vars[59][2] = arg3; } catch(e) { }
try { vars[8].toArray = f5; } catch(e) { }
try { var ret = vars[24].lastIndex; if(ret) vars[51] = ret; } catch(e) { }
try { var ret = RegExp(Array(257).join(String.fromCharCode(40, 53)) + Array(65537).join(String.fromCharCode(0, 83)), 'mgg'); if(ret) vars[42] = ret; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[62], 'a', vars[21]); if(ret) vars[4] = ret; } catch(e) { }
try { var ret = Debug.writeln(vars[0], vars[75], vars[14]); if(ret) vars[73] = ret; } catch(e) { }
try { var ret = VBArray.prototype.lbound.call(vars[62], -1); if(ret) vars[10] = ret; } catch(e) { }
try { vars[17] = new Array(1); } catch(e) { }
try { var ret = String.prototype.slice.call(vars[50], arg4, vars[80]); if(ret) vars[36] = ret; } catch(e) { }
try { var ret = GetObject(false, vars[31]); if(ret) vars[88] = ret; } catch(e) { }
try { var ret = new Enumerator(true); if(ret) vars[82] = ret; } catch(e) { }
try { var ret = Debug.writeln(vars[79]); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = Date.parse('a'); if(ret) vars[70] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleUpperCase.call(vars[47]); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[35], vars[34], vars[95]); if(ret) vars[64] = ret; } catch(e) { }
try { var ret = vars[40].appy(vars[37], arg5); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = new Array(false, vars[72], vars[75]); if(ret) vars[47] = ret; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[40], vars[85], vars[53], vars[93], vars[66]); if(ret) vars[2] = ret; } catch(e) { }
try { var ret = vars[27].call(vars[99], vars[91], 1000000, vars[63], vars[33], vars[32]); if(ret) vars[67] = ret; } catch(e) { }
try { var ret = RuntimeObject(); if(ret) vars[14] = ret; } catch(e) { }
try { var ret = String.prototype.match.call(vars[51], vars[62]); if(ret) vars[20] = ret; } catch(e) { }
try { var ret = vars[47][100]; if(ret) vars[77] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[12], vars[30]); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = RegExp.$9; if(ret) vars[99] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[67], Array(1025).join(String.fromCharCode(23))); } catch(e) { }
try { var ret = vars[15].callee; if(ret) vars[99] = ret; } catch(e) { }
try { vars[31] = Boolean; } catch(e) { }
try { var ret = parseFloat(vars[55]); if(ret) vars[84] = ret; } catch(e) { }
try { var ret = vars[65].foo; if(ret) vars[36] = ret; } catch(e) { }
try { var ret = Date.parse(vars[93]); if(ret) vars[53] = ret; } catch(e) { }
try { var ret = RegExp.leftContext; if(ret) vars[36] = ret; } catch(e) { }
try { eval(Array(65537).join(String.fromCharCode(49, 38, 45)) + Array(17).join(String.fromCharCode(125, 64))); } catch(e) { }
try { var ret = new Array(1000000); if(ret) vars[61] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[77], Array(4097).join(String.fromCharCode(30, 4)) + Array(65).join(String.fromCharCode(69, 46)) + Array(65).join(String.fromCharCode(90, 127))); } catch(e) { }
try { var ret = RegExp.rightContext; if(ret) vars[32] = ret; } catch(e) { }
try { var ret = vars[14](vars[64], false, Infinity, true, 1000000); if(ret) vars[4] = ret; } catch(e) { }
try { var ret = Error(); if(ret) vars[17] = ret; } catch(e) { }
try { var ret = RegExp.leftContext; if(ret) vars[16] = ret; } catch(e) { }
try { var ret = Date(vars[94], Infinity, vars[41], arg2, vars[75], arg7, Infinity); if(ret) vars[17] = ret; } catch(e) { }
try { var ret = RegExp.$1; if(ret) vars[59] = ret; } catch(e) { }
try { vars[4] = new Array(5); } catch(e) { }
try { var ret = vars[71].toString; if(ret) vars[94] = ret; } catch(e) { }
try { vars[26] = JSON; } catch(e) { }
try { var ret = Date(); if(ret) vars[76] = ret; } catch(e) { }
try { var ret = parseFloat(vars[33]); if(ret) vars[85] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[68]); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = JSON.parse(vars[65]); if(ret) vars[41] = ret; } catch(e) { }
try { var ret = String.FromCharCode(arg6, vars[49], true); if(ret) vars[98] = ret; } catch(e) { }
try { vars[76] = {}; } catch(e) { }
try { var ret = Date.prototype.getFullYear.call(vars[43]); if(ret) vars[63] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[56]); if(ret) vars[24] = ret; } catch(e) { }
try { vars[7].prototype = arg2; } catch(e) { }
try { var ret = RegExp.input; if(ret) vars[28] = ret; } catch(e) { }
try { var ret = new Error(arg6); if(ret) vars[10] = ret; } catch(e) { }
try { vars[74] = RegExp; } catch(e) { }
try { vars[84].toPrecision = arg3; } catch(e) { }
try { vars[84][1] = vars[19]; } catch(e) { }
try { vars[13].toJSON = false; } catch(e) { }
try { var ret = vars[8](arg6, vars[44], -1, vars[25], vars[5]); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.moveFirst.call(vars[70]); if(ret) vars[23] = ret; } catch(e) { }
try { var ret = Debug.write(true, Infinity, vars[71]); if(ret) vars[17] = ret; } catch(e) { }
try { var ret = Function.prototype.toString.call(vars[57]); if(ret) vars[66] = ret; } catch(e) { }
try { var ret = new Array(vars[8]); if(ret) vars[12] = ret; } catch(e) { }
try { vars[89].toJSON = f2; } catch(e) { }
try { vars[94] = ActiveXObject; } catch(e) { }
try { var ret = new Date(vars[65]); if(ret) vars[13] = ret; } catch(e) { }
try { var ret = ['a', vars[9], Infinity]; if(ret) vars[11] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[93], true); if(ret) vars[50] = ret; } catch(e) { }
try { var ret = new Date(vars[38], Infinity, Infinity, vars[73], false, false, 'a'); if(ret) vars[61] = ret; } catch(e) { }
try { var ret = VBArray.prototype.toArray.call(vars[89]); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = Array(vars[74]); if(ret) vars[25] = ret; } catch(e) { }
try { var ret = RegExp.index; if(ret) vars[80] = ret; } catch(e) { }
try { var ret = Error(); if(ret) vars[93] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.moveFirst.call(vars[59]); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = Array.prototype.shift.call(vars[43]); if(ret) vars[51] = ret; } catch(e) { }
try { var ret = VBArray(vars[3]); if(ret) vars[49] = ret; } catch(e) { }
try { var ret = String.prototype.search.call(vars[23], vars[82]); if(ret) vars[6] = ret; } catch(e) { }
try { var ret = vars[67].prototype; if(ret) vars[49] = ret; } catch(e) { }
try { var ret = new Enumerator(); if(ret) vars[60] = ret; } catch(e) { }
try { var ret = vars[64].toExponential; if(ret) vars[22] = ret; } catch(e) { }
try { vars[25].constructor = vars[55]; } catch(e) { }
try { vars[40][2147483648] = true; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[16], vars[74], 'a', vars[52]); if(ret) vars[4] = ret; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[35], vars[60]); if(ret) vars[49] = ret; } catch(e) { }
try { var ret = vars[75].lastIndex; if(ret) vars[59] = ret; } catch(e) { }
try { var ret = Enumerator(); if(ret) vars[54] = ret; } catch(e) { }
try { vars[40] = RegExp; } catch(e) { }
try { function f_inner_7() { return f4(); } vars[86] = f_inner_7; } catch(e) { }
try { vars[93] = ActiveXObject; } catch(e) { }
try { var ret = Boolean.prototype.toString.call(vars[33]); if(ret) vars[80] = ret; } catch(e) { }
try { var ret = new RuntimeObject(); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = String.prototype.strike.call(vars[96], vars[34]); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = Debug.write('a'); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = Debug.write('a', Infinity, vars[20]); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = RegExp(Array(1025).join(String.fromCharCode(36, 83, 68)), 'im'); if(ret) vars[59] = ret; } catch(e) { }
try { var ret = EncodeURI(Infinity); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = Date.prototype.getFullYear.call(vars[91]); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = parseFloat(vars[19]); if(ret) vars[15] = ret; } catch(e) { }
try { vars[17].toString = f7; } catch(e) { }
try { RegExp.prototype.compile.call(vars[27], arg1, arg6); } catch(e) { }
try { var ret = String.prototype.match.call(vars[30], Infinity); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = RegExp.$6; if(ret) vars[8] = ret; } catch(e) { }
try { var ret = VBArray.prototype.lbound.call(vars[35], vars[2]); if(ret) vars[8] = ret; } catch(e) { }
try { vars[98] = {}; } catch(e) { }
try { var ret = RegExp.lastParen; if(ret) vars[26] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[1], vars[31]); if(ret) vars[23] = ret; } catch(e) { }
try { var ret = ActiveXObject(1000, 0); if(ret) vars[78] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[6]); if(ret) vars[45] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[51], true, arg1); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = Array.prototype.toString.call(vars[8]); if(ret) vars[53] = ret; } catch(e) { }
try { var ret = vars[59][1000000]; if(ret) vars[42] = ret; } catch(e) { }
try { var ret = RegExp.$9; if(ret) vars[7] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[44], vars[38]); if(ret) vars[73] = ret; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[46], vars[54], vars[0], arg8, false); if(ret) vars[86] = ret; } catch(e) { }
try { vars[34][1000] = vars[86]; } catch(e) { }
try { var ret = vars[88].source; if(ret) vars[33] = ret; } catch(e) { }
try { var ret = Boolean.prototype.valueOf.call(vars[88]); if(ret) vars[47] = ret; } catch(e) { }
try { vars[5] = new Array(1000); } catch(e) { }
try { var ret = vars[13].input; if(ret) vars[25] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[19], vars[19], vars[76]); if(ret) vars[97] = ret; } catch(e) { }
try { vars[4][100] = vars[12]; } catch(e) { }
try { var ret = Enumerator(vars[0]); if(ret) vars[61] = ret; } catch(e) { }
try { vars[70] = {}; } catch(e) { }
try { vars[49].arguments = vars[41]; } catch(e) { }
try { vars[48].toExponential = f0; } catch(e) { }
try { var ret = vars[90].constructor; if(ret) vars[56] = ret; } catch(e) { }
try { var ret = VBArray(); if(ret) vars[49] = ret; } catch(e) { }
try { var ret = RegExp.$3; if(ret) vars[37] = ret; } catch(e) { }
try { var ret = String.FromCharCode('a', Infinity, vars[10]); if(ret) vars[81] = ret; } catch(e) { }
try { var ret = Function.prototype.toString.call(vars[56]); if(ret) vars[61] = ret; } catch(e) { }
try { var ret = new Array(); if(ret) vars[13] = ret; } catch(e) { }
try { var ret = RegExp.$1; if(ret) vars[94] = ret; } catch(e) { }
try { var ret = RegExp.$4; if(ret) vars[20] = ret; } catch(e) { }
try { vars[63] = Array; } catch(e) { }
try { var ret = Date.parse(vars[35]); if(ret) vars[56] = ret; } catch(e) { }
try { vars[23] = ActiveXObject; } catch(e) { }
try { var ret = vars[45][4]; if(ret) vars[55] = ret; } catch(e) { }
try { var ret = vars[82].callee; if(ret) vars[60] = ret; } catch(e) { }
try { var ret = new URIError(vars[52], vars[38], Infinity); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[9], vars[8], Infinity); if(ret) vars[19] = ret; } catch(e) { }
try { vars[75].toArray = f6; } catch(e) { }
try { var ret = Enumerator.prototype.atEnd.call(vars[64]); if(ret) vars[70] = ret; } catch(e) { }
try { var ret = new vars[30].call(vars[28], vars[71], vars[93], vars[6], false, vars[13]); if(ret) vars[69] = ret; } catch(e) { }
try { var ret = new Error(true, true, true); if(ret) vars[65] = ret; } catch(e) { }
try { var ret = RegExp.$8; if(ret) vars[40] = ret; } catch(e) { }
try { var ret = RuntimeObject(); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[40], true); if(ret) vars[28] = ret; } catch(e) { }
try { vars[14].toArray = f9; } catch(e) { }
try { vars[71].global = Infinity; } catch(e) { }
try { var ret = vars[55].call(vars[95], arg3, false, 'a', arg8, vars[14]); if(ret) vars[66] = ret; } catch(e) { }
try { var ret = [vars[27], false, 'a']; if(ret) vars[23] = ret; } catch(e) { }
try { var ret = Date.prototype.getMilliseconds.call(vars[6]); if(ret) vars[80] = ret; } catch(e) { }
try { var ret = Object.defineProperty(vars[43], 'constructor', { configurable: 2, writable: vars[2], writable: 'a' }); if(ret) vars[8] = ret; } catch(e) { }
try { var ret = vars[63].options; if(ret) vars[37] = ret; } catch(e) { }
try { var ret = vars[9].toLocaleString; if(ret) vars[65] = ret; } catch(e) { }
try { var ret = RegExp.leftContext; if(ret) vars[31] = ret; } catch(e) { }
try { vars[87] = {}; } catch(e) { }
try { var ret = new Error(Infinity, Infinity, vars[48]); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[70], 1000); if(ret) vars[42] = ret; } catch(e) { }
try { var ret = decodeURI(vars[73]); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = new Date(); if(ret) vars[54] = ret; } catch(e) { }
try { var ret = []; if(ret) vars[18] = ret; } catch(e) { }
try { vars[8] = Boolean; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[95], 100); if(ret) vars[40] = ret; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[19], vars[29]); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = new Date(arg3, vars[55], vars[16], false, false, true, vars[19]); if(ret) vars[82] = ret; } catch(e) { }
try { var ret = ReferenceError(vars[87], -1, vars[86]); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = String.prototype.match.call(vars[36], 'a'); if(ret) vars[86] = ret; } catch(e) { }
try { vars[26].toArray = f2; } catch(e) { }
try { var ret = Debug.writeln('a'); if(ret) vars[59] = ret; } catch(e) { }
try { vars[87].callee = vars[42]; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[99], vars[65]); if(ret) vars[91] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[0], vars[17]); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = new Array(); if(ret) vars[34] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[41], 'a'); if(ret) vars[75] = ret; } catch(e) { }
try { var ret = Array.prototype.toLocaleString.call(vars[83]); if(ret) vars[41] = ret; } catch(e) { }
try { vars[45] = RegExp; } catch(e) { }
try { var ret = LuHigh(vars[3]); if(ret) vars[81] = ret; } catch(e) { }
try { vars[32].prototype = 'a'; } catch(e) { }
try { var ret = isFinite(vars[0]); if(ret) vars[77] = ret; } catch(e) { }
try { var ret = ReferenceError(vars[31], vars[15], vars[30]); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[25], vars[22]); if(ret) vars[40] = ret; } catch(e) { }
try { vars[10] = this; } catch(e) { }
try { vars[31] = Array(4097).join(String.fromCharCode(35, 118)); } catch(e) { }
try { vars[48].toJSON = vars[30]; } catch(e) { }
try { function f_inner_23() { return f9(); } vars[29] = f_inner_23; } catch(e) { }
try { RegExp.prototype.compile.call(vars[74], Array(4097).join(String.fromCharCode(70)), 'g'); } catch(e) { }
try { var ret = vars[5][4]; if(ret) vars[37] = ret; } catch(e) { }
try { var ret = Debug.writeln(0); if(ret) vars[56] = ret; } catch(e) { }
try { var ret = Error(arg1, 'a', Infinity); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = new Date(); if(ret) vars[97] = ret; } catch(e) { }
try { vars[61] = Error; } catch(e) { }
try { var ret = RegExp.$6; if(ret) vars[69] = ret; } catch(e) { }
try { var ret = RegExp.$5; if(ret) vars[34] = ret; } catch(e) { }
try { var ret = Date.prototype.toJSON.call(vars[78]); if(ret) vars[6] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.atEnd.call(vars[18]); if(ret) vars[64] = ret; } catch(e) { }
try { vars[59][1000000] = vars[14]; } catch(e) { }
try { var ret = decodeURIComponent(1000); if(ret) vars[12] = ret; } catch(e) { }
try { vars[92] = Array(1025).join(String.fromCharCode(79, 67, 6)) + Array(65).join(String.fromCharCode(16, 117)) + Array(1025).join(String.fromCharCode(40, 7)); } catch(e) { }
try { var ret = RegExp(); if(ret) vars[99] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[17], vars[6], false); } catch(e) { }
try { var ret = VBArray(vars[43]); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = String.prototype.toUpperCase.call(vars[38]); if(ret) vars[96] = ret; } catch(e) { }
try { vars[88].toLocaleString = vars[81]; } catch(e) { }
try { var ret = vars[51].foo; if(ret) vars[53] = ret; } catch(e) { }
try { var ret = Date.UTC(true, 'a', vars[83], vars[98], vars[56], vars[89], vars[15]); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = Array.prototype.unshift.call(vars[92], false, vars[52]); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = vars[7][5]; if(ret) vars[7] = ret; } catch(e) { }
try { var ret = RegExp.lastMatch; if(ret) vars[77] = ret; } catch(e) { }
try { vars[1].toFixed = vars[25]; } catch(e) { }
try { var ret = new Boolean(); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = vars[42].toJSON; if(ret) vars[57] = ret; } catch(e) { }
try { var ret = new RegExp(Array(65).join(String.fromCharCode(59)) + Array(1025).join(String.fromCharCode(3, 123, 2)), 'gg'); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = vars[49].prototype; if(ret) vars[81] = ret; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[61]); if(ret) vars[44] = ret; } catch(e) { }
try { var ret = Array.prototype.toLocaleString.call(vars[80]); if(ret) vars[79] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[21], vars[15], Infinity); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = new vars[67](true, vars[27], true, true, false); if(ret) vars[6] = ret; } catch(e) { }
try { var ret = vars[21].appy(vars[84], vars[76]); if(ret) vars[94] = ret; } catch(e) { }
try { var ret = Array.prototype.pop.call(vars[74]); if(ret) vars[39] = ret; } catch(e) { }
try { var ret = RuntimeObject(); if(ret) vars[71] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[37], vars[23], vars[78]); if(ret) vars[85] = ret; } catch(e) { }
try { var ret = RegExp.leftContext; if(ret) vars[7] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[31], Infinity, vars[39]); if(ret) vars[27] = ret; } catch(e) { }
try { vars[39][4] = vars[56]; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[68]); if(ret) vars[32] = ret; } catch(e) { }
try { vars[73] = {}; } catch(e) { }
try { var ret = new vars[5].apply(vars[62], vars[51]); if(ret) vars[34] = ret; } catch(e) { }
try { var ret = new VBArray(); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = encodeURIComponent(vars[32]); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = new Date(); if(ret) vars[77] = ret; } catch(e) { }
try { vars[84] = Enumerator; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[24], 'a'); if(ret) vars[31] = ret; } catch(e) { }
try { vars[6] = new Array(4294967296); } catch(e) { }
try { var ret = VBArray(); if(ret) vars[38] = ret; } catch(e) { }
try { var ret = Date.prototype.getFullYear.call(vars[9]); if(ret) vars[94] = ret; } catch(e) { }
try { var ret = Date.prototype.getFullYear.call(vars[26]); if(ret) vars[64] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[66], -1, vars[71]); if(ret) vars[76] = ret; } catch(e) { }
try { var ret = new Date(vars[94]); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = vars[80].call(vars[34], vars[47], false, arg6, 10, vars[8]); if(ret) vars[9] = ret; } catch(e) { }
try { vars[21] = Function; } catch(e) { }
try { var ret = EncodeURI(vars[96]); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = Object.getOwnPropertyDescriptor(vars[72], vars[9]); if(ret) vars[5] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[67]); if(ret) vars[62] = ret; } catch(e) { }
try { var ret = RegExp.$1; if(ret) vars[48] = ret; } catch(e) { }
try { var ret = RuntimeObject(); if(ret) vars[45] = ret; } catch(e) { }
try { var ret = new RegExp(); if(ret) vars[89] = ret; } catch(e) { }
try { vars[13].toString = vars[16]; } catch(e) { }
try { var ret = escape(vars[40]); if(ret) vars[99] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[0], vars[93], f4); if(ret) vars[83] = ret; } catch(e) { }
try { vars[92].caller = vars[94]; } catch(e) { }
try { var ret = new VBArray(); if(ret) vars[91] = ret; } catch(e) { }
try { var ret = Error(10); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = Array(1025).join(String.fromCharCode(78)); if(ret) vars[28] = ret; } catch(e) { }
try { var ret = vars[18].call(vars[89]); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = String.prototype.charAt.call(vars[8], vars[97]); if(ret) vars[97] = ret; } catch(e) { }
try { var ret = new URIError(arg1, vars[74], false); if(ret) vars[61] = ret; } catch(e) { }
try { vars[1].toLocaleString = f1; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[88], vars[37], vars[16]); if(ret) vars[83] = ret; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[0]); if(ret) vars[88] = ret; } catch(e) { }
try { vars[69].toJSON = vars[82]; } catch(e) { }
try { vars[84].toPrecision = 'a'; } catch(e) { }
try { var ret = unescape(false); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = String.prototype.anchor.call(vars[47], 'a'); if(ret) vars[46] = ret; } catch(e) { }
try { var ret = Boolean.prototype.toJSON.call(vars[68]); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = new vars[93](false, vars[64], false, Infinity, vars[87]); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[7], arg8, arg4); if(ret) vars[65] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[0]); if(ret) vars[43] = ret; } catch(e) { }
try { vars[97] = f1; } catch(e) { }
try { var ret = Date(vars[88]); if(ret) vars[43] = ret; } catch(e) { }
try { vars[30].toFixed = vars[15]; } catch(e) { }
try { vars[35].foo = vars[36]; } catch(e) { }
try { vars[42][0] = arg8; } catch(e) { }
try { vars[31][10] = arg6; } catch(e) { }
try { RegExp.prototype.compile.call(vars[70], Array(4097).join(String.fromCharCode(35, 78)), 'gi'); } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[91], vars[67], vars[61], false, vars[17]); if(ret) vars[76] = ret; } catch(e) { }
try { var ret = String.prototype.match.call(vars[34], 'a'); if(ret) vars[82] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[9], Array(257).join(String.fromCharCode(25, 120)) + Array(65537).join(String.fromCharCode(64, 60, 76)) + Array(65537).join(String.fromCharCode(86, 17)), 'mgg'); } catch(e) { }
try { var ret = Debug.write(arg1); if(ret) vars[75] = ret; } catch(e) { }
try { var ret = new Error(arg8); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = Error(); if(ret) vars[27] = ret; } catch(e) { }
try { vars[3].toFixed = arg1; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[34], 'a', arg3, Infinity); if(ret) vars[67] = ret; } catch(e) { }
try { var ret = Date.prototype.getMilliseconds.call(vars[86]); if(ret) vars[31] = ret; } catch(e) { }
try { var ret = Array.prototype.pop.call(vars[66]); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = Array.prototype.toString.call(vars[61]); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[53], vars[43]); if(ret) vars[34] = ret; } catch(e) { }
try { var ret = new vars[61](vars[51], vars[19], vars[60], 'a', vars[68]); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = vars[82].lastIndex; if(ret) vars[88] = ret; } catch(e) { }
try { var ret = vars[74][10]; if(ret) vars[12] = ret; } catch(e) { }
try { var ret = Boolean.prototype.toString.call(vars[47]); if(ret) vars[41] = ret; } catch(e) { }
try { var ret = Array.prototype.shift.call(vars[85]); if(ret) vars[65] = ret; } catch(e) { }
try { vars[53].toJSON = vars[21]; } catch(e) { }
try { var ret = vars[36].toPrecision; if(ret) vars[71] = ret; } catch(e) { }
try { var ret = VBArray.prototype.toArray.call(vars[65]); if(ret) vars[60] = ret; } catch(e) { }
try { var ret = new Error(vars[77], vars[16], vars[27]); if(ret) vars[86] = ret; } catch(e) { }
try { vars[26].constructor = arg2; } catch(e) { }
try { var ret = RegExp.lastMatch; if(ret) vars[15] = ret; } catch(e) { }
try { var ret = String.prototype.anchor.call(vars[65], vars[15]); if(ret) vars[40] = ret; } catch(e) { }
try { var ret = RegExp.$4; if(ret) vars[26] = ret; } catch(e) { }
try { var ret = ActiveXObject(vars[6]); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[7], vars[40], vars[89]); if(ret) vars[52] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[73], true, arg2); if(ret) vars[59] = ret; } catch(e) { }
try { var ret = vars[14][0]; if(ret) vars[31] = ret; } catch(e) { }
try { var ret = EncodeURI(vars[8]); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = String.FromCharCode(Infinity, vars[12], vars[65]); if(ret) vars[79] = ret; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[71], vars[42]); if(ret) vars[63] = ret; } catch(e) { }
try { var ret = Date(2); if(ret) vars[79] = ret; } catch(e) { }
try { vars[2].lastIndex = vars[49]; } catch(e) { }
try { vars[29].source = vars[25]; } catch(e) { }
try { var ret = String.prototype.toLocaleLowerCase.call(vars[34]); if(ret) vars[85] = ret; } catch(e) { }
try { var ret = vars[36].input; if(ret) vars[77] = ret; } catch(e) { }
try { vars[38] = RegExp; } catch(e) { }
try { var ret = Date.prototype.toLocaleString.call(vars[14]); if(ret) vars[14] = ret; } catch(e) { }
try { var ret = Array.prototype.reverse.call(vars[71]); if(ret) vars[5] = ret; } catch(e) { }
try { vars[43].toJSON = vars[37]; } catch(e) { }
try { var ret = VBArray(); if(ret) vars[3] = ret; } catch(e) { }
try { vars[0] = {}; } catch(e) { }
try { var ret = RegExp(); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = VBArray.prototype.ubound.call(vars[91], vars[29]); if(ret) vars[91] = ret; } catch(e) { }
try { var ret = String.prototype.charAt.call(vars[10], false); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = new Enumerator(); if(ret) vars[81] = ret; } catch(e) { }
try { var ret = new EvalError(true, arg6, vars[34]); if(ret) vars[8] = ret; } catch(e) { }
try { vars[11] = {}; } catch(e) { }
try { var ret = VBArray(vars[63]); if(ret) vars[85] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[89], false, Infinity); if(ret) vars[91] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[63], vars[39], Infinity); if(ret) vars[42] = ret; } catch(e) { }
try { var ret = RegExp.$7; if(ret) vars[21] = ret; } catch(e) { }
try { var ret = new Error('a', vars[13], vars[17]); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = VBArray.prototype.ubound.call(vars[50], false); if(ret) vars[31] = ret; } catch(e) { }
try { var ret = String.prototype.toUpperCase.call(vars[64]); if(ret) vars[16] = ret; } catch(e) { }
try { var ret = Date(false); if(ret) vars[61] = ret; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[76], vars[13], -1); if(ret) vars[60] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[16], 'a'); if(ret) vars[15] = ret; } catch(e) { }
try { var ret = new Date(false, false, vars[13], vars[25], vars[5], vars[19], vars[58]); if(ret) vars[45] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[80]); if(ret) vars[44] = ret; } catch(e) { }
try { var ret = vars[13][10]; if(ret) vars[93] = ret; } catch(e) { }
try { vars[31] = Object; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[77], vars[69]); if(ret) vars[56] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[15], arg3); if(ret) vars[58] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[67]); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[40]); if(ret) vars[42] = ret; } catch(e) { }
try { vars[53].caller = 5; } catch(e) { }
try { var ret = JSON.parse(true); if(ret) vars[78] = ret; } catch(e) { }
try { var ret = new Boolean(); if(ret) vars[24] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[4], Array(1025).join(String.fromCharCode(0)) + Array(257).join(String.fromCharCode(87, 37, 66)) + Array(257).join(String.fromCharCode(94, 95, 31))); } catch(e) { }
try { var ret = JSON.stringify(Infinity); if(ret) vars[53] = ret; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[24], f6); if(ret) vars[73] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[96]); if(ret) vars[41] = ret; } catch(e) { }
try { vars[9].toExponential = f3; } catch(e) { }
try { var ret = encodeURIComponent(arg9); if(ret) vars[42] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[96], arg8, vars[93]); if(ret) vars[13] = ret; } catch(e) { }
try { var ret = Date.parse(vars[7]); if(ret) vars[61] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[23], vars[21], 5); if(ret) vars[88] = ret; } catch(e) { }
try { var ret = EncodeURI(vars[70]); if(ret) vars[62] = ret; } catch(e) { }
try { vars[45].toPrecision = arg8; } catch(e) { }
//endjs
CollectGarbage();
return vars[22];

}

function f0(arg1, arg2, arg3) {
runcount.f0++; if(runcount.f0>2) return;
//alert(0);
//beginjs
try { var ret = vars[62].call(vars[63], 100, vars[94], false, Infinity, vars[74]); if(ret) vars[60] = ret; } catch(e) { }
try { var ret = new vars[42](vars[24], vars[44], vars[16], true, 1000); if(ret) vars[70] = ret; } catch(e) { }
try { var ret = vars[43](vars[22], false, vars[97], vars[15], vars[67]); if(ret) vars[84] = ret; } catch(e) { }
try { var ret = new vars[52].call(vars[88], arg4, 'a', vars[27], vars[84], vars[77]); if(ret) vars[89] = ret; } catch(e) { }
try { vars[11].toJSON = f5; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[9], 'a', vars[45], 1000); if(ret) vars[6] = ret; } catch(e) { }
try { var ret = RegExp.$3; if(ret) vars[21] = ret; } catch(e) { }
try { var ret = []; if(ret) vars[21] = ret; } catch(e) { }
try { vars[93][1000] = vars[93]; } catch(e) { }
try { var ret = VBArray.prototype.dimensions.call(vars[82]); if(ret) vars[47] = ret; } catch(e) { }
try { vars[63] = document.createElement("foo"); Object.defineProperty(vars[63], "toJSON", {get: f4, set: f6} ); } catch(e) { }
try { var ret = new ReferenceError(3, vars[46], vars[74]); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = Boolean(); if(ret) vars[79] = ret; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[55], vars[90], vars[90], false, 'a'); if(ret) vars[74] = ret; } catch(e) { }
try { vars[25] = Function; } catch(e) { }
try { var ret = RegExp.index; if(ret) vars[32] = ret; } catch(e) { }
try { var ret = RegExp(); if(ret) vars[58] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[5], true); } catch(e) { }
try { var ret = Function.prototype.call.call(vars[77], vars[49]); if(ret) vars[61] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[61], Infinity); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = vars[80].toExponential; if(ret) vars[13] = ret; } catch(e) { }
try { var ret = new Error(vars[26], vars[45], 3); if(ret) vars[28] = ret; } catch(e) { }
try { var ret = GetObject(vars[60]); if(ret) vars[1] = ret; } catch(e) { }
try { vars[15][100] = vars[92]; } catch(e) { }
try { var ret = vars[68].length; if(ret) vars[76] = ret; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[15], f9); if(ret) vars[79] = ret; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[11], vars[13], vars[88], vars[1], arg4); if(ret) vars[40] = ret; } catch(e) { }
try { var ret = new VBArray(); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = Date(Infinity, arg3, vars[84], vars[90], vars[69], vars[92], arg8); if(ret) vars[62] = ret; } catch(e) { }
try { var ret = encodeURIComponent(arg2); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = vars[58].foo; if(ret) vars[8] = ret; } catch(e) { }
try { vars[50].toFixed = f3; } catch(e) { }
try { var ret = new vars[57].apply(vars[0], false); if(ret) vars[79] = ret; } catch(e) { }
try { var ret = new vars[44].call(vars[90], true, vars[5], vars[10], vars[75], 'a'); if(ret) vars[58] = ret; } catch(e) { }
try { vars[50] = RegExp; } catch(e) { }
try { vars[69].toLocaleString = f2; } catch(e) { }
try { var ret = RegExp.lastIndex; if(ret) vars[60] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[43], 4294967296, vars[13]); if(ret) vars[66] = ret; } catch(e) { }
try { var ret = RegExp.$9; if(ret) vars[16] = ret; } catch(e) { }
try { var ret = RegExp.$6; if(ret) vars[97] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.atEnd.call(vars[8]); if(ret) vars[90] = ret; } catch(e) { }
try { vars[13].toFixed = 3; } catch(e) { }
try { var ret = String.prototype.charAt.call(vars[13], vars[67]); if(ret) vars[85] = ret; } catch(e) { }
try { var ret = []; if(ret) vars[84] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.moveFirst.call(vars[65]); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[35], 'a', vars[70]); if(ret) vars[89] = ret; } catch(e) { }
try { vars[11] = new Array(100); } catch(e) { }
try { var ret = new VBArray(vars[95]); if(ret) vars[71] = ret; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[47], 2147483648, vars[56]); if(ret) vars[26] = ret; } catch(e) { }
try { vars[56] = Error; } catch(e) { }
try { var ret = Debug.write(vars[75], vars[91], vars[2]); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = new ActiveXObject(false, 'a'); if(ret) vars[73] = ret; } catch(e) { }
try { var ret = new VBArray(); if(ret) vars[32] = ret; } catch(e) { }
try { var ret = LuLow('a'); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = LuHigh(vars[38]); if(ret) vars[63] = ret; } catch(e) { }
try { var ret = new RegExp(); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = vars[87].toLocaleString; if(ret) vars[83] = ret; } catch(e) { }
try { var ret = VBArray.prototype.lbound.call(vars[66], vars[2]); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = String.prototype.toUpperCase.call(vars[91]); if(ret) vars[14] = ret; } catch(e) { }
try { var ret = new VBArray(); if(ret) vars[64] = ret; } catch(e) { }
try { var ret = RegExp.$9; if(ret) vars[55] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[85], vars[72]); } catch(e) { }
try { var ret = vars[89](arg1, 5, 'a', true, vars[81]); if(ret) vars[37] = ret; } catch(e) { }
try { vars[82] = new Array(-1); } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[7], vars[95], 536870912); if(ret) vars[41] = ret; } catch(e) { }
try { var ret = VBArray.prototype.dimensions.call(vars[88]); if(ret) vars[24] = ret; } catch(e) { }
try { var ret = Array(); if(ret) vars[82] = ret; } catch(e) { }
try { var ret = GetObject(Infinity); if(ret) vars[12] = ret; } catch(e) { }
try { var ret = RegExp.$5; if(ret) vars[77] = ret; } catch(e) { }
try { vars[2].callee = Infinity; } catch(e) { }
try { var ret = Date.prototype.getFullYear.call(vars[43]); if(ret) vars[41] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[65], vars[1], 5); if(ret) vars[78] = ret; } catch(e) { }
try { vars[69].toPrecision = 'a'; } catch(e) { }
try { vars[8].toLocaleString = f2; } catch(e) { }
try { var ret = decodeURIComponent(vars[84]); if(ret) vars[41] = ret; } catch(e) { }
try { var ret = VBArray.prototype.toArray.call(vars[70]); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = Array(4097).join(String.fromCharCode(42)) + Array(1025).join(String.fromCharCode(92)) + Array(17).join(String.fromCharCode(95, 38, 9)); if(ret) vars[23] = ret; } catch(e) { }
try { var ret = RegExp.$3; if(ret) vars[23] = ret; } catch(e) { }
try { var ret = RegExp.lastMatch; if(ret) vars[15] = ret; } catch(e) { }
try { var ret = Date.prototype.getTimezoneOffset.call(vars[8]); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[37], arg2); if(ret) vars[91] = ret; } catch(e) { }
try { var ret = Debug.writeln(Infinity); if(ret) vars[2] = ret; } catch(e) { }
try { vars[42] = JSON; } catch(e) { }
try { vars[23].valueOf = f5; } catch(e) { }
try { var ret = vars[30](vars[46], vars[39], vars[67], vars[74], vars[12]); if(ret) vars[78] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[31], vars[89]); if(ret) vars[41] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[10], vars[92]); } catch(e) { }
try { var ret = Function.prototype.toString.call(vars[24]); if(ret) vars[99] = ret; } catch(e) { }
try { var ret = new vars[89].call(vars[49], Infinity, vars[55], false, vars[5], vars[13]); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[72]); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = VBArray(vars[31]); if(ret) vars[26] = ret; } catch(e) { }
try { vars[0] = Date; } catch(e) { }
try { var ret = new VBArray(vars[84]); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = Date.prototype.valueOf.call(vars[32]); if(ret) vars[1] = ret; } catch(e) { }
try { vars[5].toFixed = f0; } catch(e) { }
try { vars[39] = document.createElement("foo"); Object.defineProperty(vars[39], "arguments", {get: f0, set: f6} ); } catch(e) { }
try { var ret = Object.defineProperty(vars[21], 'arguments', { enumerable: 'a', get: f3, value: vars[30] }); if(ret) vars[30] = ret; } catch(e) { }
try { vars[32][3] = vars[64]; } catch(e) { }
try { vars[78] = document.createElement("foo"); Object.defineProperty(vars[78], "1", {get: f2, set: f4} ); } catch(e) { }
try { var ret = vars[2].valueOf; if(ret) vars[37] = ret; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[83], vars[3]); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = Debug.write(vars[48]); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = new Array(); if(ret) vars[57] = ret; } catch(e) { }
try { vars[11].callee = vars[93]; } catch(e) { }
try { var ret = String.prototype.search.call(vars[82], -1); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = RegExp(Array(4097).join(String.fromCharCode(124)) + Array(1025).join(String.fromCharCode(88, 78))); if(ret) vars[88] = ret; } catch(e) { }
try { var ret = vars[57].callee; if(ret) vars[67] = ret; } catch(e) { }
try { var ret = String.prototype.charAt.call(vars[21], 100); if(ret) vars[64] = ret; } catch(e) { }
try { vars[79][4] = 4; } catch(e) { }
try { var ret = DblFromLus(true); if(ret) vars[44] = ret; } catch(e) { }
try { var ret = vars[55].source; if(ret) vars[3] = ret; } catch(e) { }
try { var ret = Enumerator(); if(ret) vars[44] = ret; } catch(e) { }
try { var ret = new VBArray(); if(ret) vars[75] = ret; } catch(e) { }
try { function f_inner_74() { return f4(); } vars[91] = f_inner_74; } catch(e) { }
try { var ret = vars[22].lastIndex; if(ret) vars[82] = ret; } catch(e) { }
try { var ret = vars[40].arguments; if(ret) vars[97] = ret; } catch(e) { }
try { var ret = new vars[55].call(vars[21], vars[36], vars[12], true, vars[82], false); if(ret) vars[84] = ret; } catch(e) { }
try { var ret = RegExp(); if(ret) vars[94] = ret; } catch(e) { }
try { vars[16][1000000] = vars[98]; } catch(e) { }
try { vars[3].toLocaleString = f2; } catch(e) { }
try { var ret = Error(); if(ret) vars[21] = ret; } catch(e) { }
try { vars[77].global = vars[91]; } catch(e) { }
try { var ret = Array.prototype.shift.call(vars[56]); if(ret) vars[23] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[65], Infinity); } catch(e) { }
try { vars[48] = new Array(0); } catch(e) { }
try { vars[2] = Date; } catch(e) { }
try { vars[79] = {}; } catch(e) { }
try { vars[54] = Boolean; } catch(e) { }
try { var ret = VBArray.prototype.ubound.call(vars[9], true); if(ret) vars[24] = ret; } catch(e) { }
try { var ret = VBArray(); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[41], vars[91]); if(ret) vars[24] = ret; } catch(e) { }
try { vars[85].toString = vars[58]; } catch(e) { }
try { var ret = new ActiveXObject(vars[40], vars[58]); if(ret) vars[93] = ret; } catch(e) { }
try { var ret = RegExp.$2; if(ret) vars[58] = ret; } catch(e) { }
try { vars[48].toPrecision = f3; } catch(e) { }
try { var ret = new RegExp(); if(ret) vars[88] = ret; } catch(e) { }
try { vars[6] = document.createElement("foo"); Object.defineProperty(vars[6], "toFixed", {get: f6, set: f8} ); } catch(e) { }
try { var ret = new Enumerator(vars[67]); if(ret) vars[66] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[58], vars[24]); if(ret) vars[83] = ret; } catch(e) { }
try { var ret = new ActiveXObject(Infinity, false); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = vars[70].options; if(ret) vars[42] = ret; } catch(e) { }
try { vars[24].foo = vars[8]; } catch(e) { }
try { var ret = RegExp(); if(ret) vars[47] = ret; } catch(e) { }
try { var ret = String.prototype.strike.call(vars[64], arg8); if(ret) vars[53] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[93], arg3); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = Date.prototype.getFullYear.call(vars[5]); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[96], false); if(ret) vars[44] = ret; } catch(e) { }
try { var ret = String.FromCharCode(vars[38], 'a', arg3); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = Error.prototype.toString.call(vars[62]); if(ret) vars[23] = ret; } catch(e) { }
try { var ret = new ReferenceError(vars[24], Infinity, vars[11]); if(ret) vars[95] = ret; } catch(e) { }
try { var ret = decodeURIComponent(vars[38]); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = vars[26].length; if(ret) vars[30] = ret; } catch(e) { }
try { var ret = RegExp.input; if(ret) vars[8] = ret; } catch(e) { }
try { var ret = vars[24].source; if(ret) vars[45] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[39], vars[68], true); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = new Error(vars[37], vars[66], false); if(ret) vars[40] = ret; } catch(e) { }
try { var ret = VBArray.prototype.toArray.call(vars[2]); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = Array.prototype.toString.call(vars[97]); if(ret) vars[19] = ret; } catch(e) { }
try { var ret = new RuntimeObject(); if(ret) vars[97] = ret; } catch(e) { }
try { var ret = RegExp.$4; if(ret) vars[54] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[51], vars[22], Infinity, Infinity, true); if(ret) vars[56] = ret; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[86], f0); if(ret) vars[76] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[74], vars[31], vars[91]); if(ret) vars[25] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[2], Infinity); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[5], true, f6); if(ret) vars[49] = ret; } catch(e) { }
try { var ret = RegExp.$6; if(ret) vars[35] = ret; } catch(e) { }
try { var ret = Error(); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = Array.prototype.reverse.call(vars[88]); if(ret) vars[33] = ret; } catch(e) { }
try { vars[43] = new Array(5); } catch(e) { }
try { vars[60] = new Array(-1); } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[46], vars[30], Infinity); if(ret) vars[73] = ret; } catch(e) { }
try { var ret = RegExp(Array(65537).join(String.fromCharCode(12, 102)), 'i'); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = String.prototype.toUpperCase.call(vars[34]); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = vars[20].global; if(ret) vars[15] = ret; } catch(e) { }
try { var ret = escape('a'); if(ret) vars[97] = ret; } catch(e) { }
try { var ret = EncodeURI(false); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = vars[63].input; if(ret) vars[53] = ret; } catch(e) { }
try { vars[78] = {}; } catch(e) { }
try { vars[5].lastIndex = 3; } catch(e) { }
try { vars[66] = new Array(100); } catch(e) { }
try { var ret = new Error(); if(ret) vars[24] = ret; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[33], vars[57], vars[36], vars[13], 1); if(ret) vars[40] = ret; } catch(e) { }
try { var ret = Date.prototype.getMilliseconds.call(vars[5]); if(ret) vars[11] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[35], 100, f2); if(ret) vars[23] = ret; } catch(e) { }
try { vars[59].constructor = vars[85]; } catch(e) { }
try { var ret = Array(); if(ret) vars[51] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[1], -1); if(ret) vars[47] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[15], Infinity, f6); if(ret) vars[48] = ret; } catch(e) { }
try { vars[72] = document.createElement("foo"); Object.defineProperty(vars[72], "toString", {get: f3, set: f4} ); } catch(e) { }
try { var ret = String.prototype.substring.call(vars[83], vars[16], true); if(ret) vars[50] = ret; } catch(e) { }
try { var ret = vars[91].call(vars[42]); if(ret) vars[33] = ret; } catch(e) { }
try { vars[82][3] = vars[61]; } catch(e) { }
try { var ret = RegExp.lastParen; if(ret) vars[22] = ret; } catch(e) { }
try { var ret = Date.UTC(vars[34], vars[22], vars[45], vars[13], 'a', vars[36], vars[62]); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = Date.prototype.valueOf.call(vars[57]); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = new EvalError(vars[31], vars[70], vars[4]); if(ret) vars[52] = ret; } catch(e) { }
try { var ret = vars[26].toLocaleString; if(ret) vars[65] = ret; } catch(e) { }
try { var ret = encodeURIComponent(vars[21]); if(ret) vars[32] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[70]); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = RuntimeObject(); if(ret) vars[46] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[5], vars[70], vars[49]); if(ret) vars[23] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[88], arg2, vars[40]); } catch(e) { }
try { var ret = new Date(false); if(ret) vars[38] = ret; } catch(e) { }
try { var ret = Object.getOwnPropertyDescriptor(vars[44], vars[90]); if(ret) vars[71] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[54], true); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[94], Infinity); if(ret) vars[6] = ret; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[89], vars[13], vars[49], vars[53], vars[13]); if(ret) vars[73] = ret; } catch(e) { }
try { vars[84].toPrecision = f8; } catch(e) { }
try { vars[70].source = true; } catch(e) { }
try { var ret = encodeURIComponent(vars[12]); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = Date.prototype.getMilliseconds.call(vars[41]); if(ret) vars[43] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[57], 1000, arg4); if(ret) vars[22] = ret; } catch(e) { }
try { var ret = Debug.writeln(Infinity, vars[94], vars[1]); if(ret) vars[29] = ret; } catch(e) { }
try { var ret = decodeURI(arg8); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[53], vars[62]); if(ret) vars[77] = ret; } catch(e) { }
try { var ret = vars[66].valueOf; if(ret) vars[94] = ret; } catch(e) { }
try { vars[57] = Error; } catch(e) { }
try { vars[16] = this; } catch(e) { }
try { var ret = new Date(); if(ret) vars[6] = ret; } catch(e) { }
try { var ret = new URIError(Infinity, vars[98], true); if(ret) vars[38] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[67], vars[50], 100); if(ret) vars[79] = ret; } catch(e) { }
try { vars[91][1000000] = vars[90]; } catch(e) { }
try { function f_inner_89() { return f8(); } vars[22] = f_inner_89; } catch(e) { }
try { var ret = new vars[80].apply(vars[61], true); if(ret) vars[80] = ret; } catch(e) { }
try { vars[48] = new Array(1000); } catch(e) { }
try { var ret = new Error(); if(ret) vars[9] = ret; } catch(e) { }
try { vars[87].source = vars[82]; } catch(e) { }
try { var ret = Boolean.prototype.valueOf.call(vars[49]); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = unescape(true); if(ret) vars[18] = ret; } catch(e) { }
try { vars[5].toJSON = 'a'; } catch(e) { }
try { var ret = Date.prototype.getFullYear.call(vars[81]); if(ret) vars[45] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[50], vars[69]); if(ret) vars[69] = ret; } catch(e) { }
try { var ret = vars[93].appy(vars[4], arg6); if(ret) vars[38] = ret; } catch(e) { }
try { vars[62].toJSON = vars[76]; } catch(e) { }
try { var ret = new vars[93].call(vars[79], 'a', vars[83], false, vars[3], 'a'); if(ret) vars[50] = ret; } catch(e) { }
try { var ret = vars[88].appy(vars[55], arg4); if(ret) vars[49] = ret; } catch(e) { }
try { var ret = new RegExp(); if(ret) vars[63] = ret; } catch(e) { }
try { vars[43].foo = vars[62]; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[39], vars[44], 'a'); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = ActiveXObject(vars[44]); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleUpperCase.call(vars[99]); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = new RegExp(Array(65537).join(String.fromCharCode(75)) + Array(257).join(String.fromCharCode(84, 110)) + Array(4097).join(String.fromCharCode(99, 87, 76))); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[9], 4); if(ret) vars[94] = ret; } catch(e) { }
try { var ret = ActiveXObject(arg7); if(ret) vars[91] = ret; } catch(e) { }
try { var ret = JSON.stringify(Infinity); if(ret) vars[95] = ret; } catch(e) { }
try { vars[23].source = true; } catch(e) { }
try { var ret = VBArray(); if(ret) vars[61] = ret; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[76], vars[42], vars[44], arg2, vars[27]); if(ret) vars[2] = ret; } catch(e) { }
try { vars[3].toExponential = Infinity; } catch(e) { }
try { vars[96] = this; } catch(e) { }
try { vars[58] = Error; } catch(e) { }
try { var ret = vars[46][1]; if(ret) vars[48] = ret; } catch(e) { }
try { vars[6] = Object; } catch(e) { }
try { var ret = Object.defineProperty(vars[28], '2', { set: f6, writable: 'a', configurable: arg5 }); if(ret) vars[90] = ret; } catch(e) { }
try { vars[29][5] = false; } catch(e) { }
try { var ret = escape(arg4); if(ret) vars[54] = ret; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[13], Infinity); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[55]); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = Date.prototype.getTimezoneOffset.call(vars[49]); if(ret) vars[49] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[22], vars[5], arg2); } catch(e) { }
try { var ret = vars[70][10]; if(ret) vars[16] = ret; } catch(e) { }
try { vars[8] = Array; } catch(e) { }
try { var ret = new Date(vars[18], vars[80], vars[74], vars[81], vars[3], false, arg8); if(ret) vars[70] = ret; } catch(e) { }
try { var ret = vars[90].appy(vars[77], vars[70]); if(ret) vars[19] = ret; } catch(e) { }
try { var ret = vars[85].constructor; if(ret) vars[84] = ret; } catch(e) { }
try { vars[38] = new Array(10); } catch(e) { }
try { vars[33][3] = true; } catch(e) { }
try { var ret = vars[57].apply(vars[41], vars[42]); if(ret) vars[5] = ret; } catch(e) { }
try { var ret = Error(vars[49]); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = Object.defineProperty(vars[7], '5', { enumerable: true, enumerable: vars[45], set: f3 }); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[63], true, true); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = vars[93].callee; if(ret) vars[55] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[47], vars[32], vars[99]); if(ret) vars[6] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[78]); if(ret) vars[69] = ret; } catch(e) { }
try { var ret = Debug.write(0, vars[27], 'a'); if(ret) vars[99] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[33], vars[67], vars[39]); if(ret) vars[26] = ret; } catch(e) { }
try { var ret = RegExp.$3; if(ret) vars[55] = ret; } catch(e) { }
try { var ret = RegExp.$9; if(ret) vars[60] = ret; } catch(e) { }
try { vars[67] = new Array(0); } catch(e) { }
try { var ret = Boolean.prototype.valueOf.call(vars[26]); if(ret) vars[5] = ret; } catch(e) { }
try { var ret = Boolean(); if(ret) vars[54] = ret; } catch(e) { }
try { var ret = parseFloat(vars[70]); if(ret) vars[25] = ret; } catch(e) { }
try { var ret = []; if(ret) vars[24] = ret; } catch(e) { }
try { var ret = new RuntimeObject(); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = RegExp.lastIndex; if(ret) vars[95] = ret; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[80], vars[14], arg4, arg7, vars[11]); if(ret) vars[50] = ret; } catch(e) { }
try { var ret = Array.prototype.unshift.call(vars[17], vars[96], vars[5]); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = RegExp(Array(17).join(String.fromCharCode(1)), 'gi'); if(ret) vars[28] = ret; } catch(e) { }
try { var ret = Array.prototype.toLocaleString.call(vars[52]); if(ret) vars[16] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[69], false); if(ret) vars[46] = ret; } catch(e) { }
try { vars[80].lastIndex = false; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[71], 'a'); if(ret) vars[76] = ret; } catch(e) { }
try { var ret = new Date(); if(ret) vars[58] = ret; } catch(e) { }
try { var ret = DblFromLus(vars[42]); if(ret) vars[65] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[73], arg5, 'a'); if(ret) vars[47] = ret; } catch(e) { }
try { vars[44] = document.createElement("foo"); Object.defineProperty(vars[44], "options", {get: f2, set: f8} ); } catch(e) { }
try { var ret = Array.prototype.join.call(vars[75], true); if(ret) vars[25] = ret; } catch(e) { }
try { vars[97] = {}; } catch(e) { }
try { var ret = new RuntimeObject(); if(ret) vars[39] = ret; } catch(e) { }
try { vars[33].constructor = arg1; } catch(e) { }
try { vars[98][100] = 'a'; } catch(e) { }
try { var ret = LuHigh(false); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = RuntimeObject(); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = RegExp(Array(4097).join(String.fromCharCode(74, 77)) + Array(1025).join(String.fromCharCode(38))); if(ret) vars[45] = ret; } catch(e) { }
try { vars[99] = document.createElement("foo"); Object.defineProperty(vars[99], "4294967295", {get: f2, set: f7} ); } catch(e) { }
try { var ret = new Date(true, Infinity, vars[54], vars[69], vars[60], arg5, vars[92]); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = RegExp.$2; if(ret) vars[79] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[17], arg9, vars[99]); if(ret) vars[43] = ret; } catch(e) { }
try { var ret = RegExp.$9; if(ret) vars[75] = ret; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[91]); if(ret) vars[69] = ret; } catch(e) { }
try { var ret = RegExp.$6; if(ret) vars[17] = ret; } catch(e) { }
try { var ret = VBArray.prototype.lbound.call(vars[20], vars[91]); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = encodeURIComponent('a'); if(ret) vars[48] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[31], Array(1025).join(String.fromCharCode(27)) + Array(257).join(String.fromCharCode(0, 99)) + Array(1025).join(String.fromCharCode(50, 37, 30))); } catch(e) { }
try { var ret = String.prototype.slice.call(vars[56], vars[73], vars[29]); if(ret) vars[25] = ret; } catch(e) { }
try { var ret = RegExp.$5; if(ret) vars[77] = ret; } catch(e) { }
try { var ret = LuHigh(vars[10]); if(ret) vars[87] = ret; } catch(e) { }
try { vars[8] = {}; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[9], true); if(ret) vars[54] = ret; } catch(e) { }
try { vars[59].prototype = arg2; } catch(e) { }
try { var ret = isFinite(false); if(ret) vars[19] = ret; } catch(e) { }
try { var ret = unescape(vars[9]); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = String.prototype.anchor.call(vars[10], arg7); if(ret) vars[15] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleString.call(vars[21]); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = vars[41].prototype; if(ret) vars[55] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[98], true); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = RegExp.index; if(ret) vars[23] = ret; } catch(e) { }
try { var ret = decodeURI(arg2); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = Error(vars[85], 'a', vars[57]); if(ret) vars[18] = ret; } catch(e) { }
try { vars[4].length = 0; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[42], vars[99]); if(ret) vars[86] = ret; } catch(e) { }
try { vars[64] = RegExp; } catch(e) { }
try { var ret = new ActiveXObject(Infinity, vars[3]); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = DblFromLus(vars[77]); if(ret) vars[42] = ret; } catch(e) { }
try { var ret = vars[81](false, 'a', vars[62], 2147483647, vars[3]); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = Date.UTC(vars[27], vars[62], Infinity, Infinity, vars[3], true, true); if(ret) vars[50] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[21]); if(ret) vars[82] = ret; } catch(e) { }
try { vars[19].source = vars[38]; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[7], arg1, 10); if(ret) vars[48] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[82], Array(17).join(String.fromCharCode(125)) + Array(257).join(String.fromCharCode(122, 118, 61)) + Array(65).join(String.fromCharCode(68, 25, 115)), 'g'); } catch(e) { }
try { var ret = vars[42].toExponential; if(ret) vars[8] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.moveNext.call(vars[57]); if(ret) vars[70] = ret; } catch(e) { }
try { var ret = GetObject(Infinity); if(ret) vars[83] = ret; } catch(e) { }
try { var ret = vars[5].appy(vars[94], false); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = RegExp(); if(ret) vars[11] = ret; } catch(e) { }
try { var ret = Date.prototype.getTimezoneOffset.call(vars[12]); if(ret) vars[44] = ret; } catch(e) { }
try { var ret = RegExp(Array(17).join(String.fromCharCode(12)), 'g'); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[65], vars[30], vars[7], 100, Infinity); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = VBArray(); if(ret) vars[17] = ret; } catch(e) { }
try { vars[63] = this; } catch(e) { }
try { var ret = new Date(vars[98]); if(ret) vars[51] = ret; } catch(e) { }
try { vars[79] = document.createElement("foo"); } catch(e) { }
try { var ret = Boolean.prototype.toJSON.call(vars[33]); if(ret) vars[30] = ret; } catch(e) { }
try { vars[25] = Error; } catch(e) { }
try { var ret = Date.prototype.toUTCString.call(vars[52]); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = new Error(2); if(ret) vars[79] = ret; } catch(e) { }
try { vars[41].arguments = vars[43]; } catch(e) { }
try { var ret = new Error(vars[27]); if(ret) vars[93] = ret; } catch(e) { }
try { var ret = RegExp(Array(65537).join(String.fromCharCode(90, 106, 8)) + Array(65).join(String.fromCharCode(17, 32, 46)) + Array(1025).join(String.fromCharCode(55, 80)), 'm'); if(ret) vars[69] = ret; } catch(e) { }
try { var ret = Array(vars[33]); if(ret) vars[73] = ret; } catch(e) { }
try { var ret = VBArray.prototype.ubound.call(vars[9], vars[57]); if(ret) vars[74] = ret; } catch(e) { }
try { vars[35].valueOf = vars[68]; } catch(e) { }
try { var ret = vars[43].toString; if(ret) vars[4] = ret; } catch(e) { }
try { var ret = new ReferenceError(false, vars[71], vars[62]); if(ret) vars[13] = ret; } catch(e) { }
try { var ret = Array(); if(ret) vars[76] = ret; } catch(e) { }
try { var ret = new EvalError(vars[49], 1000, vars[11]); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = new Date(vars[44]); if(ret) vars[85] = ret; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[60], 4); if(ret) vars[98] = ret; } catch(e) { }
try { vars[73].toLocaleString = f0; } catch(e) { }
try { vars[15].toExponential = f4; } catch(e) { }
try { vars[40] = document.createElement("foo"); Object.defineProperty(vars[40], "length", {get: f3, set: f6} ); } catch(e) { }
try { vars[59] = document.createElement("foo"); Object.defineProperty(vars[59], "toExponential", {get: f7, set: f6} ); } catch(e) { }
try { var ret = vars[57].toFixed; if(ret) vars[95] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[74], vars[52], f5); if(ret) vars[31] = ret; } catch(e) { }
try { var ret = new Error(1000000, vars[20], Infinity); if(ret) vars[69] = ret; } catch(e) { }
try { var ret = Date.prototype.toJSON.call(vars[20]); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = String.FromCharCode(vars[58], vars[93], 1073741824); if(ret) vars[60] = ret; } catch(e) { }
try { RegExp.input = true; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[97], false); if(ret) vars[64] = ret; } catch(e) { }
try { var ret = Date.prototype.getTimezoneOffset.call(vars[85]); if(ret) vars[61] = ret; } catch(e) { }
try { var ret = URIError(vars[93], 1000000, vars[23]); if(ret) vars[73] = ret; } catch(e) { }
try { var ret = Date.prototype.getMilliseconds.call(vars[28]); if(ret) vars[22] = ret; } catch(e) { }
try { var ret = parseInt(vars[5]); if(ret) vars[32] = ret; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[90], vars[15]); if(ret) vars[40] = ret; } catch(e) { }
try { var ret = RegExp(Array(65).join(String.fromCharCode(24)) + Array(1025).join(String.fromCharCode(95, 8)) + Array(65537).join(String.fromCharCode(15, 66, 8))); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = unescape(vars[95]); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = RegExp.$3; if(ret) vars[69] = ret; } catch(e) { }
try { var ret = new Date(); if(ret) vars[97] = ret; } catch(e) { }
try { var ret = decodeURI(vars[40]); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = LuLow(vars[24]); if(ret) vars[61] = ret; } catch(e) { }
try { vars[6] = {}; } catch(e) { }
try { var ret = vars[63].constructor; if(ret) vars[44] = ret; } catch(e) { }
try { var ret = vars[21].length; if(ret) vars[68] = ret; } catch(e) { }
try { vars[84].toLocaleString = 'a'; } catch(e) { }
try { var ret = vars[95].call(vars[65], arg3, false, vars[82], 'a', vars[86]); if(ret) vars[83] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[57], Array(17).join(String.fromCharCode(9, 88))); } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[62], vars[1], true); if(ret) vars[80] = ret; } catch(e) { }
try { vars[1] = RegExp; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[29], vars[13]); if(ret) vars[80] = ret; } catch(e) { }
try { var ret = new Error('a', vars[18], vars[38]); if(ret) vars[82] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[46], Array(65).join(String.fromCharCode(73)) + Array(4097).join(String.fromCharCode(127, 55))); } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[86]); if(ret) vars[28] = ret; } catch(e) { }
try { vars[9] = {}; } catch(e) { }
try { vars[49] = Date; } catch(e) { }
try { vars[95].toPrecision = vars[35]; } catch(e) { }
try { var ret = ReferenceError(vars[16], Infinity, 'a'); if(ret) vars[81] = ret; } catch(e) { }
try { var ret = EncodeURI('a'); if(ret) vars[63] = ret; } catch(e) { }
try { var ret = JSON.stringify(vars[82]); if(ret) vars[73] = ret; } catch(e) { }
try { vars[4].input = 100; } catch(e) { }
try { vars[7].source = vars[69]; } catch(e) { }
try { var ret = VBArray.prototype.lbound.call(vars[14], true); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = new RegExp(Array(257).join(String.fromCharCode(56, 107, 113))); if(ret) vars[93] = ret; } catch(e) { }
try { var ret = new RuntimeObject(); if(ret) vars[23] = ret; } catch(e) { }
try { vars[38] = new Array(5); } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[51], arg6, arg1); if(ret) vars[69] = ret; } catch(e) { }
try { var ret = Error(); if(ret) vars[91] = ret; } catch(e) { }
try { vars[23].toLocaleString = f6; } catch(e) { }
try { var ret = RegExp.index; if(ret) vars[84] = ret; } catch(e) { }
try { vars[18] = new Array(2); } catch(e) { }
try { var ret = Enumerator.prototype.atEnd.call(vars[56]); if(ret) vars[26] = ret; } catch(e) { }
try { var ret = new VBArray(); if(ret) vars[66] = ret; } catch(e) { }
try { var ret = Array(); if(ret) vars[18] = ret; } catch(e) { }
try { vars[93].lastIndex = true; } catch(e) { }
try { vars[95].toArray = f7; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[72], Infinity, f3); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = vars[69][3]; if(ret) vars[81] = ret; } catch(e) { }
try { var ret = Boolean.prototype.toString.call(vars[89]); if(ret) vars[53] = ret; } catch(e) { }
try { var ret = String.prototype.toUpperCase.call(vars[27]); if(ret) vars[8] = ret; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[83], vars[1]); if(ret) vars[88] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[96], vars[24], arg8); if(ret) vars[94] = ret; } catch(e) { }
try { var ret = Boolean(); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = VBArray(vars[77]); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = vars[89].callee; if(ret) vars[51] = ret; } catch(e) { }
try { var ret = Debug.writeln(vars[58]); if(ret) vars[19] = ret; } catch(e) { }
try { var ret = parseInt(true); if(ret) vars[59] = ret; } catch(e) { }
try { var ret = JSON.parse('a'); if(ret) vars[44] = ret; } catch(e) { }
try { vars[54] = f2; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[4]); if(ret) vars[2] = ret; } catch(e) { }
try { var ret = new ReferenceError(-1, true, vars[44]); if(ret) vars[66] = ret; } catch(e) { }
try { var ret = new Date(); if(ret) vars[89] = ret; } catch(e) { }
try { vars[99] = {}; } catch(e) { }
try { var ret = URIError(vars[88], 'a', vars[1]); if(ret) vars[60] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[88], 536870911, vars[60]); if(ret) vars[84] = ret; } catch(e) { }
try { var ret = RegExp(); if(ret) vars[29] = ret; } catch(e) { }
try { vars[57].source = vars[37]; } catch(e) { }
try { vars[26].foo = false; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[63]); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = Date.prototype.getTimezoneOffset.call(vars[85]); if(ret) vars[95] = ret; } catch(e) { }
try { vars[92] = {}; } catch(e) { }
try { var ret = vars[25].constructor; if(ret) vars[48] = ret; } catch(e) { }
try { vars[29].toExponential = vars[49]; } catch(e) { }
try { var ret = vars[75].lastIndex; if(ret) vars[86] = ret; } catch(e) { }
try { var ret = Array(vars[22], 'a', 1); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.moveNext.call(vars[7]); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = vars[58].arguments; if(ret) vars[40] = ret; } catch(e) { }
try { var ret = Array.prototype.unshift.call(vars[98], vars[60], arg5); if(ret) vars[47] = ret; } catch(e) { }
try { var ret = new Date(arg5); if(ret) vars[22] = ret; } catch(e) { }
try { var ret = ReferenceError('a', vars[0], false); if(ret) vars[22] = ret; } catch(e) { }
try { var ret = vars[7].length; if(ret) vars[6] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[98], Array(17).join(String.fromCharCode(94, 22)) + Array(257).join(String.fromCharCode(62, 71))); } catch(e) { }
try { var ret = String.prototype.split.call(vars[60], 5); if(ret) vars[11] = ret; } catch(e) { }
try { var ret = new Error(); if(ret) vars[53] = ret; } catch(e) { }
try { var ret = Date(vars[27], vars[41], 'a', vars[74], arg4, true, 2); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = new ActiveXObject(Infinity); if(ret) vars[84] = ret; } catch(e) { }
try { var ret = Date.prototype.getTimezoneOffset.call(vars[36]); if(ret) vars[29] = ret; } catch(e) { }
try { var ret = vars[25][3]; if(ret) vars[40] = ret; } catch(e) { }
try { vars[25].toExponential = false; } catch(e) { }
try { var ret = new Date('a', vars[1], true, arg1, vars[39], true, Infinity); if(ret) vars[28] = ret; } catch(e) { }
try { var ret = Enumerator(); if(ret) vars[85] = ret; } catch(e) { }
try { var ret = Array.prototype.pop.call(vars[3]); if(ret) vars[5] = ret; } catch(e) { }
try { var ret = Date('a'); if(ret) vars[94] = ret; } catch(e) { }
try { var ret = new RegExp(); if(ret) vars[96] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[85], Array(17).join(String.fromCharCode(82)) + Array(17).join(String.fromCharCode(61, 53))); } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[24]); if(ret) vars[47] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[82], true, vars[34], 'a', false); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleUpperCase.call(vars[83]); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = VBArray.prototype.lbound.call(vars[43], vars[98]); if(ret) vars[75] = ret; } catch(e) { }
try { var ret = Boolean.prototype.toJSON.call(vars[58]); if(ret) vars[66] = ret; } catch(e) { }
try { var ret = String.prototype.match.call(vars[94], false); if(ret) vars[97] = ret; } catch(e) { }
try { var ret = vars[32].options; if(ret) vars[41] = ret; } catch(e) { }
try { var ret = Array(4); if(ret) vars[23] = ret; } catch(e) { }
try { var ret = new Enumerator(vars[92]); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = RuntimeObject(); if(ret) vars[11] = ret; } catch(e) { }
try { var ret = Date.UTC(false, true, vars[11], Infinity, vars[65], vars[48], 'a'); if(ret) vars[60] = ret; } catch(e) { }
try { vars[55].toPrecision = f8; } catch(e) { }
try { var ret = String.prototype.toLowerCase.call(vars[5]); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = Date.prototype.getFullYear.call(vars[39]); if(ret) vars[20] = ret; } catch(e) { }
try { vars[33].toString = vars[75]; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[99], vars[44]); if(ret) vars[62] = ret; } catch(e) { }
try { vars[23] = Boolean; } catch(e) { }
try { var ret = RegExp.$9; if(ret) vars[1] = ret; } catch(e) { }
try { var ret = Object.defineProperty(vars[10], 'input', { enumerable: true, value: false, writable: 100 }); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = Enumerator(Infinity); if(ret) vars[43] = ret; } catch(e) { }
try { var ret = Boolean.prototype.valueOf.call(vars[62]); if(ret) vars[88] = ret; } catch(e) { }
try { vars[95][5] = vars[13]; } catch(e) { }
try { var ret = VBArray.prototype.toArray.call(vars[57]); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = new Enumerator(); if(ret) vars[77] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[39], 'a'); } catch(e) { }
try { var ret = new RangeError(arg6, vars[56], vars[18]); if(ret) vars[34] = ret; } catch(e) { }
try { var ret = Debug.write('a'); if(ret) vars[69] = ret; } catch(e) { }
//endjs
CollectGarbage();
return vars[1];

}

function f1(arg4, arg5, arg6) {
runcount.f1++; if(runcount.f1>2) return;
//alert(1);
//beginjs
try { var ret = vars[74].callee; if(ret) vars[95] = ret; } catch(e) { }
try { var ret = RegExp.$6; if(ret) vars[93] = ret; } catch(e) { }
try { var ret = VBArray(vars[36]); if(ret) vars[34] = ret; } catch(e) { }
try { var ret = new Boolean(); if(ret) vars[66] = ret; } catch(e) { }
try { var ret = vars[92](vars[25], true, vars[25], vars[39], vars[36]); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = VBArray.prototype.ubound.call(vars[62], false); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = new vars[69].call(vars[25], Infinity, true, vars[43], false, vars[17]); if(ret) vars[8] = ret; } catch(e) { }
try { vars[27].caller = 'a'; } catch(e) { }
try { var ret = new VBArray(); if(ret) vars[81] = ret; } catch(e) { }
try { var ret = new VBArray(vars[24]); if(ret) vars[28] = ret; } catch(e) { }
try { var ret = vars[97].toPrecision; if(ret) vars[77] = ret; } catch(e) { }
try { vars[77].toArray = f6; } catch(e) { }
try { var ret = RegExp(Array(257).join(String.fromCharCode(4, 106)) + Array(65).join(String.fromCharCode(70)) + Array(65537).join(String.fromCharCode(11, 58, 42))); if(ret) vars[67] = ret; } catch(e) { }
try { vars[3] = {}; } catch(e) { }
try { var ret = Date.prototype.toUTCString.call(vars[80]); if(ret) vars[43] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleTimeString.call(vars[65]); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = GetObject(Infinity); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[86], vars[47]); if(ret) vars[52] = ret; } catch(e) { }
try { var ret = Date(); if(ret) vars[81] = ret; } catch(e) { }
try { var ret = RegExp.index; if(ret) vars[75] = ret; } catch(e) { }
try { var ret = Debug.writeln(vars[86]); if(ret) vars[31] = ret; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[58], 'a', 2, vars[93]); if(ret) vars[7] = ret; } catch(e) { }
try { vars[29][-1] = vars[38]; } catch(e) { }
try { vars[24].callee = vars[98]; } catch(e) { }
try { var ret = ActiveXObject(vars[2]); if(ret) vars[6] = ret; } catch(e) { }
try { var ret = new RuntimeObject(); if(ret) vars[39] = ret; } catch(e) { }
try { vars[60].callee = true; } catch(e) { }
try { var ret = GetObject(4); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = LuLow(3); if(ret) vars[44] = ret; } catch(e) { }
try { var ret = new Boolean(); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = String.prototype.strike.call(vars[33], 'a'); if(ret) vars[14] = ret; } catch(e) { }
try { var ret = RegExp(Array(257).join(String.fromCharCode(72, 47, 77)) + Array(4097).join(String.fromCharCode(93, 7)) + Array(257).join(String.fromCharCode(49, 10))); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = ActiveXObject(vars[13], arg4); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = vars[98].valueOf; if(ret) vars[99] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[73]); if(ret) vars[45] = ret; } catch(e) { }
try { vars[85] = Array; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[31], vars[29], arg9); if(ret) vars[61] = ret; } catch(e) { }
try { var ret = RegExp.input; if(ret) vars[96] = ret; } catch(e) { }
try { vars[44][3] = vars[0]; } catch(e) { }
try { vars[3].toExponential = arg2; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[77], vars[33]); if(ret) vars[62] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[79], vars[75]); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = RegExp.$5; if(ret) vars[53] = ret; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[96], vars[32]); if(ret) vars[98] = ret; } catch(e) { }
try { vars[59] = f5; } catch(e) { }
try { var ret = Date.prototype.toUTCString.call(vars[9]); if(ret) vars[71] = ret; } catch(e) { }
try { var ret = vars[63].source; if(ret) vars[10] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[39]); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[65], vars[42], vars[10], Infinity, Infinity); if(ret) vars[97] = ret; } catch(e) { }
try { vars[18] = new Array(1000000); } catch(e) { }
try { var ret = vars[10].toPrecision; if(ret) vars[8] = ret; } catch(e) { }
try { var ret = new Error(); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = Function.prototype.toString.call(vars[70]); if(ret) vars[25] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[53], 'a'); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[63], 10); if(ret) vars[84] = ret; } catch(e) { }
try { var ret = VBArray.prototype.ubound.call(vars[57], Infinity); if(ret) vars[46] = ret; } catch(e) { }
try { var ret = new Error(); if(ret) vars[47] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[6], 'a', vars[40]); if(ret) vars[56] = ret; } catch(e) { }
try { vars[54][1000000] = vars[90]; } catch(e) { }
try { var ret = arguments; if(ret) vars[21] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[88], 1073741823); } catch(e) { }
try { vars[34].toLocaleString = f5; } catch(e) { }
try { var ret = Enumerator.prototype.moveNext.call(vars[23]); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = vars[9].toPrecision; if(ret) vars[24] = ret; } catch(e) { }
try { vars[56] = RegExp; } catch(e) { }
try { var ret = Array.prototype.toString.call(vars[98]); if(ret) vars[46] = ret; } catch(e) { }
try { var ret = new Array(); if(ret) vars[25] = ret; } catch(e) { }
try { vars[29][1073741823] = false; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[86], vars[20]); if(ret) vars[62] = ret; } catch(e) { }
try { var ret = Array(); if(ret) vars[5] = ret; } catch(e) { }
try { var ret = vars[5].call(vars[68]); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = Enumerator(vars[33]); if(ret) vars[15] = ret; } catch(e) { }
try { vars[15] = {}; } catch(e) { }
try { var ret = VBArray.prototype.toArray.call(vars[73]); if(ret) vars[97] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleTimeString.call(vars[59]); if(ret) vars[51] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[72], vars[87]); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.moveNext.call(vars[8]); if(ret) vars[71] = ret; } catch(e) { }
try { var ret = vars[11][0]; if(ret) vars[71] = ret; } catch(e) { }
try { var ret = Enumerator(arg6); if(ret) vars[89] = ret; } catch(e) { }
try { vars[88].toArray = f3; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[84], arg2, vars[15]); if(ret) vars[73] = ret; } catch(e) { }
try { var ret = String.prototype.anchor.call(vars[37], vars[11]); if(ret) vars[11] = ret; } catch(e) { }
try { var ret = DblFromLus(3); if(ret) vars[34] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[94], Array(4097).join(String.fromCharCode(45, 34)) + Array(65).join(String.fromCharCode(5, 90)) + Array(4097).join(String.fromCharCode(59)), 'mm'); } catch(e) { }
try { var ret = arguments; if(ret) vars[42] = ret; } catch(e) { }
try { var ret = RegExp.$6; if(ret) vars[40] = ret; } catch(e) { }
try { var ret = Date(); if(ret) vars[49] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.moveNext.call(vars[24]); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = new vars[94]('a', arg6, vars[57], vars[11], vars[13]); if(ret) vars[4] = ret; } catch(e) { }
try { var ret = vars[84].toExponential; if(ret) vars[68] = ret; } catch(e) { }
try { var ret = vars[9].call(vars[31], true, 'a', Infinity, vars[33], 'a'); if(ret) vars[78] = ret; } catch(e) { }
try { var ret = new RangeError(true, vars[29], vars[99]); if(ret) vars[45] = ret; } catch(e) { }
try { var ret = vars[41][5]; if(ret) vars[50] = ret; } catch(e) { }
try { var ret = ActiveXObject(true); if(ret) vars[56] = ret; } catch(e) { }
try { var ret = vars[4].toFixed; if(ret) vars[69] = ret; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[58], vars[63]); if(ret) vars[14] = ret; } catch(e) { }
try { vars[89] = Array(17).join(String.fromCharCode(41, 74, 9)); } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[63], 'a', Infinity); if(ret) vars[14] = ret; } catch(e) { }
try { var ret = arguments; if(ret) vars[18] = ret; } catch(e) { }
try { var ret = String.prototype.charAt.call(vars[27], true); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = arguments; if(ret) vars[33] = ret; } catch(e) { }
try { var ret = new RuntimeObject(); if(ret) vars[50] = ret; } catch(e) { }
try { var ret = Date(arg3); if(ret) vars[15] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[13], vars[46]); if(ret) vars[16] = ret; } catch(e) { }
try { var ret = vars[95].call(vars[2], false, arg2, true); if(ret) vars[58] = ret; } catch(e) { }
try { var ret = vars[71].apply(vars[34], vars[7]); if(ret) vars[77] = ret; } catch(e) { }
try { var ret = vars[11].apply(vars[44], vars[80]); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = escape(vars[29]); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = Object.getOwnPropertyDescriptor(vars[43], Infinity); if(ret) vars[53] = ret; } catch(e) { }
try { var ret = Array(); if(ret) vars[31] = ret; } catch(e) { }
try { var ret = Debug.write(Infinity, 2, arg3); if(ret) vars[6] = ret; } catch(e) { }
try { vars[75].lastIndex = vars[52]; } catch(e) { }
try { var ret = new Enumerator(); if(ret) vars[84] = ret; } catch(e) { }
try { var ret = RegExp.input; if(ret) vars[0] = ret; } catch(e) { }
try { var ret = Debug.writeln(2147483648, vars[31], vars[32]); if(ret) vars[75] = ret; } catch(e) { }
try { vars[95].global = vars[1]; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[80], vars[25], vars[60]); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = vars[58].toPrecision; if(ret) vars[48] = ret; } catch(e) { }
try { var ret = Error(); if(ret) vars[24] = ret; } catch(e) { }
try { vars[10] = new Array(1000); } catch(e) { }
try { var ret = Array.prototype.toLocaleString.call(vars[56]); if(ret) vars[84] = ret; } catch(e) { }
try { var ret = new EvalError(arg4, 5, 'a'); if(ret) vars[70] = ret; } catch(e) { }
try { vars[64] = {}; } catch(e) { }
try { var ret = new RegExp(); if(ret) vars[97] = ret; } catch(e) { }
try { vars[27].global = 'a'; } catch(e) { }
try { var ret = String.prototype.strike.call(vars[72], true); if(ret) vars[19] = ret; } catch(e) { }
try { var ret = new RegExp(); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = new ActiveXObject('a'); if(ret) vars[88] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[29]); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = String.prototype.match.call(vars[8], vars[27]); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = new RegExp(); if(ret) vars[61] = ret; } catch(e) { }
try { var ret = JSON.stringify('a'); if(ret) vars[79] = ret; } catch(e) { }
try { var ret = Object.defineProperty(vars[17], '2', { enumerable: vars[58], set: f9, configurable: vars[34] }); if(ret) vars[36] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[54], vars[63], true, vars[68], Infinity); if(ret) vars[9] = ret; } catch(e) { }
try { vars[58][4] = vars[97]; } catch(e) { }
try { var ret = new URIError(arg4, vars[28], false); if(ret) vars[75] = ret; } catch(e) { }
try { var ret = vars[4].appy(vars[77], false); if(ret) vars[84] = ret; } catch(e) { }
try { var ret = RegExp.lastMatch; if(ret) vars[57] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[17], false, vars[55]); if(ret) vars[90] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[26], Array(257).join(String.fromCharCode(62, 3, 38)) + Array(17).join(String.fromCharCode(46, 123)) + Array(4097).join(String.fromCharCode(48))); } catch(e) { }
try { var ret = GetObject(vars[91]); if(ret) vars[25] = ret; } catch(e) { }
try { var ret = new Date(vars[19]); if(ret) vars[11] = ret; } catch(e) { }
try { vars[27] = {}; } catch(e) { }
try { var ret = JSON.parse(false); if(ret) vars[77] = ret; } catch(e) { }
try { var ret = vars[51].source; if(ret) vars[87] = ret; } catch(e) { }
try { var ret = RegExp.$3; if(ret) vars[70] = ret; } catch(e) { }
try { var ret = new RegExp(); if(ret) vars[39] = ret; } catch(e) { }
try { var ret = Enumerator('a'); if(ret) vars[22] = ret; } catch(e) { }
try { var ret = Date.parse(vars[81]); if(ret) vars[44] = ret; } catch(e) { }
try { var ret = vars[63].toLocaleString; if(ret) vars[68] = ret; } catch(e) { }
try { vars[23] = Array(65537).join(String.fromCharCode(32, 55, 0)); } catch(e) { }
try { var ret = vars[58][10]; if(ret) vars[55] = ret; } catch(e) { }
try { var ret = Array.prototype.shift.call(vars[86]); if(ret) vars[17] = ret; } catch(e) { }
try { var ret = Enumerator(); if(ret) vars[63] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[62], 5); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = LuLow(arg7); if(ret) vars[74] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[98], vars[71]); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = new Date(true); if(ret) vars[73] = ret; } catch(e) { }
try { vars[84].toPrecision = vars[80]; } catch(e) { }
try { var ret = EvalError(arg8, vars[63], 1000); if(ret) vars[83] = ret; } catch(e) { }
try { vars[60].lastIndex = vars[13]; } catch(e) { }
try { var ret = new Error('a'); if(ret) vars[91] = ret; } catch(e) { }
try { vars[69].toString = false; } catch(e) { }
try { var ret = vars[63].options; if(ret) vars[52] = ret; } catch(e) { }
try { vars[23].toJSON = vars[63]; } catch(e) { }
try { var ret = Array.prototype.toString.call(vars[48]); if(ret) vars[82] = ret; } catch(e) { }
try { var ret = Boolean.prototype.toString.call(vars[94]); if(ret) vars[73] = ret; } catch(e) { }
try { var ret = new VBArray(vars[59]); if(ret) vars[95] = ret; } catch(e) { }
try { vars[89] = f9; } catch(e) { }
try { var ret = vars[50].toExponential; if(ret) vars[40] = ret; } catch(e) { }
try { vars[18].toArray = f1; } catch(e) { }
try { var ret = URIError(vars[57], 'a', vars[33]); if(ret) vars[99] = ret; } catch(e) { }
try { var ret = RegExp.$9; if(ret) vars[77] = ret; } catch(e) { }
try { var ret = vars[21].options; if(ret) vars[79] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[73], Array(65537).join(String.fromCharCode(126, 93)) + Array(1025).join(String.fromCharCode(42)) + Array(4097).join(String.fromCharCode(103, 90))); } catch(e) { }
try { vars[48] = RegExp; } catch(e) { }
try { vars[36][10] = 1; } catch(e) { }
try { vars[72] = Object; } catch(e) { }
try { vars[94].prototype = vars[28]; } catch(e) { }
try { var ret = RegExp.input; if(ret) vars[25] = ret; } catch(e) { }
try { var ret = RegExp.lastIndex; if(ret) vars[98] = ret; } catch(e) { }
try { var ret = decodeURIComponent(vars[8]); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = VBArray.prototype.toArray.call(vars[65]); if(ret) vars[2] = ret; } catch(e) { }
try { eval(Array(4097).join(String.fromCharCode(12))); } catch(e) { }
try { var ret = Enumerator(); if(ret) vars[15] = ret; } catch(e) { }
try { var ret = vars[25].lastIndex; if(ret) vars[30] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[66]); if(ret) vars[60] = ret; } catch(e) { }
try { var ret = Date.UTC(vars[46], arg5, arg2, vars[71], vars[60], Infinity, vars[42]); if(ret) vars[26] = ret; } catch(e) { }
try { var ret = ActiveXObject(vars[16]); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = Date.prototype.getFullYear.call(vars[84]); if(ret) vars[49] = ret; } catch(e) { }
try { var ret = new RangeError(vars[75], 'a', vars[78]); if(ret) vars[93] = ret; } catch(e) { }
try { vars[66].options = true; } catch(e) { }
try { var ret = RegExp.$5; if(ret) vars[37] = ret; } catch(e) { }
try { var ret = vars[11][-1]; if(ret) vars[79] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[9], arg8); if(ret) vars[7] = ret; } catch(e) { }
try { vars[44].length = vars[25]; } catch(e) { }
try { var ret = String.FromCharCode(vars[52], false, 'a'); if(ret) vars[12] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[78], vars[44], vars[50]); if(ret) vars[91] = ret; } catch(e) { }
try { var ret = decodeURI(vars[36]); if(ret) vars[83] = ret; } catch(e) { }
try { vars[0] = new Array(4); } catch(e) { }
try { var ret = Date.prototype.getFullYear.call(vars[46]); if(ret) vars[6] = ret; } catch(e) { }
try { vars[70][1] = vars[75]; } catch(e) { }
try { var ret = VBArray.prototype.dimensions.call(vars[50]); if(ret) vars[80] = ret; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[20], vars[56]); if(ret) vars[39] = ret; } catch(e) { }
try { var ret = ReferenceError(vars[43], true, false); if(ret) vars[70] = ret; } catch(e) { }
try { var ret = ActiveXObject(vars[51]); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = vars[40].toLocaleString; if(ret) vars[19] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[55], Infinity, 4); if(ret) vars[53] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[78], vars[83], f3); if(ret) vars[4] = ret; } catch(e) { }
try { vars[1].arguments = vars[37]; } catch(e) { }
try { var ret = vars[96].arguments; if(ret) vars[15] = ret; } catch(e) { }
try { var ret = ActiveXObject(vars[63]); if(ret) vars[40] = ret; } catch(e) { }
try { var ret = RegExp.$5; if(ret) vars[8] = ret; } catch(e) { }
try { var ret = new Array(); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = new RegExp(); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = vars[89].toJSON; if(ret) vars[46] = ret; } catch(e) { }
try { var ret = vars[68].global; if(ret) vars[58] = ret; } catch(e) { }
try { var ret = VBArray.prototype.dimensions.call(vars[2]); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = RegExp.$5; if(ret) vars[57] = ret; } catch(e) { }
try { var ret = vars[17].appy(vars[40], false); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = String.prototype.search.call(vars[46], true); if(ret) vars[47] = ret; } catch(e) { }
try { var ret = Enumerator(100); if(ret) vars[0] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[33], arg3); } catch(e) { }
try { var ret = arguments; if(ret) vars[67] = ret; } catch(e) { }
try { var ret = new Date(arg9, vars[72], 'a', vars[9], vars[3], 1000000, true); if(ret) vars[39] = ret; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[16]); if(ret) vars[69] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[46], 'a', 1); if(ret) vars[63] = ret; } catch(e) { }
try { vars[11][0] = Infinity; } catch(e) { }
try { var ret = new URIError(vars[39], 'a', vars[24]); if(ret) vars[5] = ret; } catch(e) { }
try { var ret = Boolean.prototype.valueOf.call(vars[26]); if(ret) vars[70] = ret; } catch(e) { }
try { var ret = new vars[84].apply(vars[36], vars[98]); if(ret) vars[41] = ret; } catch(e) { }
try { var ret = RegExp.$4; if(ret) vars[87] = ret; } catch(e) { }
try { var ret = vars[85].foo; if(ret) vars[49] = ret; } catch(e) { }
try { var ret = VBArray(); if(ret) vars[35] = ret; } catch(e) { }
try { vars[70].toLocaleString = f0; } catch(e) { }
try { var ret = VBArray(vars[9]); if(ret) vars[26] = ret; } catch(e) { }
try { vars[79].toJSON = vars[23]; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[89], true, vars[11]); if(ret) vars[83] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[70]); if(ret) vars[67] = ret; } catch(e) { }
try { vars[51].prototype = 3; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[40]); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = new ReferenceError(Infinity, vars[2], arg9); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[83], vars[96], 10, vars[22]); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = vars[53].valueOf; if(ret) vars[49] = ret; } catch(e) { }
try { vars[31][0] = false; } catch(e) { }
try { vars[95].toPrecision = f5; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[50], 'a', vars[48]); if(ret) vars[36] = ret; } catch(e) { }
try { var ret = Date.UTC(vars[5], vars[98], vars[11], vars[36], true, arg5, vars[34]); if(ret) vars[84] = ret; } catch(e) { }
try { vars[58].toLocaleString = vars[72]; } catch(e) { }
try { var ret = Date.prototype.getTimezoneOffset.call(vars[81]); if(ret) vars[56] = ret; } catch(e) { }
try { function f_inner_71() { return f5(); } vars[21] = f_inner_71; } catch(e) { }
try { vars[64] = f8; } catch(e) { }
try { var ret = vars[27].options; if(ret) vars[83] = ret; } catch(e) { }
try { var ret = URIError(2, vars[24], 100); if(ret) vars[89] = ret; } catch(e) { }
try { function f_inner_45() { return f7(); } vars[84] = f_inner_45; } catch(e) { }
try { vars[78] = JSON; } catch(e) { }
try { var ret = Array(false); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = GetObject(false); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = arguments; if(ret) vars[93] = ret; } catch(e) { }
try { var ret = Array.prototype.pop.call(vars[92]); if(ret) vars[27] = ret; } catch(e) { }
try { vars[60].toJSON = vars[14]; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[10]); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = vars[72].global; if(ret) vars[5] = ret; } catch(e) { }
try { var ret = new Date(vars[94], arg3, 1000000, 'a', vars[8], false, 1000000); if(ret) vars[2] = ret; } catch(e) { }
try { var ret = String.prototype.localeCompare.call(vars[55], -1); if(ret) vars[13] = ret; } catch(e) { }
try { vars[86] = ActiveXObject; } catch(e) { }
try { var ret = vars[24].call(vars[21], vars[58], vars[33], -1); if(ret) vars[43] = ret; } catch(e) { }
try { var ret = EncodeURI('a'); if(ret) vars[19] = ret; } catch(e) { }
try { var ret = VBArray(vars[23]); if(ret) vars[79] = ret; } catch(e) { }
try { vars[37] = Boolean; } catch(e) { }
try { RegExp.prototype.exec.call(vars[45], Array(257).join(String.fromCharCode(112, 62)) + Array(17).join(String.fromCharCode(115, 99))); } catch(e) { }
try { var ret = Array(17).join(String.fromCharCode(30, 40)) + Array(257).join(String.fromCharCode(71, 76)) + Array(4097).join(String.fromCharCode(86)); if(ret) vars[53] = ret; } catch(e) { }
try { var ret = String.prototype.charAt.call(vars[81], vars[45]); if(ret) vars[69] = ret; } catch(e) { }
try { vars[9][-1] = 'a'; } catch(e) { }
try { var ret = Enumerator(); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = new Array(false, vars[82], 10); if(ret) vars[97] = ret; } catch(e) { }
try { vars[45].toLocaleString = f9; } catch(e) { }
try { var ret = RangeError(vars[16], vars[20], 1); if(ret) vars[26] = ret; } catch(e) { }
try { vars[75].toString = false; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[29], vars[3], false); if(ret) vars[96] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[77], Array(257).join(String.fromCharCode(118)) + Array(257).join(String.fromCharCode(102))); } catch(e) { }
try { var ret = new Error(0); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = Debug.writeln(vars[34], vars[90], vars[81]); if(ret) vars[24] = ret; } catch(e) { }
try { vars[64].toExponential = f5; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[80], vars[19]); if(ret) vars[64] = ret; } catch(e) { }
try { var ret = Array(true); if(ret) vars[73] = ret; } catch(e) { }
try { var ret = new ActiveXObject(vars[28], false); if(ret) vars[7] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[81], Array(17).join(String.fromCharCode(107, 16))); } catch(e) { }
try { vars[17] = new Array(0); } catch(e) { }
try { var ret = String.prototype.substring.call(vars[35], false, true); if(ret) vars[15] = ret; } catch(e) { }
try { var ret = new Boolean(); if(ret) vars[73] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[10], vars[5], Infinity); if(ret) vars[25] = ret; } catch(e) { }
try { var ret = Array.prototype.toLocaleString.call(vars[53]); if(ret) vars[38] = ret; } catch(e) { }
try { vars[76] = {}; } catch(e) { }
try { var ret = ActiveXObject(arg7); if(ret) vars[28] = ret; } catch(e) { }
try { var ret = RegExp(Array(65537).join(String.fromCharCode(100, 89)) + Array(1025).join(String.fromCharCode(49))); if(ret) vars[95] = ret; } catch(e) { }
try { var ret = new Enumerator(); if(ret) vars[49] = ret; } catch(e) { }
try { var ret = Debug.writeln(arg2, vars[66], vars[88]); if(ret) vars[15] = ret; } catch(e) { }
try { var ret = [vars[61], vars[50], 1000]; if(ret) vars[37] = ret; } catch(e) { }
try { var ret = JSON.parse(vars[20]); if(ret) vars[18] = ret; } catch(e) { }
try { vars[15] = f4; } catch(e) { }
try { var ret = JSON.parse(vars[23]); if(ret) vars[20] = ret; } catch(e) { }
try { vars[65] = {}; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[27], vars[84]); if(ret) vars[26] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[30], Array(65537).join(String.fromCharCode(127))); } catch(e) { }
try { var ret = String.prototype.substring.call(vars[61], Infinity); if(ret) vars[51] = ret; } catch(e) { }
try { var ret = VBArray.prototype.ubound.call(vars[97], arg7); if(ret) vars[55] = ret; } catch(e) { }
try { var ret = vars[12].valueOf; if(ret) vars[46] = ret; } catch(e) { }
try { var ret = isFinite(arg4); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = vars[58].call(vars[39], vars[83], true, -1); if(ret) vars[50] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[75], 'a'); if(ret) vars[26] = ret; } catch(e) { }
try { eval(Array(65537).join(String.fromCharCode(8, 122, 77)) + Array(65).join(String.fromCharCode(120, 92, 12))); } catch(e) { }
try { var ret = Date(); if(ret) vars[31] = ret; } catch(e) { }
try { var ret = String.prototype.localeCompare.call(vars[46], arg4); if(ret) vars[27] = ret; } catch(e) { }
try { eval(Array(65).join(String.fromCharCode(73, 108, 26)) + Array(65537).join(String.fromCharCode(119, 5)) + Array(1025).join(String.fromCharCode(11))); } catch(e) { }
try { var ret = isFinite(false); if(ret) vars[72] = ret; } catch(e) { }
try { vars[87].toExponential = f5; } catch(e) { }
try { var ret = Array(65).join(String.fromCharCode(74, 7, 32)); if(ret) vars[8] = ret; } catch(e) { }
try { var ret = GetObject(vars[29]); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = LuLow(1); if(ret) vars[33] = ret; } catch(e) { }
try { vars[49] = document.createElement("foo"); } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[3], f6); if(ret) vars[65] = ret; } catch(e) { }
try { var ret = String.prototype.charAt.call(vars[10], vars[21]); if(ret) vars[55] = ret; } catch(e) { }
try { var ret = VBArray.prototype.dimensions.call(vars[29]); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = Boolean.prototype.toString.call(vars[9]); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = RegExp.index; if(ret) vars[85] = ret; } catch(e) { }
try { var ret = new RuntimeObject(); if(ret) vars[96] = ret; } catch(e) { }
try { vars[41].toExponential = Infinity; } catch(e) { }
try { var ret = vars[62].call(vars[18]); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = new Enumerator(); if(ret) vars[78] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[52], Array(4097).join(String.fromCharCode(120, 60)) + Array(4097).join(String.fromCharCode(37, 43, 119))); } catch(e) { }
try { var ret = vars[55].call(vars[69], true, true, 'a', vars[50], arg9); if(ret) vars[7] = ret; } catch(e) { }
try { vars[32][100] = vars[41]; } catch(e) { }
try { var ret = RegExp.$6; if(ret) vars[40] = ret; } catch(e) { }
try { var ret = decodeURI('a'); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = vars[20].foo; if(ret) vars[77] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleUpperCase.call(vars[22]); if(ret) vars[29] = ret; } catch(e) { }
try { var ret = GetObject(vars[42]); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = String.prototype.localeCompare.call(vars[1], vars[5]); if(ret) vars[83] = ret; } catch(e) { }
try { var ret = new RegExp(Array(65).join(String.fromCharCode(17))); if(ret) vars[5] = ret; } catch(e) { }
try { var ret = String.prototype.search.call(vars[15], vars[54]); if(ret) vars[76] = ret; } catch(e) { }
try { vars[4][-1] = vars[38]; } catch(e) { }
try { vars[37].toJSON = f3; } catch(e) { }
try { var ret = Object.getOwnPropertyDescriptor(vars[34], 0); if(ret) vars[29] = ret; } catch(e) { }
try { vars[49].prototype = Infinity; } catch(e) { }
try { vars[7] = document.createElement("foo"); Object.defineProperty(vars[7], "options", {get: f6, set: f8} ); } catch(e) { }
try { var ret = new Date(vars[21], arg8, vars[5], vars[92], vars[68], vars[84], vars[47]); if(ret) vars[18] = ret; } catch(e) { }
try { vars[26].toPrecision = f5; } catch(e) { }
try { var ret = RegExp(Array(4097).join(String.fromCharCode(61, 21, 92)), 'm'); if(ret) vars[67] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[29], vars[35], 4); if(ret) vars[38] = ret; } catch(e) { }
try { var ret = Boolean.prototype.toString.call(vars[58]); if(ret) vars[44] = ret; } catch(e) { }
try { vars[4] = document.createElement("foo"); Object.defineProperty(vars[4], "global", {get: f9, set: f6} ); } catch(e) { }
try { vars[25].source = vars[26]; } catch(e) { }
try { vars[55] = new Array(4294967296); } catch(e) { }
try { var ret = vars[91].length; if(ret) vars[20] = ret; } catch(e) { }
try { vars[97] = new Array(0); } catch(e) { }
try { var ret = String.prototype.split.call(vars[31], Infinity, false); if(ret) vars[4] = ret; } catch(e) { }
try { var ret = VBArray.prototype.toArray.call(vars[67]); if(ret) vars[78] = ret; } catch(e) { }
try { var ret = RangeError('a', Infinity, false); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = DblFromLus(vars[71]); if(ret) vars[71] = ret; } catch(e) { }
try { vars[95][5] = Infinity; } catch(e) { }
try { var ret = new Array(); if(ret) vars[54] = ret; } catch(e) { }
try { var ret = new ActiveXObject(vars[96], vars[22]); if(ret) vars[32] = ret; } catch(e) { }
try { var ret = new vars[36].apply(vars[72], vars[57]); if(ret) vars[62] = ret; } catch(e) { }
try { vars[32] = Function; } catch(e) { }
try { var ret = VBArray.prototype.dimensions.call(vars[34]); if(ret) vars[99] = ret; } catch(e) { }
try { var ret = Error(); if(ret) vars[73] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[58], 2, vars[20]); if(ret) vars[74] = ret; } catch(e) { }
try { var ret = Date.prototype.getTimezoneOffset.call(vars[15]); if(ret) vars[66] = ret; } catch(e) { }
try { var ret = vars[8][1000]; if(ret) vars[22] = ret; } catch(e) { }
try { var ret = VBArray.prototype.ubound.call(vars[25], vars[41]); if(ret) vars[71] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[96], vars[83]); if(ret) vars[43] = ret; } catch(e) { }
try { var ret = DblFromLus(false); if(ret) vars[70] = ret; } catch(e) { }
try { vars[73][4] = vars[48]; } catch(e) { }
try { var ret = Boolean.prototype.toString.call(vars[58]); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[67], vars[81]); if(ret) vars[15] = ret; } catch(e) { }
try { var ret = vars[25].toPrecision; if(ret) vars[17] = ret; } catch(e) { }
try { var ret = new Array(false, false, false); if(ret) vars[67] = ret; } catch(e) { }
try { vars[29] = {}; } catch(e) { }
try { var ret = encodeURIComponent('a'); if(ret) vars[95] = ret; } catch(e) { }
try { var ret = Boolean.prototype.valueOf.call(vars[92]); if(ret) vars[36] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[66], 'a', vars[78]); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = EncodeURI(true); if(ret) vars[55] = ret; } catch(e) { }
try { var ret = Array(vars[16], vars[17], arg7); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = vars[39].toLocaleString; if(ret) vars[86] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleTimeString.call(vars[21]); if(ret) vars[76] = ret; } catch(e) { }
try { var ret = RegExp.$4; if(ret) vars[75] = ret; } catch(e) { }
try { var ret = vars[54].constructor; if(ret) vars[87] = ret; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[7], vars[49], false, vars[73], Infinity); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = vars[91][2]; if(ret) vars[14] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[62], vars[86], vars[86]); if(ret) vars[27] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[81], arg7, false); } catch(e) { }
try { var ret = Array.prototype.shift.call(vars[73]); if(ret) vars[75] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[95], vars[29]); } catch(e) { }
try { var ret = JSON.stringify('a'); if(ret) vars[47] = ret; } catch(e) { }
try { var ret = RegExp.lastParen; if(ret) vars[90] = ret; } catch(e) { }
try { var ret = new Error(vars[96], vars[88], 'a'); if(ret) vars[71] = ret; } catch(e) { }
try { vars[96] = document.createElement("foo"); Object.defineProperty(vars[96], "input", {get: f8, set: f9} ); } catch(e) { }
try { var ret = []; if(ret) vars[36] = ret; } catch(e) { }
try { var ret = new URIError(1, true, 3); if(ret) vars[80] = ret; } catch(e) { }
try { var ret = new RangeError('a', arg5, true); if(ret) vars[99] = ret; } catch(e) { }
try { vars[21].input = vars[20]; } catch(e) { }
try { var ret = parseInt(vars[10]); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = new vars[45]('a', vars[78], 4, 'a', vars[83]); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = vars[57].toPrecision; if(ret) vars[45] = ret; } catch(e) { }
try { var ret = String.prototype.search.call(vars[32], arg7); if(ret) vars[91] = ret; } catch(e) { }
try { var ret = Array(vars[76]); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = GetObject(vars[77], 'a'); if(ret) vars[43] = ret; } catch(e) { }
try { var ret = new RegExp(Array(65537).join(String.fromCharCode(35))); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = new Error(vars[57], Infinity, vars[68]); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = new Array('a', 4294967296, vars[62]); if(ret) vars[79] = ret; } catch(e) { }
try { vars[60].arguments = vars[54]; } catch(e) { }
try { vars[8][1000] = 'a'; } catch(e) { }
try { var ret = vars[76].call(vars[67], true, arg2, vars[17], 5, true); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = new VBArray(); if(ret) vars[60] = ret; } catch(e) { }
try { vars[49].toPrecision = f8; } catch(e) { }
try { var ret = RegExp.index; if(ret) vars[14] = ret; } catch(e) { }
try { var ret = vars[98][100]; if(ret) vars[14] = ret; } catch(e) { }
try { var ret = vars[68].lastIndex; if(ret) vars[16] = ret; } catch(e) { }
try { var ret = VBArray.prototype.dimensions.call(vars[29]); if(ret) vars[10] = ret; } catch(e) { }
try { vars[96].toPrecision = f9; } catch(e) { }
try { var ret = unescape(vars[75]); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = Enumerator(vars[74]); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = new ReferenceError(false, vars[61], 'a'); if(ret) vars[25] = ret; } catch(e) { }
try { var ret = vars[2].constructor; if(ret) vars[38] = ret; } catch(e) { }
try { var ret = arguments; if(ret) vars[24] = ret; } catch(e) { }
try { var ret = RegExp.leftContext; if(ret) vars[56] = ret; } catch(e) { }
try { var ret = LuHigh(vars[83]); if(ret) vars[80] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[90], vars[27]); if(ret) vars[4] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[18], 'a'); } catch(e) { }
try { var ret = String.prototype.match.call(vars[33], vars[13]); if(ret) vars[63] = ret; } catch(e) { }
try { var ret = vars[22].length; if(ret) vars[85] = ret; } catch(e) { }
try { var ret = vars[78].apply(vars[23], vars[82]); if(ret) vars[44] = ret; } catch(e) { }
try { var ret = new URIError(1, vars[82], true); if(ret) vars[44] = ret; } catch(e) { }
try { vars[47].toFixed = Infinity; } catch(e) { }
try { var ret = new RangeError(4, vars[8], 1000); if(ret) vars[47] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[67], Array(257).join(String.fromCharCode(91, 57, 54)) + Array(4097).join(String.fromCharCode(122, 7)) + Array(1025).join(String.fromCharCode(87, 73, 103))); } catch(e) { }
try { var ret = Date.prototype.getMilliseconds.call(vars[89]); if(ret) vars[23] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleString.call(vars[37]); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = VBArray.prototype.toArray.call(vars[39]); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = Date.prototype.getFullYear.call(vars[13]); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = Error(vars[29], vars[65], -1); if(ret) vars[52] = ret; } catch(e) { }
try { var ret = vars[13].call(vars[45], 100, vars[98], vars[35]); if(ret) vars[75] = ret; } catch(e) { }
try { var ret = Enumerator(); if(ret) vars[50] = ret; } catch(e) { }
try { var ret = String.prototype.localeCompare.call(vars[97], arg5); if(ret) vars[53] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[10]); if(ret) vars[6] = ret; } catch(e) { }
try { vars[83].prototype = 100; } catch(e) { }
try { var ret = String.prototype.match.call(vars[17], vars[92]); if(ret) vars[89] = ret; } catch(e) { }
try { vars[63] = Array(1025).join(String.fromCharCode(6, 91, 16)); } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[6], Infinity, vars[64]); if(ret) vars[9] = ret; } catch(e) { }
try { vars[90].toLocaleString = f0; } catch(e) { }
try { var ret = escape(vars[45]); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = vars[86].toPrecision; if(ret) vars[62] = ret; } catch(e) { }
try { var ret = RegExp.lastIndex; if(ret) vars[60] = ret; } catch(e) { }
try { var ret = Date.prototype.getMilliseconds.call(vars[12]); if(ret) vars[46] = ret; } catch(e) { }
try { vars[0] = this; } catch(e) { }
try { vars[86].lastIndex = vars[5]; } catch(e) { }
try { var ret = Array.prototype.toLocaleString.call(vars[92]); if(ret) vars[14] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[81], false); if(ret) vars[63] = ret; } catch(e) { }
try { var ret = VBArray.prototype.lbound.call(vars[42], vars[0]); if(ret) vars[5] = ret; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[76]); if(ret) vars[17] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[72], 2); if(ret) vars[56] = ret; } catch(e) { }
try { var ret = String.prototype.match.call(vars[35], true); if(ret) vars[77] = ret; } catch(e) { }
try { var ret = RegExp.input; if(ret) vars[67] = ret; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[81], 'a'); if(ret) vars[20] = ret; } catch(e) { }
try { var ret = RegExp.lastIndex; if(ret) vars[21] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleString.call(vars[92]); if(ret) vars[84] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[80], arg2); if(ret) vars[78] = ret; } catch(e) { }
try { var ret = ActiveXObject(Infinity); if(ret) vars[81] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[73]); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[57], Infinity); if(ret) vars[61] = ret; } catch(e) { }
try { var ret = vars[20][1000000]; if(ret) vars[14] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[38]); if(ret) vars[47] = ret; } catch(e) { }
try { var ret = arguments; if(ret) vars[34] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[57], vars[44], 3, vars[29], 'a'); if(ret) vars[55] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleTimeString.call(vars[21]); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[30], arg9, f8); if(ret) vars[68] = ret; } catch(e) { }
try { vars[7].foo = vars[95]; } catch(e) { }
try { var ret = ActiveXObject(vars[45], vars[14]); if(ret) vars[61] = ret; } catch(e) { }
try { vars[6].foo = false; } catch(e) { }
try { var ret = vars[32].call(vars[97]); if(ret) vars[17] = ret; } catch(e) { }
try { var ret = Date(2); if(ret) vars[36] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[79], vars[95], true); if(ret) vars[73] = ret; } catch(e) { }
try { var ret = new Error(Infinity, false, true); if(ret) vars[95] = ret; } catch(e) { }
try { vars[85].toFixed = f9; } catch(e) { }
try { var ret = RegExp.lastMatch; if(ret) vars[81] = ret; } catch(e) { }
try { var ret = JSON.parse(arg2); if(ret) vars[66] = ret; } catch(e) { }
try { vars[74].toExponential = f4; } catch(e) { }
try { var ret = new URIError(vars[23], 1000000, false); if(ret) vars[8] = ret; } catch(e) { }
try { var ret = encodeURIComponent(vars[83]); if(ret) vars[37] = ret; } catch(e) { }
try { eval(Array(4097).join(String.fromCharCode(45)) + Array(65537).join(String.fromCharCode(109, 5, 64)) + Array(257).join(String.fromCharCode(72))); } catch(e) { }
try { var ret = LuLow(arg6); if(ret) vars[5] = ret; } catch(e) { }
try { vars[94] = document.createElement("foo"); Object.defineProperty(vars[94], "source", {get: f9, set: f8} ); } catch(e) { }
try { RegExp.prototype.compile.call(vars[31], arg2, true); } catch(e) { }
try { vars[56].toJSON = arg9; } catch(e) { }
try { var ret = ReferenceError(vars[0], vars[84], vars[13]); if(ret) vars[29] = ret; } catch(e) { }
try { var ret = Array.prototype.shift.call(vars[28]); if(ret) vars[43] = ret; } catch(e) { }
try { var ret = ActiveXObject(vars[86], vars[68]); if(ret) vars[81] = ret; } catch(e) { }
try { var ret = RegExp.$9; if(ret) vars[21] = ret; } catch(e) { }
try { var ret = vars[42].arguments; if(ret) vars[73] = ret; } catch(e) { }
//endjs
CollectGarbage();
return vars[50];

}

function f2(arg7, arg8, arg9) {
runcount.f2++; if(runcount.f2>2) return;
//alert(2);
//beginjs
try { var ret = String.prototype.charAt.call(vars[64], vars[29]); if(ret) vars[74] = ret; } catch(e) { }
try { var ret = RegExp.lastParen; if(ret) vars[14] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[93]); if(ret) vars[64] = ret; } catch(e) { }
try { var ret = new Enumerator(); if(ret) vars[47] = ret; } catch(e) { }
try { var ret = RangeError(vars[87], vars[34], 'a'); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = GetObject(vars[93], arg7); if(ret) vars[50] = ret; } catch(e) { }
try { var ret = GetObject(false); if(ret) vars[85] = ret; } catch(e) { }
try { var ret = new RegExp(); if(ret) vars[26] = ret; } catch(e) { }
try { vars[71] = new Array(100); } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[51], vars[83]); if(ret) vars[32] = ret; } catch(e) { }
try { var ret = vars[34].toJSON; if(ret) vars[85] = ret; } catch(e) { }
try { var ret = Date.prototype.getTimezoneOffset.call(vars[58]); if(ret) vars[5] = ret; } catch(e) { }
try { vars[90].toString = true; } catch(e) { }
try { var ret = vars[68].call(vars[0], vars[92], arg3, vars[87]); if(ret) vars[62] = ret; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[13], vars[40]); if(ret) vars[26] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[37], false, f9); if(ret) vars[49] = ret; } catch(e) { }
try { var ret = new vars[88](vars[36], vars[79], arg1, vars[66], 'a'); if(ret) vars[83] = ret; } catch(e) { }
try { vars[14].arguments = vars[88]; } catch(e) { }
try { var ret = Date(false, vars[97], vars[7], vars[37], vars[55], false, arg7); if(ret) vars[81] = ret; } catch(e) { }
try { var ret = new URIError(vars[39], vars[83], Infinity); if(ret) vars[71] = ret; } catch(e) { }
try { var ret = vars[66].call(vars[46], vars[82], Infinity, true); if(ret) vars[12] = ret; } catch(e) { }
try { vars[5] = f8; } catch(e) { }
try { var ret = new RegExp(Array(1025).join(String.fromCharCode(3, 41)) + Array(257).join(String.fromCharCode(40, 0)) + Array(4097).join(String.fromCharCode(13, 69))); if(ret) vars[49] = ret; } catch(e) { }
try { var ret = Debug.write(false); if(ret) vars[91] = ret; } catch(e) { }
try { vars[83] = {}; } catch(e) { }
try { vars[14].caller = vars[49]; } catch(e) { }
try { var ret = vars[64].callee; if(ret) vars[37] = ret; } catch(e) { }
try { var ret = VBArray.prototype.dimensions.call(vars[84]); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.moveNext.call(vars[10]); if(ret) vars[94] = ret; } catch(e) { }
try { var ret = encodeURIComponent(vars[21]); if(ret) vars[79] = ret; } catch(e) { }
try { vars[53] = Boolean; } catch(e) { }
try { var ret = vars[53].toLocaleString; if(ret) vars[11] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[22], vars[41], vars[96]); if(ret) vars[81] = ret; } catch(e) { }
try { var ret = RegExp.input; if(ret) vars[79] = ret; } catch(e) { }
try { var ret = VBArray(); if(ret) vars[73] = ret; } catch(e) { }
try { var ret = new Error(); if(ret) vars[99] = ret; } catch(e) { }
try { vars[12] = {}; } catch(e) { }
try { var ret = Array.prototype.reverse.call(vars[88]); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = Array.prototype.toString.call(vars[58]); if(ret) vars[78] = ret; } catch(e) { }
try { var ret = [arg3, vars[79], 'a']; if(ret) vars[91] = ret; } catch(e) { }
try { vars[34] = Date; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[64], arg1); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[89], 100); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = RegExp.$3; if(ret) vars[65] = ret; } catch(e) { }
try { vars[45] = {}; } catch(e) { }
try { vars[25].toPrecision = 'a'; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[0], Infinity, Infinity, vars[32], false); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = Error(vars[70]); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = vars[85].prototype; if(ret) vars[14] = ret; } catch(e) { }
try { var ret = Debug.writeln('a', vars[37], vars[96]); if(ret) vars[97] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[7], Array(17).join(String.fromCharCode(104, 17)) + Array(4097).join(String.fromCharCode(2, 82)) + Array(65).join(String.fromCharCode(34, 21))); } catch(e) { }
try { var ret = RangeError(arg4, 1000000, arg4); if(ret) vars[18] = ret; } catch(e) { }
try { vars[25][0] = vars[19]; } catch(e) { }
try { vars[11].toString = f9; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[37], vars[56]); if(ret) vars[81] = ret; } catch(e) { }
try { vars[40] = document.createElement("foo"); Object.defineProperty(vars[40], "foo", {get: f7, set: f2} ); } catch(e) { }
try { var ret = EncodeURI(false); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = ActiveXObject(vars[88]); if(ret) vars[49] = ret; } catch(e) { }
try { var ret = GetObject(vars[32]); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = new RegExp(Array(17).join(String.fromCharCode(56, 114))); if(ret) vars[6] = ret; } catch(e) { }
try { vars[69].input = 'a'; } catch(e) { }
try { var ret = VBArray.prototype.lbound.call(vars[0], false); if(ret) vars[60] = ret; } catch(e) { }
try { var ret = parseInt(false); if(ret) vars[93] = ret; } catch(e) { }
try { vars[95].source = vars[26]; } catch(e) { }
try { var ret = Debug.write(vars[78]); if(ret) vars[44] = ret; } catch(e) { }
try { vars[11][5] = vars[25]; } catch(e) { }
try { vars[65][1] = true; } catch(e) { }
try { var ret = new Error(); if(ret) vars[1] = ret; } catch(e) { }
try { vars[21] = JSON; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[51], 'a', vars[15]); if(ret) vars[70] = ret; } catch(e) { }
try { vars[62].prototype = true; } catch(e) { }
try { vars[16].options = 'a'; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[68], vars[10]); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = new Date(false, vars[82], 'a', vars[42], false, 'a', Infinity); if(ret) vars[54] = ret; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[15], vars[12], false); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = vars[41].toFixed; if(ret) vars[76] = ret; } catch(e) { }
try { var ret = Date.prototype.toJSON.call(vars[66]); if(ret) vars[28] = ret; } catch(e) { }
try { var ret = Object.defineProperty(vars[36], 'source', { get: f6, writable: Infinity, get: f1 }); if(ret) vars[53] = ret; } catch(e) { }
try { var ret = String.prototype.search.call(vars[27], 1000000); if(ret) vars[23] = ret; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[14], vars[49], Infinity); if(ret) vars[69] = ret; } catch(e) { }
try { var ret = VBArray.prototype.ubound.call(vars[78], Infinity); if(ret) vars[79] = ret; } catch(e) { }
try { var ret = RegExp.$1; if(ret) vars[46] = ret; } catch(e) { }
try { var ret = RegExp.$2; if(ret) vars[72] = ret; } catch(e) { }
try { var ret = VBArray(); if(ret) vars[54] = ret; } catch(e) { }
try { var ret = new vars[9](true, vars[24], vars[20], vars[98], vars[33]); if(ret) vars[47] = ret; } catch(e) { }
try { var ret = RegExp.$1; if(ret) vars[10] = ret; } catch(e) { }
try { var ret = JSON.stringify(vars[27]); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = new ActiveXObject(vars[86], false); if(ret) vars[22] = ret; } catch(e) { }
try { var ret = Array.prototype.reverse.call(vars[61]); if(ret) vars[62] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[19], vars[69], 3); } catch(e) { }
try { var ret = String.prototype.toLocaleLowerCase.call(vars[15]); if(ret) vars[80] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[62], vars[1], vars[32]); if(ret) vars[19] = ret; } catch(e) { }
try { var ret = vars[38].input; if(ret) vars[0] = ret; } catch(e) { }
try { var ret = new EvalError(vars[98], vars[65], vars[92]); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.atEnd.call(vars[12]); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = vars[20].length; if(ret) vars[10] = ret; } catch(e) { }
try { vars[79].toJSON = vars[69]; } catch(e) { }
try { var ret = vars[29].toPrecision; if(ret) vars[65] = ret; } catch(e) { }
try { var ret = escape(vars[48]); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = Object.defineProperty(vars[64], 'source', { set: f6, configurable: 1000, enumerable: Infinity }); if(ret) vars[70] = ret; } catch(e) { }
try { var ret = vars[14][1]; if(ret) vars[16] = ret; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[0], 536870912, vars[38], Infinity, vars[17]); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = Date(); if(ret) vars[63] = ret; } catch(e) { }
try { var ret = vars[28].lastIndex; if(ret) vars[84] = ret; } catch(e) { }
try { var ret = escape(Infinity); if(ret) vars[87] = ret; } catch(e) { }
try { vars[30] = RegExp; } catch(e) { }
try { var ret = VBArray.prototype.lbound.call(vars[74], vars[83]); if(ret) vars[11] = ret; } catch(e) { }
try { var ret = isFinite(vars[40]); if(ret) vars[81] = ret; } catch(e) { }
try { var ret = vars[12].foo; if(ret) vars[6] = ret; } catch(e) { }
try { vars[14] = Array; } catch(e) { }
try { vars[26][1073741824] = vars[23]; } catch(e) { }
try { var ret = new RuntimeObject(); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = Debug.writeln(vars[73]); if(ret) vars[56] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[75], vars[95]); } catch(e) { }
try { var ret = String.prototype.replace.call(vars[27], true, 'a'); if(ret) vars[46] = ret; } catch(e) { }
try { vars[64] = new Array(4); } catch(e) { }
try { var ret = vars[91].apply(vars[6], vars[99]); if(ret) vars[76] = ret; } catch(e) { }
try { vars[30] = document.createElement("foo"); Object.defineProperty(vars[30], "1073741823", {get: f2, set: f0} ); } catch(e) { }
try { var ret = Array.prototype.toLocaleString.call(vars[97]); if(ret) vars[93] = ret; } catch(e) { }
try { vars[0][1000000] = true; } catch(e) { }
try { var ret = parseInt(arg3); if(ret) vars[15] = ret; } catch(e) { }
try { var ret = new ActiveXObject(arg2); if(ret) vars[16] = ret; } catch(e) { }
try { var ret = new vars[89].call(vars[75], true, vars[79], vars[39], false, 1000000); if(ret) vars[51] = ret; } catch(e) { }
try { var ret = vars[2][0]; if(ret) vars[5] = ret; } catch(e) { }
try { var ret = new VBArray(); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = Array(vars[58], vars[20], 100); if(ret) vars[79] = ret; } catch(e) { }
try { var ret = RegExp.input; if(ret) vars[6] = ret; } catch(e) { }
try { var ret = URIError('a', 4, vars[56]); if(ret) vars[45] = ret; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[61], vars[2], vars[45]); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = new VBArray(); if(ret) vars[28] = ret; } catch(e) { }
try { var ret = Debug.write(100, vars[91], vars[33]); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = encodeURIComponent(vars[7]); if(ret) vars[87] = ret; } catch(e) { }
try { vars[79].constructor = true; } catch(e) { }
try { var ret = new Array(vars[28]); if(ret) vars[56] = ret; } catch(e) { }
try { var ret = vars[8].toJSON; if(ret) vars[87] = ret; } catch(e) { }
try { vars[17].lastIndex = vars[28]; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[74], true, vars[79], arg7, vars[38]); if(ret) vars[75] = ret; } catch(e) { }
try { vars[78].foo = arg5; } catch(e) { }
try { vars[73].toJSON = f7; } catch(e) { }
try { vars[63].toExponential = 0; } catch(e) { }
try { var ret = vars[4].toString; if(ret) vars[69] = ret; } catch(e) { }
try { var ret = Array.prototype.unshift.call(vars[1], true, vars[93]); if(ret) vars[14] = ret; } catch(e) { }
try { vars[8].toJSON = f3; } catch(e) { }
try { var ret = Boolean.prototype.toJSON.call(vars[29]); if(ret) vars[75] = ret; } catch(e) { }
try { var ret = vars[28][1]; if(ret) vars[37] = ret; } catch(e) { }
try { var ret = JSON.stringify(true); if(ret) vars[6] = ret; } catch(e) { }
try { vars[43] = Array; } catch(e) { }
try { var ret = new RegExp(Array(17).join(String.fromCharCode(8, 113)), 'i'); if(ret) vars[64] = ret; } catch(e) { }
try { vars[28] = ActiveXObject; } catch(e) { }
try { var ret = Date.prototype.getMilliseconds.call(vars[26]); if(ret) vars[34] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[91], vars[17]); if(ret) vars[43] = ret; } catch(e) { }
try { var ret = Date.prototype.getMilliseconds.call(vars[11]); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = RegExp.$3; if(ret) vars[70] = ret; } catch(e) { }
try { var ret = new Array(); if(ret) vars[66] = ret; } catch(e) { }
try { var ret = new Array(); if(ret) vars[77] = ret; } catch(e) { }
try { vars[50] = RegExp; } catch(e) { }
try { vars[98] = Date; } catch(e) { }
try { var ret = escape(vars[68]); if(ret) vars[79] = ret; } catch(e) { }
try { var ret = Debug.write(vars[43]); if(ret) vars[52] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[9], Array(17).join(String.fromCharCode(56, 23)) + Array(4097).join(String.fromCharCode(0, 93, 115)) + Array(65537).join(String.fromCharCode(123)), 'g'); } catch(e) { }
try { var ret = new Date(); if(ret) vars[5] = ret; } catch(e) { }
try { vars[17][10] = vars[31]; } catch(e) { }
try { vars[67] = new Array(4); } catch(e) { }
try { var ret = GetObject(vars[91]); if(ret) vars[5] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[51], 'a'); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = Boolean.prototype.toString.call(vars[1]); if(ret) vars[5] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[89]); if(ret) vars[63] = ret; } catch(e) { }
try { var ret = decodeURIComponent(vars[91]); if(ret) vars[50] = ret; } catch(e) { }
try { var ret = Date(); if(ret) vars[88] = ret; } catch(e) { }
try { vars[2][1] = vars[50]; } catch(e) { }
try { vars[87][-1] = vars[82]; } catch(e) { }
try { var ret = GetObject(Infinity); if(ret) vars[39] = ret; } catch(e) { }
try { vars[51] = Object; } catch(e) { }
try { RegExp.prototype.exec.call(vars[69], vars[38]); } catch(e) { }
try { var ret = RegExp.$1; if(ret) vars[71] = ret; } catch(e) { }
try { var ret = RegExp(Array(65537).join(String.fromCharCode(71, 97)) + Array(65537).join(String.fromCharCode(62, 71, 6)), 'i'); if(ret) vars[45] = ret; } catch(e) { }
try { var ret = arguments; if(ret) vars[64] = ret; } catch(e) { }
try { vars[96] = {}; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[95], Infinity, vars[42]); if(ret) vars[58] = ret; } catch(e) { }
try { vars[6][5] = vars[47]; } catch(e) { }
try { function f_inner_46() { return f1(); } vars[51] = f_inner_46; } catch(e) { }
try { var ret = Date(Infinity); if(ret) vars[70] = ret; } catch(e) { }
try { var ret = vars[22].arguments; if(ret) vars[42] = ret; } catch(e) { }
try { var ret = RegExp.input; if(ret) vars[20] = ret; } catch(e) { }
try { vars[81] = Date; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[80]); if(ret) vars[64] = ret; } catch(e) { }
try { vars[63] = f0; } catch(e) { }
try { var ret = ActiveXObject(true); if(ret) vars[67] = ret; } catch(e) { }
try { var ret = new Array(vars[50], vars[50], true); if(ret) vars[85] = ret; } catch(e) { }
try { var ret = RegExp.$5; if(ret) vars[44] = ret; } catch(e) { }
try { var ret = GetObject(vars[5]); if(ret) vars[19] = ret; } catch(e) { }
try { var ret = new Error(); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = new URIError(Infinity, 'a', vars[93]); if(ret) vars[24] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.moveFirst.call(vars[14]); if(ret) vars[29] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[89], vars[63]); if(ret) vars[56] = ret; } catch(e) { }
try { var ret = Array(vars[14], true, 'a'); if(ret) vars[16] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[46], vars[94]); if(ret) vars[51] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[64], true, vars[12]); if(ret) vars[46] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[63], vars[96]); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = vars[61].source; if(ret) vars[99] = ret; } catch(e) { }
try { var ret = URIError(vars[70], vars[67], 0); if(ret) vars[23] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[25]); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = new Error(false, vars[10], vars[91]); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = RegExp.$1; if(ret) vars[23] = ret; } catch(e) { }
try { var ret = RegExp.$5; if(ret) vars[2] = ret; } catch(e) { }
try { var ret = Date.prototype.toUTCString.call(vars[15]); if(ret) vars[24] = ret; } catch(e) { }
try { var ret = Date.prototype.toJSON.call(vars[8]); if(ret) vars[76] = ret; } catch(e) { }
try { var ret = Array.prototype.reverse.call(vars[25]); if(ret) vars[48] = ret; } catch(e) { }
try { function f_inner_47() { return f3(); } vars[18] = f_inner_47; } catch(e) { }
try { var ret = isFinite(vars[98]); if(ret) vars[73] = ret; } catch(e) { }
try { var ret = Date.parse(vars[26]); if(ret) vars[64] = ret; } catch(e) { }
try { vars[68] = new Array(0); } catch(e) { }
try { var ret = Array(); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = new VBArray(); if(ret) vars[75] = ret; } catch(e) { }
try { vars[99][1000000] = arg2; } catch(e) { }
try { vars[41].toLocaleString = arg1; } catch(e) { }
try { var ret = String.prototype.toLocaleUpperCase.call(vars[82]); if(ret) vars[82] = ret; } catch(e) { }
try { var ret = new Boolean(); if(ret) vars[36] = ret; } catch(e) { }
try { vars[53] = this; } catch(e) { }
try { var ret = RegExp.lastParen; if(ret) vars[19] = ret; } catch(e) { }
try { var ret = vars[61].toLocaleString; if(ret) vars[54] = ret; } catch(e) { }
try { var ret = parseInt(vars[85]); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[98], arg3, 5); if(ret) vars[66] = ret; } catch(e) { }
try { vars[91] = new Array(3); } catch(e) { }
try { var ret = new RuntimeObject(); if(ret) vars[78] = ret; } catch(e) { }
try { var ret = new Array(false); if(ret) vars[56] = ret; } catch(e) { }
try { var ret = vars[79].toJSON; if(ret) vars[51] = ret; } catch(e) { }
try { var ret = encodeURIComponent(arg1); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.atEnd.call(vars[63]); if(ret) vars[71] = ret; } catch(e) { }
try { var ret = vars[15].arguments; if(ret) vars[15] = ret; } catch(e) { }
try { var ret = VBArray(); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = Error.prototype.toString.call(vars[26]); if(ret) vars[45] = ret; } catch(e) { }
try { vars[41].input = vars[97]; } catch(e) { }
try { var ret = vars[70].call(vars[74], vars[70], vars[8], arg4, vars[28], vars[38]); if(ret) vars[22] = ret; } catch(e) { }
try { var ret = new ReferenceError(vars[84], false, vars[91]); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = VBArray(vars[60]); if(ret) vars[32] = ret; } catch(e) { }
try { var ret = DblFromLus(vars[48]); if(ret) vars[26] = ret; } catch(e) { }
try { var ret = Array(vars[91], vars[71], 'a'); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = new Error(); if(ret) vars[54] = ret; } catch(e) { }
try { vars[5].toLocaleString = false; } catch(e) { }
try { var ret = vars[10].valueOf; if(ret) vars[33] = ret; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[4], Infinity); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = Date(vars[92]); if(ret) vars[78] = ret; } catch(e) { }
try { var ret = RegExp(); if(ret) vars[55] = ret; } catch(e) { }
try { vars[23][-1] = vars[50]; } catch(e) { }
try { var ret = RegExp.$9; if(ret) vars[88] = ret; } catch(e) { }
try { vars[23] = document.createElement("foo"); } catch(e) { }
try { var ret = String.prototype.substring.call(vars[67], false, vars[37]); if(ret) vars[34] = ret; } catch(e) { }
try { vars[62].toLocaleString = true; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[50]); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = vars[25].caller; if(ret) vars[74] = ret; } catch(e) { }
try { var ret = Debug.writeln(true); if(ret) vars[88] = ret; } catch(e) { }
try { vars[24].toPrecision = arg8; } catch(e) { }
try { var ret = vars[16].callee; if(ret) vars[85] = ret; } catch(e) { }
try { var ret = LuLow(arg1); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = Debug.write(vars[4], vars[88], -1); if(ret) vars[88] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[79], -1, arg7); if(ret) vars[41] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[2], arg3, f5); if(ret) vars[16] = ret; } catch(e) { }
try { var ret = vars[52][1000]; if(ret) vars[76] = ret; } catch(e) { }
try { var ret = Array(257).join(String.fromCharCode(74, 53)); if(ret) vars[25] = ret; } catch(e) { }
try { vars[53] = Boolean; } catch(e) { }
try { var ret = String.prototype.split.call(vars[0], 'a', 'a'); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = String.prototype.match.call(vars[72], false); if(ret) vars[29] = ret; } catch(e) { }
try { vars[20] = document.createElement("foo"); Object.defineProperty(vars[20], "5", {get: f0, set: f9} ); } catch(e) { }
try { var ret = Array(); if(ret) vars[38] = ret; } catch(e) { }
try { var ret = LuLow(vars[42]); if(ret) vars[51] = ret; } catch(e) { }
try { var ret = parseInt(vars[93]); if(ret) vars[24] = ret; } catch(e) { }
try { var ret = JSON.stringify(vars[72]); if(ret) vars[46] = ret; } catch(e) { }
try { vars[52] = ActiveXObject; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[36], false, arg6); if(ret) vars[32] = ret; } catch(e) { }
try { var ret = RegExp.lastMatch; if(ret) vars[6] = ret; } catch(e) { }
try { var ret = new ReferenceError('a', Infinity, vars[91]); if(ret) vars[56] = ret; } catch(e) { }
try { var ret = new Error(vars[39], vars[76], Infinity); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = vars[85].prototype; if(ret) vars[71] = ret; } catch(e) { }
try { vars[56].valueOf = 'a'; } catch(e) { }
try { var ret = new ActiveXObject(vars[23]); if(ret) vars[0] = ret; } catch(e) { }
try { vars[76].lastIndex = vars[52]; } catch(e) { }
try { var ret = vars[74].toFixed; if(ret) vars[88] = ret; } catch(e) { }
try { var ret = vars[85].foo; if(ret) vars[93] = ret; } catch(e) { }
try { var ret = new EvalError(vars[38], vars[54], vars[73]); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = new Error(); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = new Array(); if(ret) vars[91] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[89], vars[58], false); } catch(e) { }
try { RegExp.prototype.test.call(vars[69], Array(65537).join(String.fromCharCode(64)) + Array(17).join(String.fromCharCode(118, 121)) + Array(65537).join(String.fromCharCode(88, 108, 9))); } catch(e) { }
try { var ret = arg2; if(ret) vars[16] = ret; } catch(e) { }
try { var ret = RegExp.$5; if(ret) vars[10] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[82], Array(1025).join(String.fromCharCode(68, 85)) + Array(17).join(String.fromCharCode(119, 42, 16)) + Array(1025).join(String.fromCharCode(24))); } catch(e) { }
try { vars[64] = Function; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[68], vars[19]); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = vars[29].foo; if(ret) vars[49] = ret; } catch(e) { }
try { var ret = RegExp.rightContext; if(ret) vars[86] = ret; } catch(e) { }
try { var ret = ActiveXObject(false); if(ret) vars[8] = ret; } catch(e) { }
try { var ret = String.prototype.strike.call(vars[47], 4); if(ret) vars[35] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[61], vars[14], vars[46]); if(ret) vars[93] = ret; } catch(e) { }
try { var ret = decodeURI(vars[98]); if(ret) vars[15] = ret; } catch(e) { }
try { var ret = Array.prototype.toString.call(vars[97]); if(ret) vars[56] = ret; } catch(e) { }
try { vars[31].toArray = f3; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[17], 'a', 'a'); if(ret) vars[42] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[52], 'a', false); if(ret) vars[15] = ret; } catch(e) { }
try { vars[93].options = vars[9]; } catch(e) { }
try { vars[8] = new Array(10); } catch(e) { }
try { RegExp.prototype.compile.call(vars[23], Array(65).join(String.fromCharCode(3, 25))); } catch(e) { }
try { vars[89].foo = arg6; } catch(e) { }
try { var ret = new Array(vars[8]); if(ret) vars[41] = ret; } catch(e) { }
try { var ret = new VBArray(vars[30]); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[72], false, arg4); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = JSON.parse(vars[80]); if(ret) vars[70] = ret; } catch(e) { }
try { vars[39].constructor = vars[81]; } catch(e) { }
try { var ret = String.prototype.charAt.call(vars[36], false); if(ret) vars[86] = ret; } catch(e) { }
try { vars[57] = new Array(-1); } catch(e) { }
try { vars[72].toPrecision = f3; } catch(e) { }
try { var ret = new Enumerator(); if(ret) vars[25] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[32], vars[2], vars[16]); if(ret) vars[34] = ret; } catch(e) { }
try { var ret = RuntimeObject(); if(ret) vars[65] = ret; } catch(e) { }
try { vars[50] = Array(65).join(String.fromCharCode(102, 61, 41)); } catch(e) { }
try { vars[80][10] = vars[65]; } catch(e) { }
try { var ret = Date.prototype.getTimezoneOffset.call(vars[82]); if(ret) vars[69] = ret; } catch(e) { }
try { var ret = EncodeURI(vars[60]); if(ret) vars[52] = ret; } catch(e) { }
try { vars[21] = Array(1025).join(String.fromCharCode(104, 36, 62)) + Array(17).join(String.fromCharCode(118, 92, 23)) + Array(1025).join(String.fromCharCode(78, 30, 93)); } catch(e) { }
try { var ret = Date.prototype.toJSON.call(vars[7]); if(ret) vars[62] = ret; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[80], vars[27]); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = vars[68].prototype; if(ret) vars[64] = ret; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[11], f0); if(ret) vars[76] = ret; } catch(e) { }
try { var ret = GetObject(vars[84], true); if(ret) vars[62] = ret; } catch(e) { }
try { var ret = vars[73].toString; if(ret) vars[89] = ret; } catch(e) { }
try { var ret = vars[60].options; if(ret) vars[35] = ret; } catch(e) { }
try { var ret = vars[97][3]; if(ret) vars[76] = ret; } catch(e) { }
try { var ret = vars[79][4]; if(ret) vars[24] = ret; } catch(e) { }
try { var ret = arguments; if(ret) vars[56] = ret; } catch(e) { }
try { vars[13].toFixed = vars[16]; } catch(e) { }
try { var ret = String.FromCharCode(vars[8], vars[17], vars[6]); if(ret) vars[14] = ret; } catch(e) { }
try { var ret = RegExp(Array(65).join(String.fromCharCode(33, 77, 25)) + Array(257).join(String.fromCharCode(31)), 'mii'); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = RegExp.rightContext; if(ret) vars[76] = ret; } catch(e) { }
try { var ret = Boolean.prototype.valueOf.call(vars[17]); if(ret) vars[28] = ret; } catch(e) { }
try { var ret = new vars[31].call(vars[55], vars[91], Infinity, true, vars[6], vars[16]); if(ret) vars[33] = ret; } catch(e) { }
try { vars[96].toJSON = false; } catch(e) { }
try { var ret = Date.prototype.getFullYear.call(vars[20]); if(ret) vars[71] = ret; } catch(e) { }
try { vars[53].source = vars[39]; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[41], true, 'a'); if(ret) vars[67] = ret; } catch(e) { }
try { vars[10].callee = vars[40]; } catch(e) { }
try { var ret = vars[42].options; if(ret) vars[95] = ret; } catch(e) { }
try { var ret = Array.prototype.pop.call(vars[37]); if(ret) vars[95] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[7], false, vars[50]); if(ret) vars[85] = ret; } catch(e) { }
try { function f_inner_25() { return f5(); } vars[27] = f_inner_25; } catch(e) { }
try { var ret = vars[65](vars[46], 'a', arg5, Infinity, Infinity); if(ret) vars[73] = ret; } catch(e) { }
try { vars[79] = RegExp; } catch(e) { }
try { var ret = vars[19].source; if(ret) vars[24] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleString.call(vars[68]); if(ret) vars[56] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[33], vars[56]); if(ret) vars[75] = ret; } catch(e) { }
try { vars[83][100] = 1000000; } catch(e) { }
try { vars[60].valueOf = vars[86]; } catch(e) { }
try { var ret = vars[37].options; if(ret) vars[18] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[56]); if(ret) vars[20] = ret; } catch(e) { }
try { var ret = new vars[40].call(vars[50], vars[84], 'a', arg1, false, vars[48]); if(ret) vars[60] = ret; } catch(e) { }
try { var ret = JSON.parse(vars[22]); if(ret) vars[20] = ret; } catch(e) { }
try { var ret = vars[12].options; if(ret) vars[49] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[27], vars[68], vars[49]); if(ret) vars[31] = ret; } catch(e) { }
try { var ret = RegExp.$7; if(ret) vars[74] = ret; } catch(e) { }
try { var ret = ReferenceError(vars[92], 1000, vars[52]); if(ret) vars[84] = ret; } catch(e) { }
try { var ret = Array(); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = ReferenceError(1000, vars[0], vars[86]); if(ret) vars[67] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[11]); if(ret) vars[73] = ret; } catch(e) { }
try { vars[99].toExponential = vars[42]; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[77], Infinity, false, vars[95]); if(ret) vars[99] = ret; } catch(e) { }
try { var ret = Array.prototype.unshift.call(vars[48], 'a', vars[60]); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[86], true); if(ret) vars[12] = ret; } catch(e) { }
try { var ret = Array.prototype.unshift.call(vars[6], 'a', arg4); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = vars[81].arguments; if(ret) vars[46] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.atEnd.call(vars[11]); if(ret) vars[88] = ret; } catch(e) { }
try { var ret = vars[7].toString; if(ret) vars[48] = ret; } catch(e) { }
try { var ret = String.prototype.localeCompare.call(vars[23], vars[92]); if(ret) vars[52] = ret; } catch(e) { }
try { var ret = new Error(vars[83]); if(ret) vars[44] = ret; } catch(e) { }
try { var ret = EvalError(false, false, arg4); if(ret) vars[11] = ret; } catch(e) { }
try { var ret = new RegExp(Array(65537).join(String.fromCharCode(40, 78)) + Array(65).join(String.fromCharCode(111, 87))); if(ret) vars[55] = ret; } catch(e) { }
try { var ret = new Boolean(); if(ret) vars[43] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[64], vars[65]); if(ret) vars[82] = ret; } catch(e) { }
try { vars[72][2] = Infinity; } catch(e) { }
try { var ret = Enumerator.prototype.moveFirst.call(vars[79]); if(ret) vars[85] = ret; } catch(e) { }
try { var ret = unescape(Infinity); if(ret) vars[2] = ret; } catch(e) { }
try { var ret = new VBArray(); if(ret) vars[80] = ret; } catch(e) { }
try { vars[29].valueOf = f2; } catch(e) { }
try { var ret = Array.prototype.reverse.call(vars[79]); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = Array(1025).join(String.fromCharCode(115, 36, 25)) + Array(4097).join(String.fromCharCode(15)) + Array(4097).join(String.fromCharCode(57)); if(ret) vars[75] = ret; } catch(e) { }
try { vars[29] = Object; } catch(e) { }
try { var ret = VBArray.prototype.toArray.call(vars[5]); if(ret) vars[13] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[85], vars[41], arg9); if(ret) vars[43] = ret; } catch(e) { }
try { var ret = new VBArray(); if(ret) vars[66] = ret; } catch(e) { }
try { vars[78] = {}; } catch(e) { }
try { var ret = RegExp.$1; if(ret) vars[37] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleTimeString.call(vars[10]); if(ret) vars[81] = ret; } catch(e) { }
try { var ret = String.prototype.toLowerCase.call(vars[85]); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = new vars[29].apply(vars[17], false); if(ret) vars[69] = ret; } catch(e) { }
try { var ret = RegExp.$1; if(ret) vars[88] = ret; } catch(e) { }
try { var ret = new VBArray(); if(ret) vars[32] = ret; } catch(e) { }
try { vars[93][1000000] = arg2; } catch(e) { }
try { var ret = vars[4].toJSON; if(ret) vars[32] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[56], arg2, 2); if(ret) vars[38] = ret; } catch(e) { }
try { var ret = Date.parse(false); if(ret) vars[80] = ret; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[58], vars[4]); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = new Error(vars[19]); if(ret) vars[22] = ret; } catch(e) { }
try { var ret = RegExp.lastIndex; if(ret) vars[14] = ret; } catch(e) { }
try { vars[46] = new Array(-1); } catch(e) { }
try { var ret = Date.prototype.getFullYear.call(vars[72]); if(ret) vars[64] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.atEnd.call(vars[39]); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = vars[97].toJSON; if(ret) vars[79] = ret; } catch(e) { }
try { var ret = vars[6].arguments; if(ret) vars[63] = ret; } catch(e) { }
try { var ret = Error(vars[26]); if(ret) vars[94] = ret; } catch(e) { }
try { var ret = Error(true); if(ret) vars[58] = ret; } catch(e) { }
try { vars[49] = document.createElement("foo"); Object.defineProperty(vars[49], "toLocaleString", {get: f5, set: f9} ); } catch(e) { }
try { var ret = new Array(); if(ret) vars[67] = ret; } catch(e) { }
try { var ret = String.FromCharCode(vars[40], false, vars[34]); if(ret) vars[46] = ret; } catch(e) { }
try { vars[93] = {}; } catch(e) { }
try { vars[70][-1] = vars[98]; } catch(e) { }
try { var ret = Array(vars[44], vars[78], 2); if(ret) vars[45] = ret; } catch(e) { }
try { var ret = vars[42][4294967296]; if(ret) vars[47] = ret; } catch(e) { }
try { var ret = RegExp.lastParen; if(ret) vars[15] = ret; } catch(e) { }
try { var ret = RegExp(Array(257).join(String.fromCharCode(15)) + Array(257).join(String.fromCharCode(59, 120))); if(ret) vars[7] = ret; } catch(e) { }
try { vars[93] = new Array(2); } catch(e) { }
try { vars[90] = new Array(4); } catch(e) { }
try { var ret = new ReferenceError(vars[29], vars[30], vars[71]); if(ret) vars[55] = ret; } catch(e) { }
try { var ret = Date.prototype.valueOf.call(vars[60]); if(ret) vars[97] = ret; } catch(e) { }
try { vars[13][10] = vars[74]; } catch(e) { }
try { vars[49] = new Array(100); } catch(e) { }
try { vars[65].toExponential = vars[18]; } catch(e) { }
try { vars[82] = Array; } catch(e) { }
try { vars[48] = {}; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[64], Infinity); if(ret) vars[37] = ret; } catch(e) { }
try { vars[41].caller = arg6; } catch(e) { }
try { var ret = arg5; if(ret) vars[88] = ret; } catch(e) { }
try { var ret = new Enumerator('a'); if(ret) vars[73] = ret; } catch(e) { }
try { var ret = new Date(vars[11]); if(ret) vars[83] = ret; } catch(e) { }
try { var ret = ActiveXObject(vars[64]); if(ret) vars[23] = ret; } catch(e) { }
try { var ret = RegExp(); if(ret) vars[39] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleString.call(vars[86]); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = vars[65].lastIndex; if(ret) vars[13] = ret; } catch(e) { }
try { var ret = DblFromLus(vars[17]); if(ret) vars[20] = ret; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[70], vars[12], vars[31], vars[59], Infinity); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = RegExp.$7; if(ret) vars[60] = ret; } catch(e) { }
try { var ret = vars[42].call(vars[34]); if(ret) vars[69] = ret; } catch(e) { }
try { vars[13] = Array; } catch(e) { }
try { vars[74].toExponential = f5; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[54], vars[43]); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = RegExp.input; if(ret) vars[65] = ret; } catch(e) { }
try { var ret = RegExp.$8; if(ret) vars[67] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[6], 'a'); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleUpperCase.call(vars[65]); if(ret) vars[26] = ret; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[66], vars[88], vars[9]); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = Enumerator(); if(ret) vars[29] = ret; } catch(e) { }
try { var ret = encodeURIComponent(vars[68]); if(ret) vars[64] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[48], Array(1025).join(String.fromCharCode(100)) + Array(65537).join(String.fromCharCode(102, 5, 62)) + Array(65).join(String.fromCharCode(126, 12)), 'mi'); } catch(e) { }
try { var ret = RegExp.$8; if(ret) vars[25] = ret; } catch(e) { }
try { vars[68].options = arg6; } catch(e) { }
try { var ret = RegExp.input; if(ret) vars[3] = ret; } catch(e) { }
try { vars[6] = {}; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[88], arg3); if(ret) vars[84] = ret; } catch(e) { }
try { var ret = arguments; if(ret) vars[60] = ret; } catch(e) { }
try { var ret = Debug.writeln(vars[55]); if(ret) vars[53] = ret; } catch(e) { }
try { var ret = vars[39].valueOf; if(ret) vars[75] = ret; } catch(e) { }
try { var ret = ReferenceError(false, arg1, false); if(ret) vars[80] = ret; } catch(e) { }
try { var ret = vars[96].toJSON; if(ret) vars[65] = ret; } catch(e) { }
try { vars[62].options = vars[25]; } catch(e) { }
try { var ret = unescape('a'); if(ret) vars[70] = ret; } catch(e) { }
try { var ret = new ActiveXObject(vars[15]); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = new Error(Infinity); if(ret) vars[29] = ret; } catch(e) { }
try { vars[4].toPrecision = vars[97]; } catch(e) { }
try { vars[98].toExponential = arg4; } catch(e) { }
try { var ret = String.prototype.toLocaleLowerCase.call(vars[7]); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = Date.prototype.getMilliseconds.call(vars[70]); if(ret) vars[51] = ret; } catch(e) { }
try { var ret = Array.prototype.toLocaleString.call(vars[96]); if(ret) vars[13] = ret; } catch(e) { }
try { vars[51].toLocaleString = false; } catch(e) { }
try { vars[70].toFixed = f3; } catch(e) { }
try { vars[42][10] = false; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[34], false, 'a'); if(ret) vars[14] = ret; } catch(e) { }
try { var ret = Object.getOwnPropertyDescriptor(vars[21], true); if(ret) vars[5] = ret; } catch(e) { }
try { vars[11].valueOf = f2; } catch(e) { }
try { var ret = RegExp.$1; if(ret) vars[69] = ret; } catch(e) { }
try { var ret = LuLow(vars[59]); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[3], vars[7], vars[88]); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = decodeURI(vars[80]); if(ret) vars[15] = ret; } catch(e) { }
try { var ret = new vars[39].apply(vars[74], vars[82]); if(ret) vars[11] = ret; } catch(e) { }
try { var ret = RegExp.lastParen; if(ret) vars[99] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[3]); if(ret) vars[40] = ret; } catch(e) { }
try { var ret = VBArray.prototype.dimensions.call(vars[46]); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = JSON.stringify(vars[35]); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = new RegExp(Array(65).join(String.fromCharCode(99, 50)) + Array(4097).join(String.fromCharCode(64, 52, 0))); if(ret) vars[53] = ret; } catch(e) { }
try { vars[60] = {}; } catch(e) { }
try { vars[60].toString = f3; } catch(e) { }
try { var ret = new RegExp(Array(4097).join(String.fromCharCode(23, 59, 63)) + Array(65).join(String.fromCharCode(10)), 'igi'); if(ret) vars[53] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[98], 'a', false); if(ret) vars[34] = ret; } catch(e) { }
try { var ret = vars[83][1000000]; if(ret) vars[49] = ret; } catch(e) { }
try { var ret = Object.defineProperty(vars[7], '-1', { get: f3 }); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[22], 4, 'a'); if(ret) vars[19] = ret; } catch(e) { }
try { var ret = new RegExp(); if(ret) vars[78] = ret; } catch(e) { }
try { var ret = vars[19].arguments; if(ret) vars[57] = ret; } catch(e) { }
try { vars[63].valueOf = 1; } catch(e) { }
try { var ret = new Array(); if(ret) vars[82] = ret; } catch(e) { }
try { var ret = vars[46].global; if(ret) vars[40] = ret; } catch(e) { }
try { vars[68] = {}; } catch(e) { }
try { vars[14] = new Array(3); } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[18], vars[91], false); if(ret) vars[26] = ret; } catch(e) { }
//endjs
CollectGarbage();
return vars[49];

}

function f3(arg1, arg2, arg3) {
runcount.f3++; if(runcount.f3>2) return;
//alert(3);
//beginjs
try { var ret = vars[50].foo; if(ret) vars[78] = ret; } catch(e) { }
try { var ret = Debug.writeln(true); if(ret) vars[41] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.moveFirst.call(vars[8]); if(ret) vars[19] = ret; } catch(e) { }
try { vars[99][4] = vars[70]; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[10], 0, Infinity); if(ret) vars[76] = ret; } catch(e) { }
try { vars[76].lastIndex = true; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[47], Infinity); if(ret) vars[82] = ret; } catch(e) { }
try { var ret = new ActiveXObject(vars[14], vars[78]); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = Boolean(); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = EvalError('a', arg8, vars[40]); if(ret) vars[77] = ret; } catch(e) { }
try { var ret = RegExp.index; if(ret) vars[66] = ret; } catch(e) { }
try { var ret = String.prototype.charAt.call(vars[22], vars[12]); if(ret) vars[88] = ret; } catch(e) { }
try { vars[94] = new Array(0); } catch(e) { }
try { vars[11].toJSON = f0; } catch(e) { }
try { var ret = Boolean.prototype.toString.call(vars[88]); if(ret) vars[61] = ret; } catch(e) { }
try { vars[45].toPrecision = f3; } catch(e) { }
try { vars[65].options = Infinity; } catch(e) { }
try { var ret = Boolean.prototype.toString.call(vars[54]); if(ret) vars[36] = ret; } catch(e) { }
try { vars[60].toFixed = vars[67]; } catch(e) { }
try { var ret = Array(vars[86]); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[72], f4); if(ret) vars[86] = ret; } catch(e) { }
try { vars[65][4] = true; } catch(e) { }
try { var ret = vars[90].prototype; if(ret) vars[32] = ret; } catch(e) { }
try { var ret = decodeURIComponent(vars[76]); if(ret) vars[20] = ret; } catch(e) { }
try { vars[27].global = vars[4]; } catch(e) { }
try { var ret = Date.prototype.toLocaleTimeString.call(vars[77]); if(ret) vars[57] = ret; } catch(e) { }
try { vars[43] = document.createElement("foo"); Object.defineProperty(vars[43], "options", {get: f0, set: f3} ); } catch(e) { }
try { var ret = ActiveXObject(false); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = Object.getOwnPropertyDescriptor(vars[57], vars[2]); if(ret) vars[29] = ret; } catch(e) { }
try { vars[49] = RegExp; } catch(e) { }
try { vars[77] = Function; } catch(e) { }
try { var ret = new vars[7].call(vars[86], vars[10], false, 'a', vars[7], 'a'); if(ret) vars[52] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleTimeString.call(vars[56]); if(ret) vars[39] = ret; } catch(e) { }
try { var ret = RangeError(arg1, vars[12], arg9); if(ret) vars[45] = ret; } catch(e) { }
try { vars[12].caller = vars[23]; } catch(e) { }
try { var ret = RegExp.lastParen; if(ret) vars[63] = ret; } catch(e) { }
try { var ret = RegExp.$5; if(ret) vars[67] = ret; } catch(e) { }
try { var ret = Date.prototype.getFullYear.call(vars[40]); if(ret) vars[20] = ret; } catch(e) { }
try { var ret = vars[88].source; if(ret) vars[40] = ret; } catch(e) { }
try { var ret = Error(vars[68]); if(ret) vars[34] = ret; } catch(e) { }
try { var ret = Function.prototype.toString.call(vars[32]); if(ret) vars[89] = ret; } catch(e) { }
try { vars[45] = Boolean; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[54], vars[30], vars[75], arg6, 'a'); if(ret) vars[47] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[21], true, false); if(ret) vars[94] = ret; } catch(e) { }
try { var ret = parseFloat('a'); if(ret) vars[39] = ret; } catch(e) { }
try { var ret = Date.prototype.getMilliseconds.call(vars[41]); if(ret) vars[56] = ret; } catch(e) { }
try { vars[5].length = arg6; } catch(e) { }
try { var ret = RegExp.lastParen; if(ret) vars[51] = ret; } catch(e) { }
try { var ret = escape(vars[11]); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleTimeString.call(vars[56]); if(ret) vars[6] = ret; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[17], 'a', vars[91]); if(ret) vars[15] = ret; } catch(e) { }
try { var ret = vars[69].toFixed; if(ret) vars[6] = ret; } catch(e) { }
try { var ret = new ReferenceError(vars[32], true, vars[21]); if(ret) vars[31] = ret; } catch(e) { }
try { var ret = Object.getOwnPropertyDescriptor(vars[39], vars[54]); if(ret) vars[55] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[31], true); if(ret) vars[97] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[6], Array(65537).join(String.fromCharCode(41, 104, 78)) + Array(17).join(String.fromCharCode(44, 95)) + Array(17).join(String.fromCharCode(21, 56))); } catch(e) { }
try { var ret = new Array(arg5, 4, 1000); if(ret) vars[11] = ret; } catch(e) { }
try { var ret = String.prototype.toUpperCase.call(vars[22]); if(ret) vars[95] = ret; } catch(e) { }
try { vars[25].lastIndex = vars[15]; } catch(e) { }
try { var ret = RegExp.$8; if(ret) vars[40] = ret; } catch(e) { }
try { vars[25].toArray = f3; } catch(e) { }
try { var ret = RegExp.$6; if(ret) vars[68] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[11], Array(65537).join(String.fromCharCode(52, 125))); } catch(e) { }
try { var ret = String.prototype.replace.call(vars[99], Infinity, f0); if(ret) vars[88] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[21], 'a'); if(ret) vars[11] = ret; } catch(e) { }
try { var ret = new VBArray(); if(ret) vars[69] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[0], arg4); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = RegExp.$1; if(ret) vars[1] = ret; } catch(e) { }
try { vars[99] = this; } catch(e) { }
try { var ret = RegExp.$6; if(ret) vars[65] = ret; } catch(e) { }
try { vars[48] = RegExp; } catch(e) { }
try { var ret = Debug.writeln('a'); if(ret) vars[33] = ret; } catch(e) { }
try { vars[15] = {}; } catch(e) { }
try { vars[43] = RegExp; } catch(e) { }
try { var ret = String.prototype.toLocaleLowerCase.call(vars[15]); if(ret) vars[91] = ret; } catch(e) { }
try { var ret = new Date(true, vars[36], arg8, 3, Infinity, vars[1], vars[98]); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[71], false); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[94], arg1, vars[39]); if(ret) vars[69] = ret; } catch(e) { }
try { vars[23] = Array; } catch(e) { }
try { var ret = new Error('a', vars[93], 'a'); if(ret) vars[97] = ret; } catch(e) { }
try { var ret = String.prototype.charAt.call(vars[96], 'a'); if(ret) vars[32] = ret; } catch(e) { }
try { var ret = Function.prototype.toString.call(vars[88]); if(ret) vars[8] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[74], 1); if(ret) vars[56] = ret; } catch(e) { }
try { var ret = RangeError(false, arg7, vars[23]); if(ret) vars[76] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleTimeString.call(vars[4]); if(ret) vars[44] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[40], 'a'); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = vars[35].foo; if(ret) vars[34] = ret; } catch(e) { }
try { var ret = LuLow('a'); if(ret) vars[70] = ret; } catch(e) { }
try { var ret = new ActiveXObject('a'); if(ret) vars[51] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[81], 'a', vars[95]); if(ret) vars[46] = ret; } catch(e) { }
try { vars[44] = Date; } catch(e) { }
try { var ret = new vars[94].call(vars[54], -1, vars[69], vars[43], vars[39], vars[45]); if(ret) vars[88] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[27], arg7); if(ret) vars[33] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[86], true); } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[66], 2, vars[47], true, vars[6]); if(ret) vars[44] = ret; } catch(e) { }
try { var ret = Array.prototype.shift.call(vars[65]); if(ret) vars[2] = ret; } catch(e) { }
try { var ret = new ActiveXObject(vars[94], false); if(ret) vars[11] = ret; } catch(e) { }
try { var ret = RegExp.$9; if(ret) vars[49] = ret; } catch(e) { }
try { var ret = RegExp.lastIndex; if(ret) vars[34] = ret; } catch(e) { }
try { var ret = Array.prototype.pop.call(vars[23]); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = new RegExp(); if(ret) vars[94] = ret; } catch(e) { }
try { vars[89][100] = true; } catch(e) { }
try { var ret = new Date(vars[27], vars[94], vars[54], 'a', false, vars[78], vars[36]); if(ret) vars[34] = ret; } catch(e) { }
try { var ret = RegExp.lastParen; if(ret) vars[86] = ret; } catch(e) { }
try { var ret = Debug.writeln(vars[3]); if(ret) vars[64] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[51]); if(ret) vars[53] = ret; } catch(e) { }
try { var ret = new Error('a', arg5, true); if(ret) vars[54] = ret; } catch(e) { }
try { var ret = String.prototype.match.call(vars[76], Infinity); if(ret) vars[89] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[35], 'a', vars[99]); } catch(e) { }
try { var ret = RegExp.$5; if(ret) vars[69] = ret; } catch(e) { }
try { vars[44] = new Array(5); } catch(e) { }
try { var ret = String.prototype.toLocaleUpperCase.call(vars[44]); if(ret) vars[53] = ret; } catch(e) { }
try { var ret = Array.prototype.shift.call(vars[54]); if(ret) vars[94] = ret; } catch(e) { }
try { var ret = vars[12](vars[20], vars[77], 1000000, vars[49], vars[90]); if(ret) vars[59] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleLowerCase.call(vars[41]); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = new vars[55].call(vars[92], vars[63], 'a', vars[26], vars[19], true); if(ret) vars[14] = ret; } catch(e) { }
try { var ret = encodeURIComponent(vars[9]); if(ret) vars[17] = ret; } catch(e) { }
try { vars[43] = new Array(1000); } catch(e) { }
try { var ret = VBArray(vars[39]); if(ret) vars[93] = ret; } catch(e) { }
try { var ret = new RegExp(); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[43], vars[54]); if(ret) vars[77] = ret; } catch(e) { }
try { var ret = JSON.stringify(vars[30]); if(ret) vars[26] = ret; } catch(e) { }
try { var ret = VBArray(); if(ret) vars[70] = ret; } catch(e) { }
try { var ret = Error(); if(ret) vars[56] = ret; } catch(e) { }
try { var ret = vars[67].toExponential; if(ret) vars[49] = ret; } catch(e) { }
try { vars[71] = Object; } catch(e) { }
try { vars[89] = RegExp; } catch(e) { }
try { var ret = vars[51].input; if(ret) vars[51] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[18]); if(ret) vars[29] = ret; } catch(e) { }
try { var ret = escape(vars[4]); if(ret) vars[69] = ret; } catch(e) { }
try { var ret = vars[53].appy(vars[2], vars[79]); if(ret) vars[76] = ret; } catch(e) { }
try { vars[28] = {}; } catch(e) { }
try { var ret = vars[47].length; if(ret) vars[35] = ret; } catch(e) { }
try { var ret = new Array(vars[22], 4, Infinity); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = RegExp.leftContext; if(ret) vars[15] = ret; } catch(e) { }
try { var ret = ActiveXObject(Infinity, false); if(ret) vars[8] = ret; } catch(e) { }
try { var ret = encodeURIComponent('a'); if(ret) vars[66] = ret; } catch(e) { }
try { var ret = Date.UTC(arg7, false, false, vars[3], vars[92], vars[53], Infinity); if(ret) vars[20] = ret; } catch(e) { }
try { vars[62].toPrecision = vars[32]; } catch(e) { }
try { var ret = new Date(vars[51], Infinity, arg5, 'a', arg4, vars[7], vars[51]); if(ret) vars[13] = ret; } catch(e) { }
try { var ret = vars[44].callee; if(ret) vars[36] = ret; } catch(e) { }
try { vars[53] = new Array(100); } catch(e) { }
try { var ret = Date.prototype.toLocaleTimeString.call(vars[9]); if(ret) vars[59] = ret; } catch(e) { }
try { var ret = String.prototype.charAt.call(vars[40], 100); if(ret) vars[32] = ret; } catch(e) { }
try { vars[97] = new Array(2); } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[92], vars[62], Infinity, vars[42], Infinity); if(ret) vars[48] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[3], Array(4097).join(String.fromCharCode(42, 35)) + Array(65537).join(String.fromCharCode(3, 97, 37)) + Array(65537).join(String.fromCharCode(98, 103)), 'iim'); } catch(e) { }
try { var ret = GetObject(0, 536870912); if(ret) vars[2] = ret; } catch(e) { }
try { var ret = parseFloat(vars[0]); if(ret) vars[21] = ret; } catch(e) { }
try { vars[93] = new Array(1000); } catch(e) { }
try { var ret = Date(vars[37]); if(ret) vars[95] = ret; } catch(e) { }
try { var ret = URIError(true, -1, false); if(ret) vars[5] = ret; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[87], arg2, vars[27]); if(ret) vars[82] = ret; } catch(e) { }
try { var ret = new ReferenceError(vars[24], vars[57], false); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = new vars[3].call(vars[93], vars[67], 'a', vars[9], true, vars[97]); if(ret) vars[28] = ret; } catch(e) { }
try { vars[68] = document.createElement("foo"); Object.defineProperty(vars[68], "toString", {get: f8, set: f3} ); } catch(e) { }
try { var ret = Array.prototype.join.call(vars[41], 4294967295); if(ret) vars[88] = ret; } catch(e) { }
try { var ret = vars[32].lastIndex; if(ret) vars[29] = ret; } catch(e) { }
try { var ret = new RangeError('a', vars[61], vars[35]); if(ret) vars[55] = ret; } catch(e) { }
try { var ret = Array(4097).join(String.fromCharCode(60, 109, 56)) + Array(17).join(String.fromCharCode(3, 102)) + Array(65).join(String.fromCharCode(34, 102)); if(ret) vars[53] = ret; } catch(e) { }
try { var ret = Array.prototype.pop.call(vars[24]); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = vars[91].arguments; if(ret) vars[9] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[7], arg9); if(ret) vars[88] = ret; } catch(e) { }
try { var ret = new Date(); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[86], vars[61]); if(ret) vars[80] = ret; } catch(e) { }
try { var ret = new URIError(vars[28], false, vars[27]); if(ret) vars[95] = ret; } catch(e) { }
try { vars[49].caller = vars[14]; } catch(e) { }
try { var ret = vars[22].toJSON; if(ret) vars[97] = ret; } catch(e) { }
try { var ret = []; if(ret) vars[37] = ret; } catch(e) { }
try { var ret = new vars[79].call(vars[44], 1000000, vars[54], true, vars[84], Infinity); if(ret) vars[58] = ret; } catch(e) { }
try { var ret = new Error(vars[18], arg9, false); if(ret) vars[94] = ret; } catch(e) { }
try { vars[56].source = vars[28]; } catch(e) { }
try { var ret = Date.prototype.getFullYear.call(vars[45]); if(ret) vars[34] = ret; } catch(e) { }
try { vars[44] = ActiveXObject; } catch(e) { }
try { var ret = RegExp(Array(4097).join(String.fromCharCode(81, 124, 124)) + Array(4097).join(String.fromCharCode(58, 8, 94)) + Array(257).join(String.fromCharCode(6))); if(ret) vars[93] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[42], Array(65537).join(String.fromCharCode(63, 62, 96)) + Array(257).join(String.fromCharCode(17, 19)), 'gmi'); } catch(e) { }
try { var ret = vars[78].apply(vars[84], vars[11]); if(ret) vars[5] = ret; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[31], vars[47], false); if(ret) vars[8] = ret; } catch(e) { }
try { var ret = Date.prototype.toUTCString.call(vars[32]); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = Array(65537).join(String.fromCharCode(27, 62)); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = vars[83](Infinity, vars[10], vars[23], vars[73], 'a'); if(ret) vars[16] = ret; } catch(e) { }
try { var ret = Array(vars[31]); if(ret) vars[60] = ret; } catch(e) { }
try { var ret = String.prototype.toUpperCase.call(vars[89]); if(ret) vars[84] = ret; } catch(e) { }
try { var ret = vars[97].call(vars[26], vars[98], vars[6], vars[59], false, true); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = vars[32].input; if(ret) vars[25] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[4]); if(ret) vars[19] = ret; } catch(e) { }
try { var ret = String.prototype.match.call(vars[87], vars[31]); if(ret) vars[24] = ret; } catch(e) { }
try { vars[37].lastIndex = vars[71]; } catch(e) { }
try { var ret = vars[26].global; if(ret) vars[36] = ret; } catch(e) { }
try { var ret = []; if(ret) vars[47] = ret; } catch(e) { }
try { var ret = Array.prototype.unshift.call(vars[69], 100, 3); if(ret) vars[13] = ret; } catch(e) { }
try { vars[11].input = vars[67]; } catch(e) { }
try { var ret = Array.prototype.reverse.call(vars[92]); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = Array(false, 1000, vars[18]); if(ret) vars[89] = ret; } catch(e) { }
try { vars[98] = document.createElement("foo"); } catch(e) { }
try { var ret = vars[58].callee; if(ret) vars[14] = ret; } catch(e) { }
try { vars[46] = {}; } catch(e) { }
try { var ret = RegExp.lastMatch; if(ret) vars[64] = ret; } catch(e) { }
try { var ret = Array(17).join(String.fromCharCode(66, 43)) + Array(4097).join(String.fromCharCode(71, 113, 107)); if(ret) vars[61] = ret; } catch(e) { }
try { var ret = Date.prototype.getMilliseconds.call(vars[50]); if(ret) vars[97] = ret; } catch(e) { }
try { vars[14][100] = vars[52]; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[50], true); if(ret) vars[81] = ret; } catch(e) { }
try { var ret = arguments; if(ret) vars[50] = ret; } catch(e) { }
try { var ret = new EvalError(0, arg8, vars[58]); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = LuLow(vars[27]); if(ret) vars[35] = ret; } catch(e) { }
try { var ret = vars[44].options; if(ret) vars[20] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.moveNext.call(vars[91]); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = vars[3].toJSON; if(ret) vars[20] = ret; } catch(e) { }
try { vars[83].toString = false; } catch(e) { }
try { var ret = RuntimeObject(); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[19], Infinity); if(ret) vars[40] = ret; } catch(e) { }
try { var ret = vars[38].caller; if(ret) vars[46] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[6], Array(65).join(String.fromCharCode(37, 83)) + Array(257).join(String.fromCharCode(48, 74, 16))); } catch(e) { }
try { var ret = Function.prototype.call.call(vars[54], vars[70]); if(ret) vars[74] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[63], vars[68], arg2); if(ret) vars[57] = ret; } catch(e) { }
try { vars[75][-1] = 1000; } catch(e) { }
try { var ret = RegExp.$4; if(ret) vars[75] = ret; } catch(e) { }
try { vars[57] = {}; } catch(e) { }
try { var ret = vars[59].toExponential; if(ret) vars[82] = ret; } catch(e) { }
try { var ret = String.prototype.search.call(vars[14], true); if(ret) vars[45] = ret; } catch(e) { }
try { var ret = Enumerator(); if(ret) vars[20] = ret; } catch(e) { }
try { var ret = vars[23].toJSON; if(ret) vars[65] = ret; } catch(e) { }
try { var ret = VBArray(); if(ret) vars[70] = ret; } catch(e) { }
try { vars[72][4] = vars[0]; } catch(e) { }
try { var ret = new vars[80]('a', vars[21], vars[23], arg6, vars[23]); if(ret) vars[7] = ret; } catch(e) { }
try { vars[50].toPrecision = f6; } catch(e) { }
try { var ret = new Date(vars[46]); if(ret) vars[52] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[37], vars[30]); if(ret) vars[76] = ret; } catch(e) { }
try { var ret = new RangeError(5, vars[18], 4); if(ret) vars[82] = ret; } catch(e) { }
try { vars[78].constructor = 'a'; } catch(e) { }
try { var ret = arguments; if(ret) vars[61] = ret; } catch(e) { }
try { var ret = encodeURIComponent(vars[92]); if(ret) vars[87] = ret; } catch(e) { }
try { vars[69].valueOf = f8; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[73], arg9, vars[29]); if(ret) vars[65] = ret; } catch(e) { }
try { var ret = new Enumerator(); if(ret) vars[10] = ret; } catch(e) { }
try { vars[3].input = arg4; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[48]); if(ret) vars[59] = ret; } catch(e) { }
try { var ret = VBArray.prototype.toArray.call(vars[6]); if(ret) vars[31] = ret; } catch(e) { }
try { var ret = Date.prototype.toUTCString.call(vars[31]); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = vars[1].callee; if(ret) vars[5] = ret; } catch(e) { }
try { var ret = Boolean.prototype.valueOf.call(vars[83]); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[85], vars[24], vars[2], vars[91], vars[60]); if(ret) vars[81] = ret; } catch(e) { }
try { vars[42] = Date; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[41], vars[20]); if(ret) vars[50] = ret; } catch(e) { }
try { vars[73].foo = vars[92]; } catch(e) { }
try { var ret = Enumerator.prototype.moveNext.call(vars[79]); if(ret) vars[29] = ret; } catch(e) { }
try { var ret = encodeURIComponent(vars[71]); if(ret) vars[83] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[0], vars[92]); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = String.prototype.match.call(vars[80], vars[58]); if(ret) vars[73] = ret; } catch(e) { }
try { var ret = vars[28][10]; if(ret) vars[74] = ret; } catch(e) { }
try { vars[42].input = vars[62]; } catch(e) { }
try { var ret = String.prototype.localeCompare.call(vars[13], vars[86]); if(ret) vars[61] = ret; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[51], true); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = vars[62].callee; if(ret) vars[48] = ret; } catch(e) { }
try { vars[30].foo = arg4; } catch(e) { }
try { var ret = String.prototype.match.call(vars[29], Infinity); if(ret) vars[43] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[9], vars[22]); if(ret) vars[8] = ret; } catch(e) { }
try { var ret = vars[58][2]; if(ret) vars[61] = ret; } catch(e) { }
try { vars[0].prototype = -1; } catch(e) { }
try { var ret = String.prototype.charAt.call(vars[81], vars[32]); if(ret) vars[26] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[1], vars[87]); if(ret) vars[59] = ret; } catch(e) { }
try { var ret = Enumerator(); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[81], vars[6], 'a'); if(ret) vars[23] = ret; } catch(e) { }
try { var ret = RegExp.$8; if(ret) vars[71] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleLowerCase.call(vars[18]); if(ret) vars[19] = ret; } catch(e) { }
try { var ret = vars[75].caller; if(ret) vars[10] = ret; } catch(e) { }
try { var ret = vars[1].call(vars[51]); if(ret) vars[60] = ret; } catch(e) { }
try { vars[96].toString = vars[55]; } catch(e) { }
try { var ret = RegExp.index; if(ret) vars[17] = ret; } catch(e) { }
try { RegExp.input = false; } catch(e) { }
try { vars[35] = new Array(5); } catch(e) { }
try { var ret = Array.prototype.join.call(vars[52], arg9); if(ret) vars[19] = ret; } catch(e) { }
try { var ret = new Enumerator(vars[49]); if(ret) vars[78] = ret; } catch(e) { }
try { var ret = Debug.write(Infinity, vars[71], true); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = VBArray(); if(ret) vars[59] = ret; } catch(e) { }
try { var ret = String.prototype.match.call(vars[49], vars[37]); if(ret) vars[82] = ret; } catch(e) { }
try { var ret = Array(); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = new Date(); if(ret) vars[47] = ret; } catch(e) { }
try { var ret = String.prototype.strike.call(vars[64], Infinity); if(ret) vars[96] = ret; } catch(e) { }
try { vars[82].global = vars[34]; } catch(e) { }
try { vars[73][1000] = vars[28]; } catch(e) { }
try { var ret = [vars[52], vars[3], arg9]; if(ret) vars[44] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[88], Infinity); if(ret) vars[66] = ret; } catch(e) { }
try { var ret = escape(arg3); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[91]); if(ret) vars[51] = ret; } catch(e) { }
try { var ret = RegExp.$7; if(ret) vars[8] = ret; } catch(e) { }
try { var ret = new Error(vars[43], 'a', vars[1]); if(ret) vars[12] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[72], false); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = vars[84].lastIndex; if(ret) vars[16] = ret; } catch(e) { }
try { var ret = Array.prototype.toString.call(vars[50]); if(ret) vars[65] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[36]); if(ret) vars[81] = ret; } catch(e) { }
try { var ret = Date.prototype.valueOf.call(vars[74]); if(ret) vars[66] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[30], false, vars[36]); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = RegExp(Array(1025).join(String.fromCharCode(27, 120, 49)), 'mg'); if(ret) vars[59] = ret; } catch(e) { }
try { var ret = Date.prototype.getTimezoneOffset.call(vars[39]); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[28], 'a'); if(ret) vars[64] = ret; } catch(e) { }
try { vars[30].toJSON = 1000; } catch(e) { }
try { var ret = DblFromLus(vars[43]); if(ret) vars[63] = ret; } catch(e) { }
try { var ret = unescape('a'); if(ret) vars[31] = ret; } catch(e) { }
try { var ret = vars[89][0]; if(ret) vars[7] = ret; } catch(e) { }
try { var ret = Date.prototype.toJSON.call(vars[67]); if(ret) vars[16] = ret; } catch(e) { }
try { vars[67].toString = vars[12]; } catch(e) { }
try { var ret = new Date(true, -1, Infinity, vars[88], Infinity, vars[49], vars[98]); if(ret) vars[62] = ret; } catch(e) { }
try { var ret = Date.prototype.toUTCString.call(vars[79]); if(ret) vars[29] = ret; } catch(e) { }
try { vars[62] = RegExp; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[45], vars[37], vars[26], vars[85]); if(ret) vars[29] = ret; } catch(e) { }
try { var ret = ActiveXObject(vars[37]); if(ret) vars[46] = ret; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[94], vars[82], vars[65]); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = Date.UTC(Infinity, vars[85], 10, vars[89], true, false, vars[57]); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = vars[87].arguments; if(ret) vars[54] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[55], Infinity, Infinity); } catch(e) { }
try { var ret = RegExp.lastIndex; if(ret) vars[74] = ret; } catch(e) { }
try { vars[96].toArray = f9; } catch(e) { }
try { var ret = vars[78].toPrecision; if(ret) vars[1] = ret; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[40], vars[44]); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[42], arg2); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = URIError(true, 'a', vars[96]); if(ret) vars[20] = ret; } catch(e) { }
try { var ret = EvalError(vars[11], vars[78], vars[62]); if(ret) vars[39] = ret; } catch(e) { }
try { var ret = Array(17).join(String.fromCharCode(67, 30)); if(ret) vars[61] = ret; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[91], vars[83], 'a', arg5, vars[70]); if(ret) vars[45] = ret; } catch(e) { }
try { var ret = Function.prototype.toString.call(vars[66]); if(ret) vars[50] = ret; } catch(e) { }
try { var ret = EncodeURI(false); if(ret) vars[4] = ret; } catch(e) { }
try { var ret = RegExp.$7; if(ret) vars[70] = ret; } catch(e) { }
try { var ret = RegExp.$9; if(ret) vars[53] = ret; } catch(e) { }
try { var ret = [Infinity, vars[84], 'a']; if(ret) vars[39] = ret; } catch(e) { }
try { var ret = decodeURIComponent(true); if(ret) vars[67] = ret; } catch(e) { }
try { var ret = RegExp.$5; if(ret) vars[15] = ret; } catch(e) { }
try { var ret = RegExp(Array(17).join(String.fromCharCode(84, 112)) + Array(65).join(String.fromCharCode(51, 31, 108))); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = String.prototype.match.call(vars[36], true); if(ret) vars[34] = ret; } catch(e) { }
try { vars[83] = {}; } catch(e) { }
try { vars[59].valueOf = f4; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[58], f7); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[11]); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = String.prototype.anchor.call(vars[85], false); if(ret) vars[81] = ret; } catch(e) { }
try { vars[71].input = vars[30]; } catch(e) { }
try { var ret = String.prototype.localeCompare.call(vars[38], true); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[47], Infinity); if(ret) vars[24] = ret; } catch(e) { }
try { var ret = vars[63].arguments; if(ret) vars[85] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.moveFirst.call(vars[49]); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = new Date(); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = Date.prototype.getFullYear.call(vars[47]); if(ret) vars[75] = ret; } catch(e) { }
try { var ret = new Error(); if(ret) vars[2] = ret; } catch(e) { }
try { vars[32].toExponential = Infinity; } catch(e) { }
try { var ret = new Boolean(); if(ret) vars[76] = ret; } catch(e) { }
try { var ret = ActiveXObject(vars[39]); if(ret) vars[35] = ret; } catch(e) { }
try { var ret = Array(); if(ret) vars[39] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[47], 'a'); if(ret) vars[60] = ret; } catch(e) { }
try { vars[18].toPrecision = vars[9]; } catch(e) { }
try { vars[37] = Function; } catch(e) { }
try { vars[56].lastIndex = vars[79]; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[10], false, vars[83]); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = RegExp.$3; if(ret) vars[90] = ret; } catch(e) { }
try { vars[59] = this; } catch(e) { }
try { vars[19] = {}; } catch(e) { }
try { var ret = String.prototype.match.call(vars[19], 'a'); if(ret) vars[54] = ret; } catch(e) { }
try { var ret = unescape(Infinity); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = new Enumerator(vars[78]); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = new VBArray(vars[74]); if(ret) vars[29] = ret; } catch(e) { }
try { var ret = JSON.parse('a'); if(ret) vars[62] = ret; } catch(e) { }
try { var ret = Date.UTC('a', true, 1000, vars[21], false, arg1, vars[98]); if(ret) vars[35] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[23], Array(65537).join(String.fromCharCode(35)) + Array(65537).join(String.fromCharCode(91)), 'mm'); } catch(e) { }
try { vars[2] = Date; } catch(e) { }
try { var ret = vars[93].appy(vars[93], vars[63]); if(ret) vars[42] = ret; } catch(e) { }
try { var ret = new Date(false, 2, 1000000, false, 5, vars[61], vars[37]); if(ret) vars[71] = ret; } catch(e) { }
try { var ret = Enumerator(); if(ret) vars[54] = ret; } catch(e) { }
try { vars[98] = new Array(1000); } catch(e) { }
try { vars[74][2] = vars[29]; } catch(e) { }
try { var ret = JSON.parse('a'); if(ret) vars[42] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[84], true); if(ret) vars[24] = ret; } catch(e) { }
try { var ret = vars[76].valueOf; if(ret) vars[16] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[95], 100, vars[68]); } catch(e) { }
try { var ret = vars[11].arguments; if(ret) vars[57] = ret; } catch(e) { }
try { var ret = RegExp(); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = [3, vars[42], vars[26]]; if(ret) vars[50] = ret; } catch(e) { }
try { var ret = RuntimeObject(); if(ret) vars[49] = ret; } catch(e) { }
try { var ret = VBArray.prototype.toArray.call(vars[61]); if(ret) vars[81] = ret; } catch(e) { }
try { vars[85][0] = vars[40]; } catch(e) { }
try { var ret = vars[57].appy(vars[45], arg2); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = new Enumerator(vars[72]); if(ret) vars[21] = ret; } catch(e) { }
try { vars[3] = new Array(3); } catch(e) { }
try { var ret = Enumerator(); if(ret) vars[49] = ret; } catch(e) { }
try { var ret = String.prototype.match.call(vars[55], vars[57]); if(ret) vars[59] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[97]); if(ret) vars[70] = ret; } catch(e) { }
try { var ret = vars[74].appy(vars[97], vars[11]); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[82], true, vars[20]); if(ret) vars[44] = ret; } catch(e) { }
try { var ret = RegExp.lastMatch; if(ret) vars[31] = ret; } catch(e) { }
try { var ret = String.FromCharCode(vars[89], vars[4], vars[99]); if(ret) vars[64] = ret; } catch(e) { }
try { vars[87] = new Array(1); } catch(e) { }
try { var ret = vars[25][1073741823]; if(ret) vars[82] = ret; } catch(e) { }
try { var ret = VBArray.prototype.ubound.call(vars[94], vars[65]); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = Boolean.prototype.toJSON.call(vars[19]); if(ret) vars[67] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[24], vars[56], vars[46]); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleString.call(vars[85]); if(ret) vars[16] = ret; } catch(e) { }
try { var ret = vars[0].lastIndex; if(ret) vars[63] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[95], vars[44], vars[17]); if(ret) vars[36] = ret; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[17], arg1, arg3, 'a'); if(ret) vars[44] = ret; } catch(e) { }
try { var ret = vars[75].length; if(ret) vars[17] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[50], Array(17).join(String.fromCharCode(71, 69))); } catch(e) { }
try { var ret = Array.prototype.toLocaleString.call(vars[96]); if(ret) vars[70] = ret; } catch(e) { }
try { var ret = new EvalError('a', vars[12], false); if(ret) vars[54] = ret; } catch(e) { }
try { var ret = Boolean.prototype.toString.call(vars[97]); if(ret) vars[20] = ret; } catch(e) { }
try { var ret = vars[95].apply(vars[73], vars[80]); if(ret) vars[19] = ret; } catch(e) { }
try { var ret = Boolean.prototype.toString.call(vars[24]); if(ret) vars[78] = ret; } catch(e) { }
try { vars[87] = {}; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[54]); if(ret) vars[35] = ret; } catch(e) { }
try { var ret = vars[93].apply(vars[78], vars[82]); if(ret) vars[36] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[21], vars[69], true); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = Date.prototype.toJSON.call(vars[53]); if(ret) vars[2] = ret; } catch(e) { }
try { var ret = Array.prototype.shift.call(vars[68]); if(ret) vars[71] = ret; } catch(e) { }
try { var ret = VBArray.prototype.toArray.call(vars[0]); if(ret) vars[6] = ret; } catch(e) { }
try { var ret = String.prototype.localeCompare.call(vars[52], Infinity); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = ReferenceError(vars[20], vars[85], true); if(ret) vars[76] = ret; } catch(e) { }
try { var ret = Debug.write(vars[74]); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = Debug.writeln(arg3, vars[72], vars[78]); if(ret) vars[66] = ret; } catch(e) { }
try { vars[40].toExponential = f0; } catch(e) { }
try { var ret = Date(vars[63]); if(ret) vars[63] = ret; } catch(e) { }
try { var ret = new Date(); if(ret) vars[58] = ret; } catch(e) { }
try { vars[52] = Enumerator; } catch(e) { }
try { vars[97] = new Array(1); } catch(e) { }
try { var ret = []; if(ret) vars[45] = ret; } catch(e) { }
try { var ret = new RangeError(vars[98], vars[67], vars[30]); if(ret) vars[6] = ret; } catch(e) { }
try { var ret = String.prototype.charAt.call(vars[85], vars[2]); if(ret) vars[86] = ret; } catch(e) { }
try { vars[19][1000] = Infinity; } catch(e) { }
try { vars[14].prototype = Infinity; } catch(e) { }
try { var ret = unescape(vars[32]); if(ret) vars[8] = ret; } catch(e) { }
try { vars[41].toJSON = 'a'; } catch(e) { }
try { var ret = RegExp.$8; if(ret) vars[96] = ret; } catch(e) { }
try { var ret = vars[63](Infinity, true, vars[36], vars[26], vars[21]); if(ret) vars[64] = ret; } catch(e) { }
try { var ret = new Array(true); if(ret) vars[29] = ret; } catch(e) { }
try { var ret = vars[40].foo; if(ret) vars[8] = ret; } catch(e) { }
try { vars[33].caller = vars[11]; } catch(e) { }
try { var ret = VBArray(); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = Boolean.prototype.toJSON.call(vars[23]); if(ret) vars[32] = ret; } catch(e) { }
try { vars[45].toFixed = f2; } catch(e) { }
try { var ret = DblFromLus(arg2); if(ret) vars[22] = ret; } catch(e) { }
try { var ret = RegExp(Array(65537).join(String.fromCharCode(0, 68, 98))); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = new vars[42].call(vars[3], 0, Infinity, vars[78], vars[21], vars[58]); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = String.prototype.match.call(vars[13], false); if(ret) vars[99] = ret; } catch(e) { }
try { var ret = RegExp.lastIndex; if(ret) vars[30] = ret; } catch(e) { }
try { var ret = vars[59].input; if(ret) vars[40] = ret; } catch(e) { }
try { var ret = vars[13][1]; if(ret) vars[98] = ret; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[71], false, vars[44]); if(ret) vars[49] = ret; } catch(e) { }
try { var ret = vars[27].toFixed; if(ret) vars[33] = ret; } catch(e) { }
try { var ret = new ActiveXObject(false, vars[83]); if(ret) vars[67] = ret; } catch(e) { }
try { vars[62].options = true; } catch(e) { }
try { var ret = RegExp.$3; if(ret) vars[47] = ret; } catch(e) { }
try { var ret = Date(vars[27]); if(ret) vars[80] = ret; } catch(e) { }
try { var ret = vars[98].call(vars[21], 'a', true, arg5); if(ret) vars[89] = ret; } catch(e) { }
try { vars[46].toString = f7; } catch(e) { }
try { var ret = VBArray.prototype.dimensions.call(vars[84]); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = Enumerator(); if(ret) vars[12] = ret; } catch(e) { }
try { var ret = vars[0].valueOf; if(ret) vars[40] = ret; } catch(e) { }
try { var ret = Object.defineProperty(vars[35], 'length', { set: f0 }); if(ret) vars[38] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[17], 100); } catch(e) { }
try { var ret = GetObject(false); if(ret) vars[53] = ret; } catch(e) { }
try { var ret = new ActiveXObject(arg4); if(ret) vars[23] = ret; } catch(e) { }
try { var ret = new vars[22].call(vars[52], vars[9], 'a', arg5, vars[69], Infinity); if(ret) vars[8] = ret; } catch(e) { }
try { var ret = vars[98].toPrecision; if(ret) vars[56] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[96]); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[49], vars[78]); if(ret) vars[80] = ret; } catch(e) { }
try { var ret = Object.getOwnPropertyDescriptor(vars[22], vars[85]); if(ret) vars[85] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[98], 'a'); if(ret) vars[28] = ret; } catch(e) { }
try { var ret = Enumerator(); if(ret) vars[95] = ret; } catch(e) { }
try { var ret = Array.prototype.unshift.call(vars[36], vars[39], vars[64]); if(ret) vars[84] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[19], 'a'); if(ret) vars[19] = ret; } catch(e) { }
try { var ret = RegExp.$5; if(ret) vars[71] = ret; } catch(e) { }
try { var ret = String.prototype.charAt.call(vars[57], vars[23]); if(ret) vars[63] = ret; } catch(e) { }
try { var ret = Date.prototype.toUTCString.call(vars[16]); if(ret) vars[63] = ret; } catch(e) { }
try { var ret = Array.prototype.toLocaleString.call(vars[16]); if(ret) vars[83] = ret; } catch(e) { }
try { var ret = new vars[6].apply(vars[14], vars[26]); if(ret) vars[40] = ret; } catch(e) { }
try { var ret = vars[36][0]; if(ret) vars[77] = ret; } catch(e) { }
try { var ret = RegExp.index; if(ret) vars[63] = ret; } catch(e) { }
try { var ret = LuHigh(1); if(ret) vars[88] = ret; } catch(e) { }
try { var ret = RegExp.$2; if(ret) vars[73] = ret; } catch(e) { }
try { var ret = Function.prototype.toString.call(vars[87]); if(ret) vars[42] = ret; } catch(e) { }
try { var ret = Date(Infinity); if(ret) vars[65] = ret; } catch(e) { }
try { var ret = vars[73].source; if(ret) vars[60] = ret; } catch(e) { }
try { var ret = decodeURIComponent(vars[56]); if(ret) vars[43] = ret; } catch(e) { }
try { var ret = Boolean.prototype.valueOf.call(vars[90]); if(ret) vars[50] = ret; } catch(e) { }
try { vars[14].toExponential = f0; } catch(e) { }
try { var ret = new RangeError(true, vars[62], vars[64]); if(ret) vars[55] = ret; } catch(e) { }
try { var ret = RegExp.index; if(ret) vars[25] = ret; } catch(e) { }
try { var ret = new ReferenceError(vars[59], true, vars[15]); if(ret) vars[51] = ret; } catch(e) { }
try { vars[55].toExponential = Infinity; } catch(e) { }
try { var ret = parseInt('a'); if(ret) vars[31] = ret; } catch(e) { }
try { vars[43] = {}; } catch(e) { }
try { var ret = Error.prototype.toString.call(vars[67]); if(ret) vars[47] = ret; } catch(e) { }
try { var ret = Array.prototype.reverse.call(vars[70]); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = LuHigh(vars[18]); if(ret) vars[84] = ret; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[35], vars[18]); if(ret) vars[7] = ret; } catch(e) { }
try { vars[51] = Error; } catch(e) { }
try { vars[43].toLocaleString = f4; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[20], vars[88], false, 'a'); if(ret) vars[40] = ret; } catch(e) { }
try { var ret = Date.prototype.toJSON.call(vars[74]); if(ret) vars[49] = ret; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[31], vars[73], arg5); if(ret) vars[77] = ret; } catch(e) { }
try { vars[51][-1] = 5; } catch(e) { }
try { var ret = Date.prototype.toUTCString.call(vars[8]); if(ret) vars[32] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[58], Array(65537).join(String.fromCharCode(116)) + Array(257).join(String.fromCharCode(58))); } catch(e) { }
try { vars[85] = {}; } catch(e) { }
try { var ret = new Array(Infinity); if(ret) vars[79] = ret; } catch(e) { }
//endjs
CollectGarbage();
return vars[38];

}

function f4(arg4, arg5, arg6) {
runcount.f4++; if(runcount.f4>2) return;
//alert(4);
//beginjs
try { var ret = vars[85].call(vars[1], Infinity, false, vars[11]); if(ret) vars[35] = ret; } catch(e) { }
try { var ret = String.prototype.anchor.call(vars[19], vars[78]); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[11], Infinity, vars[56]); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = DblFromLus(vars[0]); if(ret) vars[43] = ret; } catch(e) { }
try { var ret = RegExp.lastParen; if(ret) vars[33] = ret; } catch(e) { }
try { var ret = vars[85].prototype; if(ret) vars[37] = ret; } catch(e) { }
try { var ret = vars[3].callee; if(ret) vars[99] = ret; } catch(e) { }
try { vars[89] = Object; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[26], 1); if(ret) vars[38] = ret; } catch(e) { }
try { vars[12].foo = true; } catch(e) { }
try { var ret = RegExp.lastParen; if(ret) vars[46] = ret; } catch(e) { }
try { vars[15] = new Array(3); } catch(e) { }
try { var ret = Date(); if(ret) vars[75] = ret; } catch(e) { }
try { vars[68] = new Array(-1); } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[28], vars[45], vars[93]); if(ret) vars[40] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleString.call(vars[30]); if(ret) vars[45] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[82], Array(65537).join(String.fromCharCode(2)) + Array(17).join(String.fromCharCode(21)) + Array(17).join(String.fromCharCode(54, 121))); } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[3], Infinity); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[80], 1000, 'a'); if(ret) vars[15] = ret; } catch(e) { }
try { vars[74] = {}; } catch(e) { }
try { var ret = Date.parse(vars[72]); if(ret) vars[23] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[84]); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = new Error(vars[49]); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = VBArray(); if(ret) vars[28] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[50], Infinity, vars[86]); if(ret) vars[54] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleLowerCase.call(vars[14]); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = vars[0].callee; if(ret) vars[67] = ret; } catch(e) { }
try { var ret = RegExp(); if(ret) vars[19] = ret; } catch(e) { }
try { var ret = JSON.stringify(vars[51]); if(ret) vars[60] = ret; } catch(e) { }
try { var ret = VBArray.prototype.toArray.call(vars[3]); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[45], vars[59]); if(ret) vars[36] = ret; } catch(e) { }
try { vars[97] = this; } catch(e) { }
try { RegExp.prototype.exec.call(vars[83], vars[83]); } catch(e) { }
try { vars[26] = this; } catch(e) { }
try { var ret = JSON.stringify(false); if(ret) vars[69] = ret; } catch(e) { }
try { var ret = Error.prototype.toString.call(vars[81]); if(ret) vars[79] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[82], 'a', 'a'); if(ret) vars[69] = ret; } catch(e) { }
try { var ret = RegExp.input; if(ret) vars[61] = ret; } catch(e) { }
try { var ret = Array(vars[85], Infinity, false); if(ret) vars[52] = ret; } catch(e) { }
try { vars[83][10] = vars[44]; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[89], 'a'); if(ret) vars[46] = ret; } catch(e) { }
try { var ret = RegExp.$9; if(ret) vars[30] = ret; } catch(e) { }
try { var ret = EvalError(true, vars[94], 1073741823); if(ret) vars[40] = ret; } catch(e) { }
try { vars[95][0] = vars[38]; } catch(e) { }
try { vars[42].arguments = vars[72]; } catch(e) { }
try { var ret = vars[21][4]; if(ret) vars[61] = ret; } catch(e) { }
try { vars[12] = f1; } catch(e) { }
try { var ret = String.prototype.toLocaleUpperCase.call(vars[74]); if(ret) vars[39] = ret; } catch(e) { }
try { vars[41].length = vars[45]; } catch(e) { }
try { vars[3] = {}; } catch(e) { }
try { vars[90].callee = Infinity; } catch(e) { }
try { var ret = vars[17].caller; if(ret) vars[71] = ret; } catch(e) { }
try { var ret = vars[89].toLocaleString; if(ret) vars[27] = ret; } catch(e) { }
try { var ret = new RangeError(vars[45], vars[3], vars[19]); if(ret) vars[34] = ret; } catch(e) { }
try { var ret = new vars[22].call(vars[31], vars[40], vars[75], vars[73], vars[35], vars[12]); if(ret) vars[88] = ret; } catch(e) { }
try { var ret = new ActiveXObject(arg7, vars[60]); if(ret) vars[5] = ret; } catch(e) { }
try { var ret = Array.prototype.shift.call(vars[85]); if(ret) vars[7] = ret; } catch(e) { }
try { vars[5].global = vars[13]; } catch(e) { }
try { var ret = vars[89].apply(vars[34], vars[4]); if(ret) vars[71] = ret; } catch(e) { }
try { vars[52][3] = true; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[27], vars[76], 100); if(ret) vars[35] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[65], vars[77]); if(ret) vars[40] = ret; } catch(e) { }
try { var ret = Function.prototype.toString.call(vars[44]); if(ret) vars[42] = ret; } catch(e) { }
try { var ret = Debug.write(true, vars[4], true); if(ret) vars[43] = ret; } catch(e) { }
try { vars[67] = RegExp; } catch(e) { }
try { vars[70].callee = 4; } catch(e) { }
try { vars[22].source = vars[85]; } catch(e) { }
try { var ret = new URIError(vars[91], true, 'a'); if(ret) vars[70] = ret; } catch(e) { }
try { var ret = new vars[43].apply(vars[97], vars[66]); if(ret) vars[32] = ret; } catch(e) { }
try { var ret = new URIError(false, 'a', vars[34]); if(ret) vars[88] = ret; } catch(e) { }
try { var ret = new Date(vars[23]); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = new URIError(vars[36], vars[84], 3); if(ret) vars[23] = ret; } catch(e) { }
try { var ret = vars[93].toJSON; if(ret) vars[33] = ret; } catch(e) { }
try { var ret = RegExp.$8; if(ret) vars[33] = ret; } catch(e) { }
try { var ret = vars[75][100]; if(ret) vars[24] = ret; } catch(e) { }
try { var ret = encodeURIComponent(Infinity); if(ret) vars[13] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[41], 5); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = Date.prototype.getTimezoneOffset.call(vars[84]); if(ret) vars[59] = ret; } catch(e) { }
try { var ret = vars[39].toLocaleString; if(ret) vars[76] = ret; } catch(e) { }
try { var ret = Debug.writeln(true); if(ret) vars[77] = ret; } catch(e) { }
try { vars[99].global = vars[5]; } catch(e) { }
try { var ret = vars[99].length; if(ret) vars[82] = ret; } catch(e) { }
try { var ret = new Enumerator(); if(ret) vars[2] = ret; } catch(e) { }
try { var ret = EvalError(vars[71], vars[63], true); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[81], vars[51], vars[79]); if(ret) vars[42] = ret; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[86], vars[26]); if(ret) vars[64] = ret; } catch(e) { }
try { var ret = vars[58].arguments; if(ret) vars[9] = ret; } catch(e) { }
try { vars[60].toLocaleString = vars[78]; } catch(e) { }
try { vars[67].lastIndex = vars[19]; } catch(e) { }
try { var ret = parseInt(Infinity); if(ret) vars[9] = ret; } catch(e) { }
try { vars[34].toLocaleString = vars[11]; } catch(e) { }
try { var ret = RegExp.input; if(ret) vars[64] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[17], vars[83]); } catch(e) { }
try { var ret = Array.prototype.shift.call(vars[0]); if(ret) vars[23] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[27]); if(ret) vars[54] = ret; } catch(e) { }
try { var ret = Array(4097).join(String.fromCharCode(79)) + Array(17).join(String.fromCharCode(71, 126, 99)); if(ret) vars[61] = ret; } catch(e) { }
try { vars[58].valueOf = f1; } catch(e) { }
try { vars[24] = ActiveXObject; } catch(e) { }
try { var ret = new RuntimeObject(); if(ret) vars[48] = ret; } catch(e) { }
try { vars[10].toString = Infinity; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[97]); if(ret) vars[66] = ret; } catch(e) { }
try { vars[44] = Array(65537).join(String.fromCharCode(49)) + Array(257).join(String.fromCharCode(43, 97, 73)) + Array(1025).join(String.fromCharCode(70, 39)); } catch(e) { }
try { var ret = arguments; if(ret) vars[97] = ret; } catch(e) { }
try { var ret = new Boolean(); if(ret) vars[66] = ret; } catch(e) { }
try { var ret = vars[8].toFixed; if(ret) vars[19] = ret; } catch(e) { }
try { var ret = Array.prototype.pop.call(vars[60]); if(ret) vars[40] = ret; } catch(e) { }
try { vars[83] = Object; } catch(e) { }
try { var ret = vars[33][0]; if(ret) vars[52] = ret; } catch(e) { }
try { vars[28].toLocaleString = true; } catch(e) { }
try { vars[11].arguments = arg9; } catch(e) { }
try { var ret = vars[67][-1]; if(ret) vars[33] = ret; } catch(e) { }
try { var ret = vars[9].toString; if(ret) vars[0] = ret; } catch(e) { }
try { var ret = Error('a', false, arg2); if(ret) vars[91] = ret; } catch(e) { }
try { var ret = RegExp.$4; if(ret) vars[63] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[55], 1000, false); if(ret) vars[19] = ret; } catch(e) { }
try { vars[65] = new Array(-1); } catch(e) { }
try { var ret = vars[68].options; if(ret) vars[4] = ret; } catch(e) { }
try { var ret = RangeError('a', vars[3], 100); if(ret) vars[62] = ret; } catch(e) { }
try { var ret = String.prototype.localeCompare.call(vars[50], vars[85]); if(ret) vars[32] = ret; } catch(e) { }
try { var ret = RangeError(true, vars[72], Infinity); if(ret) vars[96] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[21], Array(65).join(String.fromCharCode(18)) + Array(65537).join(String.fromCharCode(114)) + Array(1025).join(String.fromCharCode(127, 66)), 'i'); } catch(e) { }
try { var ret = new ActiveXObject(vars[19], vars[51]); if(ret) vars[97] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleUpperCase.call(vars[57]); if(ret) vars[12] = ret; } catch(e) { }
try { vars[38].arguments = true; } catch(e) { }
try { var ret = Enumerator.prototype.atEnd.call(vars[5]); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = JSON.parse('a'); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = RegExp.$7; if(ret) vars[67] = ret; } catch(e) { }
try { vars[55].global = vars[66]; } catch(e) { }
try { var ret = RegExp.leftContext; if(ret) vars[40] = ret; } catch(e) { }
try { vars[70] = document.createElement("foo"); } catch(e) { }
try { var ret = Date.prototype.getTimezoneOffset.call(vars[77]); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleTimeString.call(vars[40]); if(ret) vars[95] = ret; } catch(e) { }
try { var ret = new RegExp(Array(1025).join(String.fromCharCode(84, 93, 87)) + Array(1025).join(String.fromCharCode(59, 29, 38)) + Array(65).join(String.fromCharCode(52))); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = Debug.write(vars[11], true, vars[32]); if(ret) vars[31] = ret; } catch(e) { }
try { var ret = new Date(); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = String.prototype.search.call(vars[82], vars[60]); if(ret) vars[5] = ret; } catch(e) { }
try { vars[5] = {}; } catch(e) { }
try { var ret = Array(Infinity, vars[88], false); if(ret) vars[78] = ret; } catch(e) { }
try { var ret = Date.prototype.getTimezoneOffset.call(vars[57]); if(ret) vars[91] = ret; } catch(e) { }
try { var ret = VBArray.prototype.dimensions.call(vars[27]); if(ret) vars[94] = ret; } catch(e) { }
try { var ret = vars[71].appy(vars[8], vars[36]); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = RuntimeObject(); if(ret) vars[83] = ret; } catch(e) { }
try { var ret = Date.prototype.getFullYear.call(vars[57]); if(ret) vars[80] = ret; } catch(e) { }
try { var ret = Date(); if(ret) vars[95] = ret; } catch(e) { }
try { var ret = new RuntimeObject(); if(ret) vars[33] = ret; } catch(e) { }
try { vars[93].global = vars[45]; } catch(e) { }
try { var ret = Array.prototype.pop.call(vars[54]); if(ret) vars[44] = ret; } catch(e) { }
try { vars[97].global = 'a'; } catch(e) { }
try { var ret = RegExp.$6; if(ret) vars[34] = ret; } catch(e) { }
try { var ret = parseFloat(Infinity); if(ret) vars[4] = ret; } catch(e) { }
try { var ret = Error(false, 'a', vars[94]); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = vars[3].toJSON; if(ret) vars[14] = ret; } catch(e) { }
try { var ret = new RegExp(); if(ret) vars[35] = ret; } catch(e) { }
try { var ret = ReferenceError(Infinity, 'a', vars[98]); if(ret) vars[80] = ret; } catch(e) { }
try { var ret = new Array(); if(ret) vars[4] = ret; } catch(e) { }
try { var ret = RegExp.index; if(ret) vars[43] = ret; } catch(e) { }
try { var ret = Debug.write(true); if(ret) vars[91] = ret; } catch(e) { }
try { var ret = RegExp.$5; if(ret) vars[36] = ret; } catch(e) { }
try { var ret = new Error('a', vars[92], vars[51]); if(ret) vars[25] = ret; } catch(e) { }
try { var ret = RegExp(); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[68], 5, Infinity); if(ret) vars[36] = ret; } catch(e) { }
try { var ret = new Array(1000); if(ret) vars[51] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleUpperCase.call(vars[22]); if(ret) vars[65] = ret; } catch(e) { }
try { vars[71] = document.createElement("foo"); Object.defineProperty(vars[71], "toFixed", {get: f3, set: f3} ); } catch(e) { }
try { vars[46].toExponential = 1000000; } catch(e) { }
try { var ret = new Array(); if(ret) vars[54] = ret; } catch(e) { }
try { var ret = RegExp(); if(ret) vars[53] = ret; } catch(e) { }
try { vars[13].length = vars[4]; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[30], vars[82], Infinity, vars[80], 10); if(ret) vars[17] = ret; } catch(e) { }
try { vars[61].caller = vars[88]; } catch(e) { }
try { var ret = vars[86].global; if(ret) vars[75] = ret; } catch(e) { }
try { var ret = new URIError(vars[73], vars[25], false); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = Boolean.prototype.toString.call(vars[97]); if(ret) vars[56] = ret; } catch(e) { }
try { var ret = Array.prototype.pop.call(vars[83]); if(ret) vars[89] = ret; } catch(e) { }
try { vars[86].length = vars[27]; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[4], true, f9); if(ret) vars[64] = ret; } catch(e) { }
try { vars[32] = JSON; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[68], vars[42]); if(ret) vars[14] = ret; } catch(e) { }
try { var ret = isFinite(Infinity); if(ret) vars[66] = ret; } catch(e) { }
try { var ret = new vars[45].apply(vars[58], vars[53]); if(ret) vars[45] = ret; } catch(e) { }
try { var ret = vars[13].lastIndex; if(ret) vars[45] = ret; } catch(e) { }
try { vars[59] = new Array(3); } catch(e) { }
try { var ret = EncodeURI(vars[22]); if(ret) vars[5] = ret; } catch(e) { }
try { vars[17] = new Array(1000000); } catch(e) { }
try { vars[87].toJSON = f4; } catch(e) { }
try { var ret = new RegExp(Array(17).join(String.fromCharCode(1)) + Array(4097).join(String.fromCharCode(28))); if(ret) vars[14] = ret; } catch(e) { }
try { var ret = Object.getOwnPropertyDescriptor(vars[52], Infinity); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = Boolean(); if(ret) vars[74] = ret; } catch(e) { }
try { var ret = vars[15].toExponential; if(ret) vars[96] = ret; } catch(e) { }
try { var ret = vars[41].apply(vars[99], vars[98]); if(ret) vars[96] = ret; } catch(e) { }
try { vars[61] = Error; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[3], vars[3], vars[88]); if(ret) vars[29] = ret; } catch(e) { }
try { var ret = new Enumerator(); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = new RuntimeObject(); if(ret) vars[83] = ret; } catch(e) { }
try { vars[45] = new Array(3); } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[49], Infinity, vars[54]); if(ret) vars[4] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[50], Array(65).join(String.fromCharCode(27, 103, 119)) + Array(4097).join(String.fromCharCode(49, 12))); } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[27]); if(ret) vars[72] = ret; } catch(e) { }
try { vars[5] = Error; } catch(e) { }
try { var ret = Error(vars[49], vars[43], 0); if(ret) vars[29] = ret; } catch(e) { }
try { vars[28] = JSON; } catch(e) { }
try { vars[81] = document.createElement("foo"); } catch(e) { }
try { var ret = vars[5].toJSON; if(ret) vars[97] = ret; } catch(e) { }
try { var ret = unescape(vars[48]); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = ActiveXObject(4, vars[47]); if(ret) vars[22] = ret; } catch(e) { }
try { var ret = Array.prototype.toLocaleString.call(vars[69]); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = JSON.parse(5); if(ret) vars[26] = ret; } catch(e) { }
try { vars[24] = Error; } catch(e) { }
try { var ret = new Enumerator(vars[52]); if(ret) vars[24] = ret; } catch(e) { }
try { vars[87].input = arg5; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[68], vars[97]); if(ret) vars[62] = ret; } catch(e) { }
try { var ret = Array(257).join(String.fromCharCode(9, 105, 32)) + Array(257).join(String.fromCharCode(21, 62)) + Array(1025).join(String.fromCharCode(9, 85, 34)); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = DblFromLus(true); if(ret) vars[2] = ret; } catch(e) { }
try { vars[20].caller = vars[37]; } catch(e) { }
try { vars[69].valueOf = false; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[45], 'a', vars[55], vars[19]); if(ret) vars[4] = ret; } catch(e) { }
try { var ret = Date(vars[86], arg8, vars[37], vars[5], vars[0], arg6, 'a'); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = new Enumerator(); if(ret) vars[14] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[25], Array(1025).join(String.fromCharCode(118, 113, 84))); } catch(e) { }
try { RegExp.prototype.compile.call(vars[51], Infinity, vars[66]); } catch(e) { }
try { var ret = Enumerator(); if(ret) vars[36] = ret; } catch(e) { }
try { var ret = Debug.write(vars[2], vars[68], 'a'); if(ret) vars[24] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[91]); if(ret) vars[52] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[81], true); if(ret) vars[94] = ret; } catch(e) { }
try { vars[57] = {}; } catch(e) { }
try { vars[37].valueOf = vars[16]; } catch(e) { }
try { var ret = Enumerator(); if(ret) vars[4] = ret; } catch(e) { }
try { var ret = RegExp.$9; if(ret) vars[5] = ret; } catch(e) { }
try { vars[43].length = 100; } catch(e) { }
try { var ret = arguments; if(ret) vars[8] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[46], true); if(ret) vars[28] = ret; } catch(e) { }
try { var ret = String.prototype.anchor.call(vars[29], vars[49]); if(ret) vars[38] = ret; } catch(e) { }
try { vars[36] = Function; } catch(e) { }
try { var ret = vars[85][1000]; if(ret) vars[88] = ret; } catch(e) { }
try { var ret = new RangeError(vars[25], 100, vars[10]); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[92]); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = parseFloat(vars[71]); if(ret) vars[16] = ret; } catch(e) { }
try { var ret = RegExp.$9; if(ret) vars[34] = ret; } catch(e) { }
try { var ret = RegExp.$3; if(ret) vars[70] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleUpperCase.call(vars[13]); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.moveFirst.call(vars[6]); if(ret) vars[61] = ret; } catch(e) { }
try { vars[3] = document.createElement("foo"); Object.defineProperty(vars[3], "100", {get: f0, set: f0} ); } catch(e) { }
try { vars[52].toArray = f5; } catch(e) { }
try { vars[17].toPrecision = f7; } catch(e) { }
try { vars[9].toPrecision = Infinity; } catch(e) { }
try { vars[81][1000] = true; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[65], false, true, vars[37]); if(ret) vars[79] = ret; } catch(e) { }
try { vars[75] = Object; } catch(e) { }
try { var ret = RegExp.$8; if(ret) vars[47] = ret; } catch(e) { }
try { var ret = Date.prototype.toJSON.call(vars[29]); if(ret) vars[55] = ret; } catch(e) { }
try { var ret = vars[47](false, 100, false, 'a', arg2); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = GetObject(vars[19]); if(ret) vars[31] = ret; } catch(e) { }
try { var ret = ReferenceError('a', vars[12], vars[97]); if(ret) vars[77] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleUpperCase.call(vars[46]); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = Error.prototype.toString.call(vars[11]); if(ret) vars[94] = ret; } catch(e) { }
try { var ret = Function.prototype.toString.call(vars[83]); if(ret) vars[83] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[17], vars[68]); if(ret) vars[83] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.moveFirst.call(vars[96]); if(ret) vars[39] = ret; } catch(e) { }
try { var ret = vars[22].toPrecision; if(ret) vars[33] = ret; } catch(e) { }
try { var ret = LuLow(false); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = LuLow(vars[13]); if(ret) vars[6] = ret; } catch(e) { }
try { var ret = vars[49].call(vars[95], 'a', vars[11], false); if(ret) vars[2] = ret; } catch(e) { }
try { var ret = new ReferenceError(arg2, vars[7], 3); if(ret) vars[6] = ret; } catch(e) { }
try { var ret = Array(arg5, vars[83], vars[43]); if(ret) vars[41] = ret; } catch(e) { }
try { var ret = Date.UTC(true, vars[4], true, vars[95], vars[12], Infinity, arg2); if(ret) vars[31] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[75], vars[85], vars[72]); if(ret) vars[87] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[3], Array(1025).join(String.fromCharCode(107, 58)) + Array(65537).join(String.fromCharCode(61, 33))); } catch(e) { }
try { vars[74].toString = vars[4]; } catch(e) { }
try { vars[31].constructor = vars[60]; } catch(e) { }
try { vars[49].global = vars[95]; } catch(e) { }
try { vars[85].toJSON = true; } catch(e) { }
try { vars[48] = Object; } catch(e) { }
try { var ret = RegExp.lastParen; if(ret) vars[14] = ret; } catch(e) { }
try { var ret = Date.prototype.toUTCString.call(vars[11]); if(ret) vars[71] = ret; } catch(e) { }
try { var ret = vars[57].appy(vars[77], 100); if(ret) vars[68] = ret; } catch(e) { }
try { vars[37].valueOf = 'a'; } catch(e) { }
try { var ret = new Array(); if(ret) vars[97] = ret; } catch(e) { }
try { var ret = vars[71].foo; if(ret) vars[6] = ret; } catch(e) { }
try { var ret = RegExp(); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = String.prototype.search.call(vars[20], vars[90]); if(ret) vars[26] = ret; } catch(e) { }
try { var ret = Debug.write(vars[46]); if(ret) vars[35] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[43], 1); if(ret) vars[74] = ret; } catch(e) { }
try { var ret = vars[77][4]; if(ret) vars[27] = ret; } catch(e) { }
try { var ret = Array(4097).join(String.fromCharCode(99)) + Array(4097).join(String.fromCharCode(72)); if(ret) vars[14] = ret; } catch(e) { }
try { var ret = RangeError(arg4, vars[64], vars[53]); if(ret) vars[26] = ret; } catch(e) { }
try { var ret = decodeURIComponent(arg8); if(ret) vars[73] = ret; } catch(e) { }
try { vars[45] = Function; } catch(e) { }
try { vars[94] = JSON; } catch(e) { }
try { var ret = vars[42].constructor; if(ret) vars[65] = ret; } catch(e) { }
try { var ret = new Enumerator(vars[36]); if(ret) vars[95] = ret; } catch(e) { }
try { var ret = isFinite(5); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = LuLow(vars[32]); if(ret) vars[29] = ret; } catch(e) { }
try { var ret = new ActiveXObject(vars[10]); if(ret) vars[51] = ret; } catch(e) { }
try { vars[3] = {}; } catch(e) { }
try { vars[88] = Object; } catch(e) { }
try { var ret = vars[28].apply(vars[29], vars[25]); if(ret) vars[6] = ret; } catch(e) { }
try { var ret = VBArray(); if(ret) vars[73] = ret; } catch(e) { }
try { var ret = Boolean.prototype.toString.call(vars[96]); if(ret) vars[47] = ret; } catch(e) { }
try { var ret = vars[47][1000000]; if(ret) vars[28] = ret; } catch(e) { }
try { vars[93].arguments = false; } catch(e) { }
try { vars[40] = Error; } catch(e) { }
try { var ret = escape(4294967296); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = vars[18].toExponential; if(ret) vars[59] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleString.call(vars[66]); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = parseInt(Infinity); if(ret) vars[8] = ret; } catch(e) { }
try { var ret = ActiveXObject(vars[93]); if(ret) vars[39] = ret; } catch(e) { }
try { var ret = new Array(vars[11], 100, true); if(ret) vars[95] = ret; } catch(e) { }
try { var ret = Date.prototype.getFullYear.call(vars[92]); if(ret) vars[75] = ret; } catch(e) { }
try { var ret = RegExp.$1; if(ret) vars[13] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[34], Infinity, vars[48]); if(ret) vars[99] = ret; } catch(e) { }
try { vars[54].toArray = f8; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[20], vars[59], true, vars[56], vars[63]); if(ret) vars[77] = ret; } catch(e) { }
try { var ret = Debug.write(536870912); if(ret) vars[60] = ret; } catch(e) { }
try { var ret = vars[39][0]; if(ret) vars[33] = ret; } catch(e) { }
try { var ret = Array.prototype.shift.call(vars[82]); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.moveNext.call(vars[22]); if(ret) vars[75] = ret; } catch(e) { }
try { vars[96][1] = vars[43]; } catch(e) { }
try { var ret = String.prototype.anchor.call(vars[34], Infinity); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[8], arg1); if(ret) vars[6] = ret; } catch(e) { }
try { vars[91].length = arg5; } catch(e) { }
try { var ret = Debug.write(-1, vars[44], 5); if(ret) vars[82] = ret; } catch(e) { }
try { vars[42] = ActiveXObject; } catch(e) { }
try { var ret = new ActiveXObject(arg2); if(ret) vars[16] = ret; } catch(e) { }
try { vars[73] = Enumerator; } catch(e) { }
try { vars[10] = new Array(3); } catch(e) { }
try { vars[67] = Array(65537).join(String.fromCharCode(7)) + Array(257).join(String.fromCharCode(83, 15)); } catch(e) { }
try { var ret = RegExp.$2; if(ret) vars[15] = ret; } catch(e) { }
try { vars[20].caller = false; } catch(e) { }
try { var ret = Array.prototype.unshift.call(vars[58], arg2, 3); if(ret) vars[12] = ret; } catch(e) { }
try { vars[75].caller = vars[75]; } catch(e) { }
try { vars[47].toFixed = f8; } catch(e) { }
try { vars[59] = document.createElement("foo"); Object.defineProperty(vars[59], "1000000", {get: f7, set: f4} ); } catch(e) { }
try { var ret = new RegExp(); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[63], true, arg8, vars[92]); if(ret) vars[39] = ret; } catch(e) { }
try { var ret = new Error(vars[64], 'a', false); if(ret) vars[91] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[25], vars[41]); if(ret) vars[54] = ret; } catch(e) { }
try { var ret = new Date(Infinity); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = unescape('a'); if(ret) vars[75] = ret; } catch(e) { }
try { var ret = new Error(vars[91], false, vars[32]); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = Date.prototype.toJSON.call(vars[96]); if(ret) vars[44] = ret; } catch(e) { }
try { vars[32].toExponential = 5; } catch(e) { }
try { var ret = Enumerator.prototype.moveFirst.call(vars[42]); if(ret) vars[95] = ret; } catch(e) { }
try { var ret = Error.prototype.toString.call(vars[86]); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = EncodeURI('a'); if(ret) vars[7] = ret; } catch(e) { }
try { vars[80] = Date; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[78], arg9, 10); if(ret) vars[50] = ret; } catch(e) { }
try { var ret = Boolean.prototype.toJSON.call(vars[83]); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = GetObject(vars[51], vars[23]); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = VBArray(); if(ret) vars[73] = ret; } catch(e) { }
try { vars[61].toArray = f5; } catch(e) { }
try { var ret = vars[40].apply(vars[19], vars[13]); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = Date(); if(ret) vars[26] = ret; } catch(e) { }
try { vars[37].valueOf = vars[14]; } catch(e) { }
try { var ret = Date.UTC(Infinity, vars[89], 536870912, vars[15], vars[58], true, vars[67]); if(ret) vars[52] = ret; } catch(e) { }
try { var ret = Debug.writeln(arg1); if(ret) vars[65] = ret; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[22], vars[88], 'a'); if(ret) vars[41] = ret; } catch(e) { }
try { vars[74] = this; } catch(e) { }
try { var ret = vars[28].callee; if(ret) vars[74] = ret; } catch(e) { }
try { var ret = Boolean.prototype.toJSON.call(vars[79]); if(ret) vars[45] = ret; } catch(e) { }
try { vars[40] = {}; } catch(e) { }
try { var ret = escape(vars[2]); if(ret) vars[11] = ret; } catch(e) { }
try { var ret = RegExp.$1; if(ret) vars[75] = ret; } catch(e) { }
try { var ret = vars[17].toLocaleString; if(ret) vars[62] = ret; } catch(e) { }
try { vars[20].toExponential = vars[65]; } catch(e) { }
try { vars[12] = JSON; } catch(e) { }
try { var ret = new vars[38](true, vars[99], 0, 100, vars[15]); if(ret) vars[75] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[31], true, arg9); if(ret) vars[35] = ret; } catch(e) { }
try { var ret = new Enumerator(); if(ret) vars[39] = ret; } catch(e) { }
try { var ret = new ReferenceError(vars[40], false, vars[4]); if(ret) vars[5] = ret; } catch(e) { }
try { var ret = ActiveXObject(Infinity); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = Date(1000000); if(ret) vars[49] = ret; } catch(e) { }
try { vars[13] = Date; } catch(e) { }
try { var ret = new Error(arg3, 'a', vars[30]); if(ret) vars[97] = ret; } catch(e) { }
try { var ret = new RangeError(vars[48], true, vars[22]); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = String.prototype.charAt.call(vars[2], vars[55]); if(ret) vars[34] = ret; } catch(e) { }
try { var ret = RangeError('a', vars[5], vars[81]); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = URIError(arg5, vars[81], arg1); if(ret) vars[95] = ret; } catch(e) { }
try { var ret = Date.prototype.getMilliseconds.call(vars[70]); if(ret) vars[67] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[49], 'a', vars[76]); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = RegExp.leftContext; if(ret) vars[52] = ret; } catch(e) { }
try { var ret = String.prototype.anchor.call(vars[25], arg5); if(ret) vars[35] = ret; } catch(e) { }
try { vars[58] = {}; } catch(e) { }
try { var ret = vars[65].prototype; if(ret) vars[40] = ret; } catch(e) { }
try { var ret = vars[68].call(vars[87], 'a', vars[56], vars[81]); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[4], vars[48]); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[77], vars[28], vars[30]); if(ret) vars[53] = ret; } catch(e) { }
try { vars[66].callee = 1000; } catch(e) { }
try { var ret = new URIError(vars[58], vars[71], vars[78]); if(ret) vars[82] = ret; } catch(e) { }
try { var ret = vars[92].caller; if(ret) vars[39] = ret; } catch(e) { }
try { vars[42] = Error; } catch(e) { }
try { var ret = Error(vars[52]); if(ret) vars[29] = ret; } catch(e) { }
try { vars[24] = f4; } catch(e) { }
try { var ret = String.prototype.anchor.call(vars[41], vars[54]); if(ret) vars[81] = ret; } catch(e) { }
try { var ret = Array(vars[79], true, vars[97]); if(ret) vars[54] = ret; } catch(e) { }
try { var ret = RegExp.$7; if(ret) vars[8] = ret; } catch(e) { }
try { var ret = RegExp.input; if(ret) vars[46] = ret; } catch(e) { }
try { vars[24] = {}; } catch(e) { }
try { var ret = Array(vars[91], true, vars[28]); if(ret) vars[6] = ret; } catch(e) { }
try { var ret = vars[54].call(vars[91], arg1, 'a', Infinity); if(ret) vars[67] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[94], 3); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleUpperCase.call(vars[95]); if(ret) vars[70] = ret; } catch(e) { }
try { var ret = vars[51].toExponential; if(ret) vars[89] = ret; } catch(e) { }
try { var ret = Date('a'); if(ret) vars[35] = ret; } catch(e) { }
try { vars[36].toArray = f5; } catch(e) { }
try { var ret = Date.prototype.valueOf.call(vars[8]); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = Date.parse(false); if(ret) vars[71] = ret; } catch(e) { }
try { var ret = VBArray.prototype.toArray.call(vars[70]); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = vars[11].valueOf; if(ret) vars[2] = ret; } catch(e) { }
try { var ret = new Error(true); if(ret) vars[44] = ret; } catch(e) { }
try { var ret = RegExp(Array(17).join(String.fromCharCode(1))); if(ret) vars[31] = ret; } catch(e) { }
try { var ret = vars[41].appy(vars[32], vars[15]); if(ret) vars[13] = ret; } catch(e) { }
try { var ret = RegExp.$2; if(ret) vars[28] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[47], vars[92]); } catch(e) { }
try { var ret = vars[33].length; if(ret) vars[57] = ret; } catch(e) { }
try { var ret = Boolean.prototype.valueOf.call(vars[24]); if(ret) vars[61] = ret; } catch(e) { }
try { var ret = unescape(true); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = vars[80].prototype; if(ret) vars[50] = ret; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[24], vars[52], vars[36]); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[50], vars[3], vars[57]); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = Debug.writeln('a'); if(ret) vars[23] = ret; } catch(e) { }
try { var ret = vars[84](5, false, vars[98], vars[45], vars[18]); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = new EvalError('a', vars[44], vars[62]); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = new Date(); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = arguments; if(ret) vars[42] = ret; } catch(e) { }
try { var ret = VBArray.prototype.ubound.call(vars[13], vars[52]); if(ret) vars[93] = ret; } catch(e) { }
try { var ret = vars[28].toPrecision; if(ret) vars[80] = ret; } catch(e) { }
try { var ret = vars[71].apply(vars[77], vars[72]); if(ret) vars[33] = ret; } catch(e) { }
try { vars[2] = new Array(0); } catch(e) { }
try { vars[34][2] = Infinity; } catch(e) { }
try { vars[58] = new Array(0); } catch(e) { }
try { var ret = String.prototype.toUpperCase.call(vars[6]); if(ret) vars[95] = ret; } catch(e) { }
try { var ret = JSON.stringify(vars[43]); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[83], vars[47], vars[45]); if(ret) vars[8] = ret; } catch(e) { }
try { vars[27].callee = vars[67]; } catch(e) { }
try { var ret = vars[22].lastIndex; if(ret) vars[61] = ret; } catch(e) { }
try { var ret = new RegExp(Array(65537).join(String.fromCharCode(19, 39))); if(ret) vars[78] = ret; } catch(e) { }
try { vars[29].input = true; } catch(e) { }
try { var ret = EncodeURI(true); if(ret) vars[45] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[17], vars[12]); if(ret) vars[17] = ret; } catch(e) { }
try { var ret = RegExp.$6; if(ret) vars[32] = ret; } catch(e) { }
try { var ret = Object.getOwnPropertyDescriptor(vars[8], vars[65]); if(ret) vars[46] = ret; } catch(e) { }
try { vars[10] = document.createElement("foo"); } catch(e) { }
try { var ret = RegExp.$3; if(ret) vars[62] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[66], vars[61]); if(ret) vars[41] = ret; } catch(e) { }
try { var ret = Date.prototype.toJSON.call(vars[86]); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = vars[98].options; if(ret) vars[87] = ret; } catch(e) { }
try { var ret = new EvalError(vars[28], arg1, vars[55]); if(ret) vars[85] = ret; } catch(e) { }
try { vars[62] = {}; } catch(e) { }
try { var ret = Enumerator(); if(ret) vars[39] = ret; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[47], vars[77]); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = String.prototype.strike.call(vars[70], vars[65]); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = EncodeURI('a'); if(ret) vars[65] = ret; } catch(e) { }
try { var ret = parseFloat(arg2); if(ret) vars[94] = ret; } catch(e) { }
try { var ret = RegExp.$1; if(ret) vars[42] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[27], vars[53]); if(ret) vars[24] = ret; } catch(e) { }
try { var ret = new RangeError(vars[85], vars[51], vars[53]); if(ret) vars[19] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[44], vars[5], vars[71]); if(ret) vars[64] = ret; } catch(e) { }
try { var ret = new Enumerator(); if(ret) vars[42] = ret; } catch(e) { }
try { var ret = Array.prototype.toString.call(vars[5]); if(ret) vars[45] = ret; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[92]); if(ret) vars[84] = ret; } catch(e) { }
try { var ret = [vars[0], vars[65], vars[26]]; if(ret) vars[70] = ret; } catch(e) { }
try { var ret = Array(vars[90], vars[9], Infinity); if(ret) vars[56] = ret; } catch(e) { }
try { var ret = vars[84].toFixed; if(ret) vars[35] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.moveNext.call(vars[91]); if(ret) vars[74] = ret; } catch(e) { }
try { vars[4] = {}; } catch(e) { }
try { vars[70].global = true; } catch(e) { }
try { vars[33] = f4; } catch(e) { }
try { var ret = new Enumerator(); if(ret) vars[83] = ret; } catch(e) { }
try { var ret = vars[0].global; if(ret) vars[21] = ret; } catch(e) { }
try { var ret = RegExp.input; if(ret) vars[70] = ret; } catch(e) { }
try { var ret = vars[48].toLocaleString; if(ret) vars[67] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[78], Infinity); if(ret) vars[5] = ret; } catch(e) { }
try { vars[81] = {}; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[69], true, vars[12]); if(ret) vars[80] = ret; } catch(e) { }
try { var ret = arguments; if(ret) vars[75] = ret; } catch(e) { }
try { var ret = []; if(ret) vars[88] = ret; } catch(e) { }
try { var ret = new Boolean(); if(ret) vars[69] = ret; } catch(e) { }
try { var ret = escape(false); if(ret) vars[84] = ret; } catch(e) { }
try { var ret = RegExp.$4; if(ret) vars[35] = ret; } catch(e) { }
try { var ret = new Enumerator(); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = vars[66](false, 0, vars[33], arg5, vars[68]); if(ret) vars[55] = ret; } catch(e) { }
try { var ret = RegExp.$3; if(ret) vars[21] = ret; } catch(e) { }
try { var ret = new RegExp(Array(257).join(String.fromCharCode(75))); if(ret) vars[99] = ret; } catch(e) { }
try { var ret = String.prototype.localeCompare.call(vars[81], false); if(ret) vars[46] = ret; } catch(e) { }
try { var ret = RegExp(Array(17).join(String.fromCharCode(80, 108))); if(ret) vars[14] = ret; } catch(e) { }
try { var ret = RegExp.lastIndex; if(ret) vars[84] = ret; } catch(e) { }
try { RegExp.input = vars[70]; } catch(e) { }
try { RegExp.prototype.compile.call(vars[75], Array(65537).join(String.fromCharCode(91)) + Array(1025).join(String.fromCharCode(90, 39))); } catch(e) { }
try { vars[40] = {}; } catch(e) { }
try { var ret = vars[33].toPrecision; if(ret) vars[77] = ret; } catch(e) { }
try { vars[63].options = vars[56]; } catch(e) { }
try { var ret = vars[58].caller; if(ret) vars[92] = ret; } catch(e) { }
try { var ret = vars[83].toFixed; if(ret) vars[98] = ret; } catch(e) { }
try { var ret = vars[64].prototype; if(ret) vars[84] = ret; } catch(e) { }
try { var ret = vars[71][2147483648]; if(ret) vars[77] = ret; } catch(e) { }
try { var ret = Boolean.prototype.valueOf.call(vars[67]); if(ret) vars[5] = ret; } catch(e) { }
try { var ret = ActiveXObject('a', vars[19]); if(ret) vars[24] = ret; } catch(e) { }
try { var ret = DblFromLus(vars[32]); if(ret) vars[5] = ret; } catch(e) { }
try { var ret = vars[78].toString; if(ret) vars[11] = ret; } catch(e) { }
try { vars[0].lastIndex = false; } catch(e) { }
//endjs
CollectGarbage();
return vars[22];

}

function f5(arg7, arg8, arg9) {
runcount.f5++; if(runcount.f5>2) return;
//alert(5);
//beginjs
try { var ret = Date(vars[51]); if(ret) vars[88] = ret; } catch(e) { }
try { vars[88] = {}; } catch(e) { }
try { var ret = String.prototype.toLocaleLowerCase.call(vars[24]); if(ret) vars[21] = ret; } catch(e) { }
try { vars[43].input = vars[15]; } catch(e) { }
try { var ret = Date.prototype.toUTCString.call(vars[59]); if(ret) vars[47] = ret; } catch(e) { }
try { var ret = RegExp.rightContext; if(ret) vars[44] = ret; } catch(e) { }
try { var ret = RegExp.$6; if(ret) vars[99] = ret; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[77], vars[63]); if(ret) vars[99] = ret; } catch(e) { }
try { var ret = ActiveXObject(Infinity); if(ret) vars[71] = ret; } catch(e) { }
try { var ret = VBArray.prototype.lbound.call(vars[30], true); if(ret) vars[29] = ret; } catch(e) { }
try { var ret = RegExp.$7; if(ret) vars[98] = ret; } catch(e) { }
try { var ret = LuHigh(vars[16]); if(ret) vars[94] = ret; } catch(e) { }
try { var ret = EvalError(Infinity, -1, vars[11]); if(ret) vars[70] = ret; } catch(e) { }
try { var ret = VBArray(vars[24]); if(ret) vars[6] = ret; } catch(e) { }
try { var ret = new Array(arg5, Infinity, vars[93]); if(ret) vars[97] = ret; } catch(e) { }
try { var ret = String.prototype.localeCompare.call(vars[12], 'a'); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = Enumerator(vars[49]); if(ret) vars[16] = ret; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[24], false); if(ret) vars[17] = ret; } catch(e) { }
try { var ret = vars[53][4]; if(ret) vars[25] = ret; } catch(e) { }
try { var ret = RegExp.leftContext; if(ret) vars[50] = ret; } catch(e) { }
try { var ret = Array.prototype.reverse.call(vars[49]); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = new Error(vars[43]); if(ret) vars[95] = ret; } catch(e) { }
try { var ret = new ActiveXObject('a', vars[43]); if(ret) vars[76] = ret; } catch(e) { }
try { vars[27].toJSON = arg3; } catch(e) { }
try { var ret = new Date(); if(ret) vars[5] = ret; } catch(e) { }
try { var ret = vars[29].prototype; if(ret) vars[3] = ret; } catch(e) { }
try { var ret = Debug.writeln(1000); if(ret) vars[62] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[22], vars[14]); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = parseInt(vars[29]); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = new URIError(Infinity, vars[77], vars[62]); if(ret) vars[82] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[35], 'a', true); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = RegExp.lastMatch; if(ret) vars[98] = ret; } catch(e) { }
try { var ret = Object.getOwnPropertyDescriptor(vars[23], vars[76]); if(ret) vars[41] = ret; } catch(e) { }
try { var ret = arguments; if(ret) vars[9] = ret; } catch(e) { }
try { var ret = RegExp.leftContext; if(ret) vars[19] = ret; } catch(e) { }
try { var ret = Array.prototype.shift.call(vars[75]); if(ret) vars[11] = ret; } catch(e) { }
try { var ret = vars[99].length; if(ret) vars[8] = ret; } catch(e) { }
try { vars[70] = document.createElement("foo"); Object.defineProperty(vars[70], "toExponential", {get: f3, set: f7} ); } catch(e) { }
try { var ret = new EvalError(true, Infinity, 'a'); if(ret) vars[35] = ret; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[28], vars[59]); if(ret) vars[8] = ret; } catch(e) { }
try { var ret = new vars[28].call(vars[25], vars[97], arg7, Infinity, false, Infinity); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleUpperCase.call(vars[51]); if(ret) vars[35] = ret; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[69], vars[91], vars[51], arg6); if(ret) vars[19] = ret; } catch(e) { }
try { var ret = RegExp.lastMatch; if(ret) vars[60] = ret; } catch(e) { }
try { var ret = String.prototype.match.call(vars[10], vars[81]); if(ret) vars[80] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[34], vars[51], vars[35]); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = vars[51].apply(vars[82], vars[70]); if(ret) vars[57] = ret; } catch(e) { }
try { vars[27][1] = false; } catch(e) { }
try { vars[30] = this; } catch(e) { }
try { var ret = String.FromCharCode(arg9, vars[19], 100); if(ret) vars[24] = ret; } catch(e) { }
try { vars[14].toLocaleString = f6; } catch(e) { }
try { var ret = Debug.write(vars[99], 'a', vars[38]); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = ReferenceError(vars[23], true, arg6); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = vars[77].foo; if(ret) vars[50] = ret; } catch(e) { }
try { var ret = Debug.write('a'); if(ret) vars[6] = ret; } catch(e) { }
try { var ret = parseFloat(0); if(ret) vars[22] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[57], vars[64]); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = new RegExp(); if(ret) vars[23] = ret; } catch(e) { }
try { var ret = vars[84].callee; if(ret) vars[87] = ret; } catch(e) { }
try { vars[20].arguments = vars[60]; } catch(e) { }
try { var ret = Date(); if(ret) vars[93] = ret; } catch(e) { }
try { var ret = VBArray.prototype.dimensions.call(vars[5]); if(ret) vars[99] = ret; } catch(e) { }
try { var ret = new VBArray(); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = Date.prototype.getFullYear.call(vars[58]); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = new Array(); if(ret) vars[80] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[64], Infinity, Infinity); if(ret) vars[39] = ret; } catch(e) { }
try { RegExp.input = vars[49]; } catch(e) { }
try { var ret = new ActiveXObject(false, vars[95]); if(ret) vars[11] = ret; } catch(e) { }
try { var ret = Date.prototype.toUTCString.call(vars[50]); if(ret) vars[95] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[29], false, vars[84]); if(ret) vars[32] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[45], vars[15]); } catch(e) { }
try { var ret = RegExp.$9; if(ret) vars[45] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[19], vars[62], true, vars[83]); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = vars[54][1000]; if(ret) vars[71] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[7], vars[55]); if(ret) vars[52] = ret; } catch(e) { }
try { var ret = new RegExp(); if(ret) vars[14] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.moveNext.call(vars[85]); if(ret) vars[34] = ret; } catch(e) { }
try { var ret = RuntimeObject(); if(ret) vars[11] = ret; } catch(e) { }
try { var ret = String.prototype.match.call(vars[21], arg3); if(ret) vars[71] = ret; } catch(e) { }
try { vars[7].valueOf = f8; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[62]); if(ret) vars[12] = ret; } catch(e) { }
try { vars[18] = new Array(10); } catch(e) { }
try { var ret = RegExp.$9; if(ret) vars[47] = ret; } catch(e) { }
try { var ret = RegExp.lastMatch; if(ret) vars[84] = ret; } catch(e) { }
try { vars[11].lastIndex = arg4; } catch(e) { }
try { var ret = vars[44].input; if(ret) vars[45] = ret; } catch(e) { }
try { var ret = Debug.writeln(vars[30], vars[54], false); if(ret) vars[39] = ret; } catch(e) { }
try { var ret = RegExp.$9; if(ret) vars[40] = ret; } catch(e) { }
try { var ret = new Enumerator(); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[87], vars[91]); if(ret) vars[70] = ret; } catch(e) { }
try { var ret = RegExp.$9; if(ret) vars[45] = ret; } catch(e) { }
try { vars[18].valueOf = true; } catch(e) { }
try { var ret = new Date(true); if(ret) vars[62] = ret; } catch(e) { }
try { var ret = new RegExp(Array(65).join(String.fromCharCode(2))); if(ret) vars[4] = ret; } catch(e) { }
try { var ret = decodeURIComponent(Infinity); if(ret) vars[51] = ret; } catch(e) { }
try { var ret = VBArray.prototype.ubound.call(vars[24], Infinity); if(ret) vars[81] = ret; } catch(e) { }
try { var ret = new RegExp(); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = new RangeError(false, Infinity, true); if(ret) vars[24] = ret; } catch(e) { }
try { var ret = String.prototype.anchor.call(vars[3], arg5); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = RegExp(Array(65).join(String.fromCharCode(50, 93)), 'ggg'); if(ret) vars[85] = ret; } catch(e) { }
try { vars[93].input = false; } catch(e) { }
try { var ret = String.prototype.search.call(vars[23], vars[35]); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = RegExp.lastParen; if(ret) vars[54] = ret; } catch(e) { }
try { var ret = String.prototype.strike.call(vars[83], vars[94]); if(ret) vars[66] = ret; } catch(e) { }
try { vars[66].constructor = true; } catch(e) { }
try { var ret = String.prototype.toLocaleUpperCase.call(vars[47]); if(ret) vars[44] = ret; } catch(e) { }
try { RegExp.input = arg4; } catch(e) { }
try { var ret = Object.defineProperty(vars[8], '100', { configurable: vars[95] }); if(ret) vars[78] = ret; } catch(e) { }
try { var ret = Date(); if(ret) vars[65] = ret; } catch(e) { }
try { var ret = vars[96].call(vars[79], vars[8], vars[80], vars[91]); if(ret) vars[90] = ret; } catch(e) { }
try { vars[65][0] = Infinity; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[15], true); if(ret) vars[2] = ret; } catch(e) { }
try { var ret = GetObject(vars[58], arg5); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[14], vars[31], true, 1000); if(ret) vars[79] = ret; } catch(e) { }
try { var ret = arg2; if(ret) vars[75] = ret; } catch(e) { }
try { var ret = new vars[85].apply(vars[56], vars[73]); if(ret) vars[99] = ret; } catch(e) { }
try { vars[86] = new Array(2147483648); } catch(e) { }
try { var ret = RegExp.$8; if(ret) vars[47] = ret; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[38]); if(ret) vars[20] = ret; } catch(e) { }
try { var ret = new Date(false); if(ret) vars[76] = ret; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[39], vars[53]); if(ret) vars[95] = ret; } catch(e) { }
try { var ret = GetObject(vars[25]); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[37]); if(ret) vars[6] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[28], arg4, vars[92]); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[11], false, true); if(ret) vars[70] = ret; } catch(e) { }
try { var ret = Error.prototype.toString.call(vars[16]); if(ret) vars[75] = ret; } catch(e) { }
try { var ret = Array.prototype.reverse.call(vars[91]); if(ret) vars[25] = ret; } catch(e) { }
try { vars[68] = this; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[77], 4294967296); if(ret) vars[61] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[19], vars[1], vars[94], 'a', arg1); if(ret) vars[52] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[70], Infinity); if(ret) vars[50] = ret; } catch(e) { }
try { var ret = new vars[31].call(vars[92], vars[83], Infinity, vars[88], vars[48], Infinity); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = vars[12][1]; if(ret) vars[92] = ret; } catch(e) { }
try { var ret = []; if(ret) vars[79] = ret; } catch(e) { }
try { var ret = vars[86].toPrecision; if(ret) vars[19] = ret; } catch(e) { }
try { vars[75].toFixed = vars[9]; } catch(e) { }
try { eval(Array(65).join(String.fromCharCode(46, 83, 1))); } catch(e) { }
try { vars[16].foo = vars[40]; } catch(e) { }
try { var ret = GetObject(vars[63]); if(ret) vars[56] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[25], vars[54]); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = String.prototype.toUpperCase.call(vars[53]); if(ret) vars[97] = ret; } catch(e) { }
try { vars[62].caller = vars[12]; } catch(e) { }
try { var ret = new Error(vars[64]); if(ret) vars[67] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[84], vars[20], 'a'); if(ret) vars[38] = ret; } catch(e) { }
try { var ret = RegExp.$3; if(ret) vars[28] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[54], Infinity, vars[88]); if(ret) vars[16] = ret; } catch(e) { }
try { var ret = Debug.writeln(false); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleString.call(vars[97]); if(ret) vars[22] = ret; } catch(e) { }
try { var ret = Array.prototype.pop.call(vars[56]); if(ret) vars[44] = ret; } catch(e) { }
try { var ret = parseInt(true); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = new RegExp(Array(257).join(String.fromCharCode(26, 64)), 'mg'); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = Date.prototype.toJSON.call(vars[12]); if(ret) vars[95] = ret; } catch(e) { }
try { var ret = RuntimeObject(); if(ret) vars[88] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[88], 'a'); if(ret) vars[51] = ret; } catch(e) { }
try { var ret = String.prototype.match.call(vars[77], 'a'); if(ret) vars[16] = ret; } catch(e) { }
try { eval(Array(257).join(String.fromCharCode(123, 110, 84)) + Array(65537).join(String.fromCharCode(22, 2)) + Array(4097).join(String.fromCharCode(126, 23, 49))); } catch(e) { }
try { var ret = GetObject(false, Infinity); if(ret) vars[32] = ret; } catch(e) { }
try { var ret = Date.prototype.getMilliseconds.call(vars[15]); if(ret) vars[36] = ret; } catch(e) { }
try { vars[9] = Boolean; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[25], vars[11]); if(ret) vars[35] = ret; } catch(e) { }
try { var ret = RegExp.$2; if(ret) vars[45] = ret; } catch(e) { }
try { var ret = RegExp.$4; if(ret) vars[45] = ret; } catch(e) { }
try { vars[2] = document.createElement("foo"); } catch(e) { }
try { var ret = Error(); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = String.FromCharCode(vars[34], false, 'a'); if(ret) vars[24] = ret; } catch(e) { }
try { var ret = String.prototype.localeCompare.call(vars[5], vars[71]); if(ret) vars[82] = ret; } catch(e) { }
try { var ret = Array(17).join(String.fromCharCode(64, 82, 123)); if(ret) vars[76] = ret; } catch(e) { }
try { var ret = Debug.write(vars[89]); if(ret) vars[95] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.atEnd.call(vars[67]); if(ret) vars[51] = ret; } catch(e) { }
try { var ret = Boolean.prototype.valueOf.call(vars[54]); if(ret) vars[75] = ret; } catch(e) { }
try { var ret = Array.prototype.toLocaleString.call(vars[85]); if(ret) vars[82] = ret; } catch(e) { }
try { var ret = Boolean.prototype.valueOf.call(vars[34]); if(ret) vars[2] = ret; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[2], f9); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = unescape('a'); if(ret) vars[19] = ret; } catch(e) { }
try { var ret = new vars[87].call(vars[18], 'a', 1073741823, arg9, true, 'a'); if(ret) vars[4] = ret; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[24], false, arg1, 3, true); if(ret) vars[53] = ret; } catch(e) { }
try { var ret = vars[14].toLocaleString; if(ret) vars[52] = ret; } catch(e) { }
try { var ret = String.prototype.toLowerCase.call(vars[25]); if(ret) vars[88] = ret; } catch(e) { }
try { var ret = Array.prototype.pop.call(vars[87]); if(ret) vars[63] = ret; } catch(e) { }
try { var ret = RuntimeObject(); if(ret) vars[53] = ret; } catch(e) { }
try { var ret = vars[74][1]; if(ret) vars[91] = ret; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[60], f5); if(ret) vars[16] = ret; } catch(e) { }
try { var ret = RegExp.input; if(ret) vars[99] = ret; } catch(e) { }
try { var ret = escape(Infinity); if(ret) vars[17] = ret; } catch(e) { }
try { var ret = Date.prototype.toJSON.call(vars[35]); if(ret) vars[12] = ret; } catch(e) { }
try { var ret = RegExp.$5; if(ret) vars[46] = ret; } catch(e) { }
try { var ret = new Array(); if(ret) vars[20] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[70], vars[94]); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[15], Infinity, vars[57]); if(ret) vars[24] = ret; } catch(e) { }
try { vars[33] = {}; } catch(e) { }
try { vars[60][0] = Infinity; } catch(e) { }
try { var ret = Date(vars[28]); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[2], vars[57]); if(ret) vars[47] = ret; } catch(e) { }
try { var ret = new RegExp(Array(65).join(String.fromCharCode(22)) + Array(4097).join(String.fromCharCode(73)) + Array(1025).join(String.fromCharCode(22, 73)), 'gm'); if(ret) vars[28] = ret; } catch(e) { }
try { vars[92] = {}; } catch(e) { }
try { vars[85][3] = vars[41]; } catch(e) { }
try { var ret = Enumerator.prototype.atEnd.call(vars[63]); if(ret) vars[93] = ret; } catch(e) { }
try { var ret = vars[34].callee; if(ret) vars[25] = ret; } catch(e) { }
try { vars[92] = RegExp; } catch(e) { }
try { var ret = Error(vars[69]); if(ret) vars[83] = ret; } catch(e) { }
try { vars[6] = this; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[3], vars[45], vars[98]); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[50], true, vars[57]); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = arg5; if(ret) vars[24] = ret; } catch(e) { }
try { var ret = RegExp.index; if(ret) vars[81] = ret; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[92], vars[69], 10); if(ret) vars[76] = ret; } catch(e) { }
try { vars[93] = Enumerator; } catch(e) { }
try { vars[22].source = vars[51]; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[17]); if(ret) vars[87] = ret; } catch(e) { }
try { vars[1][1000] = vars[73]; } catch(e) { }
try { var ret = vars[99].lastIndex; if(ret) vars[78] = ret; } catch(e) { }
try { var ret = JSON.parse(vars[61]); if(ret) vars[85] = ret; } catch(e) { }
try { var ret = new VBArray(vars[70]); if(ret) vars[93] = ret; } catch(e) { }
try { var ret = Array(1, vars[86], vars[40]); if(ret) vars[97] = ret; } catch(e) { }
try { var ret = vars[82].toJSON; if(ret) vars[68] = ret; } catch(e) { }
try { var ret = String.prototype.anchor.call(vars[20], Infinity); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = Array(); if(ret) vars[84] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[72], 5, vars[63]); if(ret) vars[80] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[29], true); if(ret) vars[4] = ret; } catch(e) { }
try { vars[84] = Object; } catch(e) { }
try { var ret = RegExp.$5; if(ret) vars[79] = ret; } catch(e) { }
try { var ret = RegExp(Array(17).join(String.fromCharCode(42, 86)) + Array(4097).join(String.fromCharCode(89)) + Array(4097).join(String.fromCharCode(71, 73))); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = encodeURIComponent(arg2); if(ret) vars[19] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[82], vars[44], 1000000); if(ret) vars[11] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.moveFirst.call(vars[28]); if(ret) vars[84] = ret; } catch(e) { }
try { var ret = vars[58].toJSON; if(ret) vars[14] = ret; } catch(e) { }
try { var ret = Enumerator(); if(ret) vars[70] = ret; } catch(e) { }
try { var ret = vars[71].valueOf; if(ret) vars[65] = ret; } catch(e) { }
try { var ret = Debug.write(false, 10, 'a'); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[63], Infinity, 0); if(ret) vars[50] = ret; } catch(e) { }
try { var ret = Debug.write(vars[50], 536870911, 4); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = escape(vars[23]); if(ret) vars[4] = ret; } catch(e) { }
try { var ret = vars[98].length; if(ret) vars[38] = ret; } catch(e) { }
try { var ret = vars[11].options; if(ret) vars[64] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[82], vars[17], 5); if(ret) vars[70] = ret; } catch(e) { }
try { var ret = new vars[18](Infinity, vars[81], vars[26], arg1, arg8); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = RegExp.$4; if(ret) vars[67] = ret; } catch(e) { }
try { var ret = Object.defineProperty(vars[73], '1000', { get: f0, set: f9, writable: Infinity }); if(ret) vars[50] = ret; } catch(e) { }
try { vars[74].toPrecision = f7; } catch(e) { }
try { vars[10] = new Array(1); } catch(e) { }
try { var ret = Array(vars[2]); if(ret) vars[11] = ret; } catch(e) { }
try { var ret = decodeURIComponent(vars[41]); if(ret) vars[72] = ret; } catch(e) { }
try { vars[31].prototype = Infinity; } catch(e) { }
try { var ret = Date(arg3, vars[19], vars[64], 'a', Infinity, 'a', 1); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = vars[18][1]; if(ret) vars[98] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[79], vars[79]); if(ret) vars[28] = ret; } catch(e) { }
try { vars[58] = Enumerator; } catch(e) { }
try { var ret = Date.prototype.toLocaleString.call(vars[49]); if(ret) vars[51] = ret; } catch(e) { }
try { vars[41].prototype = false; } catch(e) { }
try { var ret = vars[34](vars[36], arg3, 'a', vars[42], arg6); if(ret) vars[2] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[4], vars[12], vars[0]); if(ret) vars[36] = ret; } catch(e) { }
try { vars[21] = {}; } catch(e) { }
try { var ret = RegExp.$5; if(ret) vars[25] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[58], vars[95]); if(ret) vars[30] = ret; } catch(e) { }
try { vars[74][-1] = false; } catch(e) { }
try { vars[23] = new Array(1); } catch(e) { }
try { var ret = new VBArray(); if(ret) vars[53] = ret; } catch(e) { }
try { var ret = DblFromLus(vars[38]); if(ret) vars[34] = ret; } catch(e) { }
try { var ret = Date(100, vars[19], Infinity, vars[47], vars[50], vars[6], 'a'); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = Object.getOwnPropertyDescriptor(vars[51], vars[0]); if(ret) vars[64] = ret; } catch(e) { }
try { vars[88][0] = arg6; } catch(e) { }
try { vars[54] = new Array(5); } catch(e) { }
try { var ret = RegExp.$9; if(ret) vars[77] = ret; } catch(e) { }
try { vars[58].toJSON = vars[18]; } catch(e) { }
try { var ret = Enumerator(vars[9]); if(ret) vars[55] = ret; } catch(e) { }
try { var ret = String.prototype.localeCompare.call(vars[21], arg3); if(ret) vars[23] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[83]); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[84], f6); if(ret) vars[91] = ret; } catch(e) { }
try { var ret = Date.prototype.valueOf.call(vars[22]); if(ret) vars[91] = ret; } catch(e) { }
try { var ret = RegExp.index; if(ret) vars[6] = ret; } catch(e) { }
try { var ret = vars[40].toString; if(ret) vars[9] = ret; } catch(e) { }
try { vars[48] = new Array(10); } catch(e) { }
try { var ret = RegExp.lastParen; if(ret) vars[11] = ret; } catch(e) { }
try { var ret = GetObject(true); if(ret) vars[28] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[61], vars[78], 'a'); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = Array.prototype.reverse.call(vars[30]); if(ret) vars[80] = ret; } catch(e) { }
try { var ret = new ActiveXObject(4, Infinity); if(ret) vars[62] = ret; } catch(e) { }
try { var ret = parseFloat(arg3); if(ret) vars[62] = ret; } catch(e) { }
try { vars[24].source = vars[0]; } catch(e) { }
try { var ret = Date(vars[83], vars[19], vars[62], vars[65], vars[77], vars[70], vars[89]); if(ret) vars[8] = ret; } catch(e) { }
try { var ret = EncodeURI(Infinity); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = new Date(vars[65]); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = encodeURIComponent(vars[0]); if(ret) vars[43] = ret; } catch(e) { }
try { RegExp.input = 0; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[94], Infinity, vars[73], Infinity); if(ret) vars[92] = ret; } catch(e) { }
try { vars[8] = this; } catch(e) { }
try { var ret = JSON.parse(vars[15]); if(ret) vars[36] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[53], Infinity, vars[43], 1, vars[80]); if(ret) vars[49] = ret; } catch(e) { }
try { vars[72] = Date; } catch(e) { }
try { vars[91] = Error; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[5], vars[29]); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = vars[53].call(vars[13], vars[89], vars[30], vars[50]); if(ret) vars[12] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[41], vars[7], 'a'); if(ret) vars[66] = ret; } catch(e) { }
try { vars[28].constructor = -1; } catch(e) { }
try { vars[40].toExponential = 'a'; } catch(e) { }
try { var ret = new RuntimeObject(); if(ret) vars[33] = ret; } catch(e) { }
try { vars[78].callee = vars[49]; } catch(e) { }
try { var ret = RegExp.$8; if(ret) vars[58] = ret; } catch(e) { }
try { var ret = String.prototype.match.call(vars[64], 2); if(ret) vars[82] = ret; } catch(e) { }
try { vars[68] = {}; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[72], 'a', vars[23]); if(ret) vars[8] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[23], vars[20]); if(ret) vars[8] = ret; } catch(e) { }
try { var ret = new RuntimeObject(); if(ret) vars[13] = ret; } catch(e) { }
try { var ret = vars[2].toString; if(ret) vars[46] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[44], vars[20]); if(ret) vars[39] = ret; } catch(e) { }
try { var ret = vars[81].lastIndex; if(ret) vars[41] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[31], vars[24], false); if(ret) vars[5] = ret; } catch(e) { }
try { var ret = URIError(vars[92], vars[82], arg3); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.moveFirst.call(vars[19]); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = ActiveXObject(vars[83], Infinity); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = RegExp(); if(ret) vars[39] = ret; } catch(e) { }
try { var ret = escape(false); if(ret) vars[5] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[17], vars[68]); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[17]); if(ret) vars[20] = ret; } catch(e) { }
try { var ret = new RangeError(arg5, vars[12], Infinity); if(ret) vars[19] = ret; } catch(e) { }
try { var ret = String.prototype.anchor.call(vars[75], false); if(ret) vars[26] = ret; } catch(e) { }
try { var ret = RegExp.input; if(ret) vars[0] = ret; } catch(e) { }
try { var ret = RangeError(false, vars[34], true); if(ret) vars[95] = ret; } catch(e) { }
try { var ret = vars[13].callee; if(ret) vars[79] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[73], Array(4097).join(String.fromCharCode(60, 29, 42)) + Array(4097).join(String.fromCharCode(103, 100))); } catch(e) { }
try { vars[90].toFixed = vars[40]; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[66], 'a'); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = ActiveXObject(vars[3]); if(ret) vars[73] = ret; } catch(e) { }
try { var ret = unescape(vars[14]); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = new VBArray(vars[20]); if(ret) vars[67] = ret; } catch(e) { }
try { var ret = new Enumerator('a'); if(ret) vars[26] = ret; } catch(e) { }
try { var ret = Error(true, vars[45], arg2); if(ret) vars[48] = ret; } catch(e) { }
try { vars[69].valueOf = vars[54]; } catch(e) { }
try { var ret = ReferenceError(arg8, vars[63], 'a'); if(ret) vars[99] = ret; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[95], vars[71]); if(ret) vars[94] = ret; } catch(e) { }
try { var ret = vars[92].toFixed; if(ret) vars[86] = ret; } catch(e) { }
try { var ret = Date.prototype.toUTCString.call(vars[48]); if(ret) vars[19] = ret; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[58], vars[10]); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = vars[79].toFixed; if(ret) vars[51] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[87], vars[78], vars[29]); if(ret) vars[50] = ret; } catch(e) { }
try { vars[87] = {}; } catch(e) { }
try { var ret = GetObject(true, vars[13]); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = Boolean.prototype.valueOf.call(vars[27]); if(ret) vars[79] = ret; } catch(e) { }
try { var ret = new Array(-1, vars[77], 'a'); if(ret) vars[76] = ret; } catch(e) { }
try { vars[19].toPrecision = Infinity; } catch(e) { }
try { vars[33].toPrecision = arg3; } catch(e) { }
try { vars[48].toString = f5; } catch(e) { }
try { var ret = VBArray.prototype.dimensions.call(vars[18]); if(ret) vars[52] = ret; } catch(e) { }
try { var ret = Boolean(); if(ret) vars[4] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[49], vars[43], arg7); if(ret) vars[25] = ret; } catch(e) { }
try { var ret = new RegExp(Array(65537).join(String.fromCharCode(107, 30)) + Array(65).join(String.fromCharCode(104, 11, 75))); if(ret) vars[43] = ret; } catch(e) { }
try { var ret = vars[86].call(vars[24], vars[42], vars[17], Infinity); if(ret) vars[65] = ret; } catch(e) { }
try { var ret = vars[2].toLocaleString; if(ret) vars[98] = ret; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[47], vars[23]); if(ret) vars[42] = ret; } catch(e) { }
try { var ret = vars[50].foo; if(ret) vars[92] = ret; } catch(e) { }
try { var ret = new vars[27].apply(vars[76], vars[63]); if(ret) vars[56] = ret; } catch(e) { }
try { var ret = Object.defineProperty(vars[93], 'global', { enumerable: 'a' }); if(ret) vars[87] = ret; } catch(e) { }
try { vars[99] = Array; } catch(e) { }
try { RegExp.prototype.exec.call(vars[46], Infinity); } catch(e) { }
try { var ret = Array.prototype.reverse.call(vars[5]); if(ret) vars[65] = ret; } catch(e) { }
try { var ret = vars[73].input; if(ret) vars[49] = ret; } catch(e) { }
try { vars[8].toLocaleString = f3; } catch(e) { }
try { vars[85].global = 'a'; } catch(e) { }
try { var ret = vars[8][1]; if(ret) vars[58] = ret; } catch(e) { }
try { var ret = Date.prototype.toJSON.call(vars[48]); if(ret) vars[88] = ret; } catch(e) { }
try { vars[97] = Array; } catch(e) { }
try { var ret = GetObject(false, 'a'); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = Error(vars[23], true, vars[13]); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = vars[43].callee; if(ret) vars[19] = ret; } catch(e) { }
try { vars[45].caller = false; } catch(e) { }
try { var ret = LuHigh(arg6); if(ret) vars[79] = ret; } catch(e) { }
try { vars[7] = Function; } catch(e) { }
try { RegExp.prototype.compile.call(vars[66], Array(17).join(String.fromCharCode(114)) + Array(257).join(String.fromCharCode(2)), 'i'); } catch(e) { }
try { var ret = String.prototype.search.call(vars[9], vars[53]); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = vars[71].source; if(ret) vars[36] = ret; } catch(e) { }
try { vars[50] = Object; } catch(e) { }
try { var ret = arg3; if(ret) vars[60] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleString.call(vars[88]); if(ret) vars[94] = ret; } catch(e) { }
try { vars[84] = Date; } catch(e) { }
try { var ret = vars[23].input; if(ret) vars[98] = ret; } catch(e) { }
try { vars[61].toExponential = f6; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[6], vars[58], vars[55], vars[30], arg9); if(ret) vars[93] = ret; } catch(e) { }
try { var ret = RegExp.lastParen; if(ret) vars[5] = ret; } catch(e) { }
try { var ret = RegExp.$2; if(ret) vars[80] = ret; } catch(e) { }
try { var ret = Boolean(); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = RegExp(Array(65537).join(String.fromCharCode(53, 109, 114)) + Array(1025).join(String.fromCharCode(78, 60)), 'i'); if(ret) vars[20] = ret; } catch(e) { }
try { var ret = Date(Infinity); if(ret) vars[8] = ret; } catch(e) { }
try { var ret = Error(); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = String.prototype.toLowerCase.call(vars[56]); if(ret) vars[25] = ret; } catch(e) { }
try { var ret = vars[93].call(vars[35], vars[2], false, vars[6]); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[95], vars[80]); if(ret) vars[29] = ret; } catch(e) { }
try { var ret = vars[50].callee; if(ret) vars[43] = ret; } catch(e) { }
try { vars[23].toExponential = f5; } catch(e) { }
try { var ret = vars[58][1073741824]; if(ret) vars[77] = ret; } catch(e) { }
try { var ret = isFinite('a'); if(ret) vars[84] = ret; } catch(e) { }
try { vars[44].callee = vars[22]; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[0], true); if(ret) vars[55] = ret; } catch(e) { }
try { var ret = RegExp.$1; if(ret) vars[35] = ret; } catch(e) { }
try { vars[76] = Enumerator; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[83], true); if(ret) vars[45] = ret; } catch(e) { }
try { var ret = vars[53].arguments; if(ret) vars[35] = ret; } catch(e) { }
try { var ret = new RegExp(Array(65).join(String.fromCharCode(18, 50, 70)), 'mm'); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = Array(1025).join(String.fromCharCode(58, 41)); if(ret) vars[80] = ret; } catch(e) { }
try { var ret = new RegExp(Array(4097).join(String.fromCharCode(41, 78, 81))); if(ret) vars[92] = ret; } catch(e) { }
try { vars[37].length = false; } catch(e) { }
try { RegExp.prototype.compile.call(vars[33], Array(4097).join(String.fromCharCode(105, 16)) + Array(17).join(String.fromCharCode(72)) + Array(17).join(String.fromCharCode(99)), 'gi'); } catch(e) { }
try { var ret = Boolean.prototype.toString.call(vars[60]); if(ret) vars[98] = ret; } catch(e) { }
try { vars[92].toLocaleString = arg8; } catch(e) { }
try { var ret = Boolean.prototype.valueOf.call(vars[81]); if(ret) vars[10] = ret; } catch(e) { }
try { vars[11] = ActiveXObject; } catch(e) { }
try { var ret = new vars[10].apply(vars[90], vars[19]); if(ret) vars[36] = ret; } catch(e) { }
try { var ret = vars[86].prototype; if(ret) vars[69] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[10], Array(65).join(String.fromCharCode(121)) + Array(4097).join(String.fromCharCode(69)), 'g'); } catch(e) { }
try { var ret = parseInt(vars[80]); if(ret) vars[97] = ret; } catch(e) { }
try { var ret = Array(arg9, Infinity, vars[43]); if(ret) vars[14] = ret; } catch(e) { }
try { var ret = new RangeError(vars[43], 'a', vars[26]); if(ret) vars[78] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[49], vars[77], vars[45], true); if(ret) vars[12] = ret; } catch(e) { }
try { var ret = RangeError(arg3, vars[56], vars[16]); if(ret) vars[93] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[87], arg1); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = VBArray.prototype.ubound.call(vars[90], 'a'); if(ret) vars[51] = ret; } catch(e) { }
try { var ret = Date.parse(vars[53]); if(ret) vars[14] = ret; } catch(e) { }
try { var ret = vars[32].toString; if(ret) vars[80] = ret; } catch(e) { }
try { var ret = vars[52].length; if(ret) vars[98] = ret; } catch(e) { }
try { vars[5].valueOf = vars[27]; } catch(e) { }
try { var ret = Date.prototype.toLocaleString.call(vars[9]); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = Date.prototype.toUTCString.call(vars[67]); if(ret) vars[82] = ret; } catch(e) { }
try { var ret = parseInt(vars[97]); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = String.FromCharCode(vars[3], Infinity, vars[7]); if(ret) vars[70] = ret; } catch(e) { }
try { var ret = String.FromCharCode(arg6, 3, vars[43]); if(ret) vars[5] = ret; } catch(e) { }
try { vars[36].foo = vars[86]; } catch(e) { }
try { var ret = JSON.stringify(vars[11]); if(ret) vars[23] = ret; } catch(e) { }
try { vars[94].toString = vars[45]; } catch(e) { }
try { vars[78] = {}; } catch(e) { }
try { var ret = RegExp.lastIndex; if(ret) vars[48] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[42], vars[83]); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[21], vars[82], vars[64]); if(ret) vars[93] = ret; } catch(e) { }
try { var ret = Date.prototype.getTimezoneOffset.call(vars[74]); if(ret) vars[66] = ret; } catch(e) { }
try { vars[86].options = true; } catch(e) { }
try { var ret = Boolean.prototype.toJSON.call(vars[95]); if(ret) vars[76] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[77], vars[93], 3, false, 4); if(ret) vars[58] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[40], arg2, vars[65], arg5, vars[50]); if(ret) vars[46] = ret; } catch(e) { }
try { var ret = String.prototype.charAt.call(vars[26], true); if(ret) vars[26] = ret; } catch(e) { }
try { vars[80] = {}; } catch(e) { }
try { vars[48].toJSON = f7; } catch(e) { }
try { var ret = vars[34].constructor; if(ret) vars[5] = ret; } catch(e) { }
try { var ret = Error(); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = vars[78][4294967295]; if(ret) vars[71] = ret; } catch(e) { }
try { var ret = Date.prototype.valueOf.call(vars[87]); if(ret) vars[78] = ret; } catch(e) { }
try { var ret = vars[67].prototype; if(ret) vars[73] = ret; } catch(e) { }
try { vars[64] = {}; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[27], vars[86]); if(ret) vars[71] = ret; } catch(e) { }
try { var ret = vars[72].foo; if(ret) vars[39] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[82], vars[59], vars[78]); } catch(e) { }
try { var ret = decodeURIComponent(arg1); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = RuntimeObject(); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = Boolean.prototype.toString.call(vars[31]); if(ret) vars[79] = ret; } catch(e) { }
try { var ret = RegExp.$8; if(ret) vars[78] = ret; } catch(e) { }
try { vars[54].toArray = f0; } catch(e) { }
try { var ret = new Array('a'); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = Array('a', arg1, vars[37]); if(ret) vars[13] = ret; } catch(e) { }
try { var ret = unescape(0); if(ret) vars[35] = ret; } catch(e) { }
try { var ret = VBArray.prototype.ubound.call(vars[45], vars[79]); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = String.prototype.search.call(vars[3], vars[63]); if(ret) vars[65] = ret; } catch(e) { }
try { var ret = JSON.stringify(Infinity); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = Array(vars[94]); if(ret) vars[46] = ret; } catch(e) { }
try { var ret = vars[75][100]; if(ret) vars[65] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[42], vars[55]); if(ret) vars[32] = ret; } catch(e) { }
try { vars[44] = new Array(-1); } catch(e) { }
try { var ret = LuLow(vars[56]); if(ret) vars[82] = ret; } catch(e) { }
try { var ret = LuHigh('a'); if(ret) vars[83] = ret; } catch(e) { }
try { var ret = vars[92].callee; if(ret) vars[36] = ret; } catch(e) { }
try { var ret = new Enumerator(false); if(ret) vars[61] = ret; } catch(e) { }
try { vars[61].arguments = vars[15]; } catch(e) { }
try { RegExp.input = vars[45]; } catch(e) { }
try { var ret = RegExp.$6; if(ret) vars[76] = ret; } catch(e) { }
try { var ret = VBArray.prototype.ubound.call(vars[65], 0); if(ret) vars[97] = ret; } catch(e) { }
try { var ret = new RegExp(Array(4097).join(String.fromCharCode(95, 49)), 'mg'); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleLowerCase.call(vars[1]); if(ret) vars[10] = ret; } catch(e) { }
try { vars[72].options = false; } catch(e) { }
try { vars[62].toJSON = vars[56]; } catch(e) { }
try { vars[94] = this; } catch(e) { }
try { var ret = String.prototype.charAt.call(vars[57], vars[25]); if(ret) vars[66] = ret; } catch(e) { }
try { vars[78].toArray = f6; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[60], vars[55]); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = EncodeURI(vars[87]); if(ret) vars[52] = ret; } catch(e) { }
try { var ret = Date.prototype.getTimezoneOffset.call(vars[88]); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = Array(); if(ret) vars[12] = ret; } catch(e) { }
try { var ret = Boolean(); if(ret) vars[55] = ret; } catch(e) { }
try { vars[94].toJSON = f4; } catch(e) { }
try { var ret = RegExp(Array(1025).join(String.fromCharCode(15)) + Array(17).join(String.fromCharCode(127, 52, 36)) + Array(257).join(String.fromCharCode(80)), 'gmi'); if(ret) vars[4] = ret; } catch(e) { }
try { var ret = vars[77].toFixed; if(ret) vars[0] = ret; } catch(e) { }
try { var ret = Array(vars[29]); if(ret) vars[79] = ret; } catch(e) { }
try { var ret = vars[92].toPrecision; if(ret) vars[49] = ret; } catch(e) { }
try { var ret = parseInt(vars[92]); if(ret) vars[17] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[33], 'a'); if(ret) vars[64] = ret; } catch(e) { }
try { RegExp.input = arg7; } catch(e) { }
try { var ret = ActiveXObject(vars[90]); if(ret) vars[56] = ret; } catch(e) { }
try { vars[3].toLocaleString = vars[59]; } catch(e) { }
try { var ret = vars[75].toLocaleString; if(ret) vars[85] = ret; } catch(e) { }
try { vars[96] = Object; } catch(e) { }
try { var ret = vars[95].arguments; if(ret) vars[88] = ret; } catch(e) { }
try { vars[91].toLocaleString = true; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[35], vars[44], arg4); if(ret) vars[88] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[11]); if(ret) vars[93] = ret; } catch(e) { }
try { var ret = VBArray(); if(ret) vars[58] = ret; } catch(e) { }
//endjs
CollectGarbage();
return vars[55];

}

function f6(arg1, arg2, arg3) {
runcount.f6++; if(runcount.f6>2) return;
//alert(6);
//beginjs
try { var ret = vars[95].callee; if(ret) vars[55] = ret; } catch(e) { }
try { var ret = new Date(vars[12]); if(ret) vars[82] = ret; } catch(e) { }
try { var ret = new RangeError(2, vars[97], arg2); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[94], vars[76], Infinity); if(ret) vars[2] = ret; } catch(e) { }
try { vars[67] = Array; } catch(e) { }
try { var ret = []; if(ret) vars[51] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[79], false, f7); if(ret) vars[5] = ret; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[83], vars[48], vars[19], false); if(ret) vars[53] = ret; } catch(e) { }
try { var ret = GetObject(vars[54]); if(ret) vars[26] = ret; } catch(e) { }
try { vars[74].toString = f8; } catch(e) { }
try { var ret = Object.defineProperty(vars[28], 'arguments', { get: f8, value: vars[66], configurable: vars[98] }); if(ret) vars[56] = ret; } catch(e) { }
try { vars[82][1] = vars[3]; } catch(e) { }
try { vars[80] = {}; } catch(e) { }
try { vars[16].input = vars[38]; } catch(e) { }
try { var ret = new RegExp(); if(ret) vars[6] = ret; } catch(e) { }
try { var ret = RegExp(Array(65537).join(String.fromCharCode(25, 107, 118)) + Array(65537).join(String.fromCharCode(117, 107, 72))); if(ret) vars[34] = ret; } catch(e) { }
try { var ret = vars[84].options; if(ret) vars[75] = ret; } catch(e) { }
try { var ret = Array.prototype.toString.call(vars[54]); if(ret) vars[45] = ret; } catch(e) { }
try { var ret = RegExp(); if(ret) vars[12] = ret; } catch(e) { }
try { var ret = vars[32].global; if(ret) vars[55] = ret; } catch(e) { }
try { var ret = unescape(vars[54]); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = Boolean.prototype.toJSON.call(vars[70]); if(ret) vars[63] = ret; } catch(e) { }
try { vars[7].foo = vars[15]; } catch(e) { }
try { var ret = String.prototype.localeCompare.call(vars[23], vars[27]); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.moveNext.call(vars[16]); if(ret) vars[32] = ret; } catch(e) { }
try { var ret = new Enumerator(); if(ret) vars[32] = ret; } catch(e) { }
try { var ret = new URIError(vars[39], vars[25], vars[5]); if(ret) vars[55] = ret; } catch(e) { }
try { var ret = new Array(Infinity); if(ret) vars[74] = ret; } catch(e) { }
try { var ret = Date.prototype.getFullYear.call(vars[13]); if(ret) vars[2] = ret; } catch(e) { }
try { vars[78].toJSON = vars[4]; } catch(e) { }
try { vars[77] = Function; } catch(e) { }
try { var ret = Array(); if(ret) vars[13] = ret; } catch(e) { }
try { var ret = Function.prototype.toString.call(vars[99]); if(ret) vars[52] = ret; } catch(e) { }
try { var ret = Array.prototype.toString.call(vars[49]); if(ret) vars[24] = ret; } catch(e) { }
try { var ret = String.prototype.strike.call(vars[33], vars[57]); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = RegExp.index; if(ret) vars[77] = ret; } catch(e) { }
try { vars[25].toLocaleString = f9; } catch(e) { }
try { var ret = Date.prototype.toJSON.call(vars[61]); if(ret) vars[13] = ret; } catch(e) { }
try { var ret = ReferenceError(vars[68], vars[51], vars[17]); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = vars[11].toJSON; if(ret) vars[81] = ret; } catch(e) { }
try { vars[18].toFixed = vars[36]; } catch(e) { }
try { var ret = String.prototype.toLocaleLowerCase.call(vars[49]); if(ret) vars[82] = ret; } catch(e) { }
try { var ret = new VBArray(vars[21]); if(ret) vars[71] = ret; } catch(e) { }
try { var ret = VBArray.prototype.dimensions.call(vars[4]); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = RegExp(); if(ret) vars[36] = ret; } catch(e) { }
try { var ret = new vars[6].apply(vars[25], 1000000); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = String.prototype.search.call(vars[92], vars[41]); if(ret) vars[59] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[46], vars[68]); if(ret) vars[56] = ret; } catch(e) { }
try { var ret = LuHigh(vars[72]); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = vars[19][3]; if(ret) vars[8] = ret; } catch(e) { }
try { var ret = RegExp.leftContext; if(ret) vars[70] = ret; } catch(e) { }
try { var ret = RegExp(); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = RegExp(Array(17).join(String.fromCharCode(45)) + Array(4097).join(String.fromCharCode(65, 121, 25)) + Array(1025).join(String.fromCharCode(11, 31)), 'img'); if(ret) vars[75] = ret; } catch(e) { }
try { vars[53].global = arg9; } catch(e) { }
try { vars[78] = Array(257).join(String.fromCharCode(117, 75)); } catch(e) { }
try { var ret = VBArray.prototype.ubound.call(vars[47], vars[95]); if(ret) vars[67] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleUpperCase.call(vars[55]); if(ret) vars[34] = ret; } catch(e) { }
try { vars[67].toPrecision = Infinity; } catch(e) { }
try { var ret = Date.prototype.toJSON.call(vars[82]); if(ret) vars[29] = ret; } catch(e) { }
try { var ret = Boolean.prototype.toString.call(vars[66]); if(ret) vars[15] = ret; } catch(e) { }
try { var ret = vars[56].toPrecision; if(ret) vars[0] = ret; } catch(e) { }
try { vars[29].toArray = f2; } catch(e) { }
try { var ret = new Enumerator(true); if(ret) vars[66] = ret; } catch(e) { }
try { var ret = vars[95][1000000]; if(ret) vars[29] = ret; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[22], vars[45], vars[59]); if(ret) vars[23] = ret; } catch(e) { }
try { var ret = Date.prototype.toJSON.call(vars[5]); if(ret) vars[51] = ret; } catch(e) { }
try { var ret = RegExp.$5; if(ret) vars[73] = ret; } catch(e) { }
try { var ret = vars[31].options; if(ret) vars[70] = ret; } catch(e) { }
try { vars[20].toPrecision = arg9; } catch(e) { }
try { vars[37].constructor = false; } catch(e) { }
try { var ret = String.prototype.charAt.call(vars[24], 'a'); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = Array(arg1, arg6, vars[43]); if(ret) vars[11] = ret; } catch(e) { }
try { vars[64] = f6; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[20], 4); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = encodeURIComponent(true); if(ret) vars[6] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleLowerCase.call(vars[7]); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = new vars[78].apply(vars[10], Infinity); if(ret) vars[12] = ret; } catch(e) { }
try { vars[16] = Function; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[12], vars[43], 'a', vars[23], Infinity); if(ret) vars[67] = ret; } catch(e) { }
try { var ret = vars[22].foo; if(ret) vars[79] = ret; } catch(e) { }
try { vars[26] = document.createElement("foo"); } catch(e) { }
try { var ret = String.prototype.substr.call(vars[90], vars[73]); if(ret) vars[46] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[89], Array(4097).join(String.fromCharCode(16, 90, 99)) + Array(65).join(String.fromCharCode(0, 74, 54)) + Array(4097).join(String.fromCharCode(108, 108)), 'mgi'); } catch(e) { }
try { var ret = vars[3].toFixed; if(ret) vars[75] = ret; } catch(e) { }
try { vars[13] = {}; } catch(e) { }
try { var ret = new Array(); if(ret) vars[32] = ret; } catch(e) { }
try { var ret = JSON.parse(vars[19]); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = GetObject(arg7, 'a'); if(ret) vars[45] = ret; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[30], vars[92], vars[87]); if(ret) vars[96] = ret; } catch(e) { }
try { vars[26] = new Array(4); } catch(e) { }
try { var ret = vars[85].options; if(ret) vars[57] = ret; } catch(e) { }
try { var ret = vars[44][1000000]; if(ret) vars[50] = ret; } catch(e) { }
try { var ret = ReferenceError(vars[22], vars[42], vars[3]); if(ret) vars[12] = ret; } catch(e) { }
try { vars[85].toJSON = 'a'; } catch(e) { }
try { var ret = new VBArray(); if(ret) vars[29] = ret; } catch(e) { }
try { var ret = arg1; if(ret) vars[35] = ret; } catch(e) { }
try { var ret = Date.prototype.getTimezoneOffset.call(vars[98]); if(ret) vars[66] = ret; } catch(e) { }
try { var ret = parseFloat(vars[18]); if(ret) vars[94] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[58], vars[76]); if(ret) vars[50] = ret; } catch(e) { }
try { vars[94][1000] = 3; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[35], 0, vars[42]); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = Date(true); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = vars[12].lastIndex; if(ret) vars[68] = ret; } catch(e) { }
try { RegExp.input = vars[21]; } catch(e) { }
try { var ret = VBArray.prototype.dimensions.call(vars[76]); if(ret) vars[62] = ret; } catch(e) { }
try { vars[92] = RegExp; } catch(e) { }
try { var ret = Error(10, vars[82], false); if(ret) vars[73] = ret; } catch(e) { }
try { vars[18][1000000] = Infinity; } catch(e) { }
try { vars[49].valueOf = f5; } catch(e) { }
try { var ret = new RuntimeObject(); if(ret) vars[35] = ret; } catch(e) { }
try { var ret = RangeError(2, true, vars[59]); if(ret) vars[67] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[17], vars[70], 100); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[10], vars[14], f0); if(ret) vars[40] = ret; } catch(e) { }
try { vars[55] = new Array(3); } catch(e) { }
try { vars[1].valueOf = f7; } catch(e) { }
try { var ret = Array.prototype.reverse.call(vars[17]); if(ret) vars[20] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[23], vars[44]); if(ret) vars[41] = ret; } catch(e) { }
try { var ret = RegExp.$2; if(ret) vars[83] = ret; } catch(e) { }
try { var ret = String.prototype.toLowerCase.call(vars[62]); if(ret) vars[15] = ret; } catch(e) { }
try { vars[72] = JSON; } catch(e) { }
try { var ret = String.prototype.split.call(vars[4], vars[41]); if(ret) vars[64] = ret; } catch(e) { }
try { vars[33] = Error; } catch(e) { }
try { var ret = vars[82].caller; if(ret) vars[51] = ret; } catch(e) { }
try { vars[14].global = false; } catch(e) { }
try { vars[47] = Array(257).join(String.fromCharCode(22)); } catch(e) { }
try { vars[74] = new Array(10); } catch(e) { }
try { var ret = Date.prototype.getFullYear.call(vars[76]); if(ret) vars[85] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[70], vars[75], 536870912); } catch(e) { }
try { var ret = Date.prototype.toJSON.call(vars[44]); if(ret) vars[79] = ret; } catch(e) { }
try { var ret = new RegExp(); if(ret) vars[71] = ret; } catch(e) { }
try { var ret = VBArray.prototype.lbound.call(vars[4], vars[76]); if(ret) vars[15] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[59]); if(ret) vars[63] = ret; } catch(e) { }
try { var ret = Date(); if(ret) vars[28] = ret; } catch(e) { }
try { var ret = JSON.parse(arg9); if(ret) vars[60] = ret; } catch(e) { }
try { vars[61].length = vars[11]; } catch(e) { }
try { vars[4].toFixed = arg3; } catch(e) { }
try { vars[84].toFixed = vars[83]; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[43], f4); if(ret) vars[79] = ret; } catch(e) { }
try { var ret = LuLow(vars[61]); if(ret) vars[32] = ret; } catch(e) { }
try { var ret = new RegExp(Array(1025).join(String.fromCharCode(127, 68, 74)) + Array(65537).join(String.fromCharCode(107, 26)) + Array(65).join(String.fromCharCode(127)), 'g'); if(ret) vars[94] = ret; } catch(e) { }
try { var ret = Array(vars[37]); if(ret) vars[51] = ret; } catch(e) { }
try { eval(Array(4097).join(String.fromCharCode(118, 25)) + Array(257).join(String.fromCharCode(28)) + Array(257).join(String.fromCharCode(41))); } catch(e) { }
try { vars[38][100] = vars[64]; } catch(e) { }
try { vars[73] = new Array(-1); } catch(e) { }
try { var ret = VBArray.prototype.dimensions.call(vars[81]); if(ret) vars[20] = ret; } catch(e) { }
try { var ret = encodeURIComponent(vars[0]); if(ret) vars[29] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[91], vars[88], f7); if(ret) vars[17] = ret; } catch(e) { }
try { vars[49] = document.createElement("foo"); Object.defineProperty(vars[49], "1", {get: f7, set: f4} ); } catch(e) { }
try { var ret = vars[19][536870911]; if(ret) vars[96] = ret; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[16], arg3); if(ret) vars[75] = ret; } catch(e) { }
try { var ret = vars[99].length; if(ret) vars[72] = ret; } catch(e) { }
try { var ret = RegExp.input; if(ret) vars[81] = ret; } catch(e) { }
try { var ret = VBArray(); if(ret) vars[51] = ret; } catch(e) { }
try { var ret = new Date(); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = ReferenceError(3, 'a', vars[97]); if(ret) vars[34] = ret; } catch(e) { }
try { var ret = String.prototype.charAt.call(vars[65], vars[70]); if(ret) vars[25] = ret; } catch(e) { }
try { var ret = VBArray(); if(ret) vars[38] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[20], vars[69]); if(ret) vars[39] = ret; } catch(e) { }
try { vars[96] = {}; } catch(e) { }
try { var ret = vars[36].call(vars[50], -1, vars[8], vars[26], vars[83], arg5); if(ret) vars[26] = ret; } catch(e) { }
try { var ret = RegExp.input; if(ret) vars[62] = ret; } catch(e) { }
try { vars[56].toFixed = vars[19]; } catch(e) { }
try { var ret = RegExp.$3; if(ret) vars[45] = ret; } catch(e) { }
try { vars[28].toPrecision = 'a'; } catch(e) { }
try { var ret = escape(vars[9]); if(ret) vars[23] = ret; } catch(e) { }
try { var ret = Date(vars[2], vars[55], vars[84], 4, false, true, vars[94]); if(ret) vars[69] = ret; } catch(e) { }
try { var ret = vars[41].constructor; if(ret) vars[48] = ret; } catch(e) { }
try { var ret = Array.prototype.shift.call(vars[40]); if(ret) vars[24] = ret; } catch(e) { }
try { var ret = Date.prototype.valueOf.call(vars[30]); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[47], vars[55], vars[69], vars[32], 5); if(ret) vars[42] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[38], vars[27]); if(ret) vars[65] = ret; } catch(e) { }
try { var ret = Array(); if(ret) vars[79] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[71], Infinity, f8); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = new vars[25].call(vars[32], true, Infinity, vars[66], vars[35], vars[75]); if(ret) vars[53] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[70], true); } catch(e) { }
try { var ret = URIError(Infinity, arg5, vars[91]); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = RegExp.$7; if(ret) vars[70] = ret; } catch(e) { }
try { var ret = escape(vars[45]); if(ret) vars[61] = ret; } catch(e) { }
try { var ret = vars[6](Infinity, vars[26], arg2, Infinity, false); if(ret) vars[46] = ret; } catch(e) { }
try { var ret = new ActiveXObject(vars[97], vars[82]); if(ret) vars[57] = ret; } catch(e) { }
try { vars[90][2] = arg1; } catch(e) { }
try { var ret = vars[51].caller; if(ret) vars[73] = ret; } catch(e) { }
try { var ret = RegExp.$1; if(ret) vars[69] = ret; } catch(e) { }
try { var ret = vars[80].toExponential; if(ret) vars[24] = ret; } catch(e) { }
try { var ret = vars[80].toJSON; if(ret) vars[30] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[97], false, vars[28]); if(ret) vars[20] = ret; } catch(e) { }
try { var ret = Debug.write(true, vars[11], 5); if(ret) vars[52] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[56], vars[83], Infinity); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = Array.prototype.unshift.call(vars[32], vars[73], true); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = Date(); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = Debug.write(vars[63]); if(ret) vars[85] = ret; } catch(e) { }
try { var ret = new Enumerator(Infinity); if(ret) vars[38] = ret; } catch(e) { }
try { vars[87] = new Array(4); } catch(e) { }
try { RegExp.input = vars[65]; } catch(e) { }
try { vars[81].toString = f4; } catch(e) { }
try { var ret = EvalError('a', arg9, vars[57]); if(ret) vars[99] = ret; } catch(e) { }
try { var ret = URIError(true, arg8, 'a'); if(ret) vars[31] = ret; } catch(e) { }
try { vars[75].toJSON = f9; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[88]); if(ret) vars[46] = ret; } catch(e) { }
try { vars[30] = Array; } catch(e) { }
try { var ret = Array.prototype.unshift.call(vars[14], Infinity, false); if(ret) vars[46] = ret; } catch(e) { }
try { vars[26] = f5; } catch(e) { }
try { var ret = RegExp.input; if(ret) vars[24] = ret; } catch(e) { }
try { var ret = new Boolean(); if(ret) vars[62] = ret; } catch(e) { }
try { vars[90].toExponential = f0; } catch(e) { }
try { vars[3].toString = vars[57]; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[98], vars[90]); if(ret) vars[88] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[45], Array(65537).join(String.fromCharCode(101, 19)) + Array(4097).join(String.fromCharCode(32, 6, 89)), 'i'); } catch(e) { }
try { vars[57].toFixed = vars[14]; } catch(e) { }
try { var ret = Date.prototype.getFullYear.call(vars[1]); if(ret) vars[83] = ret; } catch(e) { }
try { var ret = RegExp.input; if(ret) vars[29] = ret; } catch(e) { }
try { var ret = vars[33].input; if(ret) vars[55] = ret; } catch(e) { }
try { vars[72] = Function; } catch(e) { }
try { var ret = JSON.stringify(vars[80]); if(ret) vars[69] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[90], Array(1025).join(String.fromCharCode(73)), 'g'); } catch(e) { }
try { var ret = vars[69].call(vars[1], 1000000, false, false); if(ret) vars[25] = ret; } catch(e) { }
try { var ret = Date(vars[92]); if(ret) vars[41] = ret; } catch(e) { }
try { var ret = vars[75].source; if(ret) vars[27] = ret; } catch(e) { }
try { var ret = RegExp.$2; if(ret) vars[55] = ret; } catch(e) { }
try { var ret = String.prototype.anchor.call(vars[65], vars[29]); if(ret) vars[97] = ret; } catch(e) { }
try { var ret = new RegExp(); if(ret) vars[80] = ret; } catch(e) { }
try { var ret = String.prototype.search.call(vars[37], vars[14]); if(ret) vars[27] = ret; } catch(e) { }
try { vars[72].valueOf = 'a'; } catch(e) { }
try { var ret = RegExp(); if(ret) vars[65] = ret; } catch(e) { }
try { var ret = vars[69].foo; if(ret) vars[90] = ret; } catch(e) { }
try { var ret = Array.prototype.pop.call(vars[36]); if(ret) vars[37] = ret; } catch(e) { }
try { vars[21] = document.createElement("foo"); } catch(e) { }
try { var ret = String.prototype.substr.call(vars[7], vars[71], vars[99]); if(ret) vars[86] = ret; } catch(e) { }
try { vars[60] = Boolean; } catch(e) { }
try { var ret = String.prototype.toLocaleUpperCase.call(vars[74]); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = Array.prototype.reverse.call(vars[10]); if(ret) vars[76] = ret; } catch(e) { }
try { var ret = vars[29].source; if(ret) vars[4] = ret; } catch(e) { }
try { var ret = Array(257).join(String.fromCharCode(17, 67, 100)); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[38], false); if(ret) vars[83] = ret; } catch(e) { }
try { var ret = Date(); if(ret) vars[6] = ret; } catch(e) { }
try { vars[73].toFixed = true; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[6], 1000); if(ret) vars[21] = ret; } catch(e) { }
try { vars[34][1] = vars[54]; } catch(e) { }
try { var ret = Array(Infinity); if(ret) vars[44] = ret; } catch(e) { }
try { var ret = Date.prototype.getMilliseconds.call(vars[43]); if(ret) vars[35] = ret; } catch(e) { }
try { var ret = VBArray.prototype.lbound.call(vars[41], arg1); if(ret) vars[15] = ret; } catch(e) { }
try { vars[32].options = 'a'; } catch(e) { }
try { var ret = String.prototype.search.call(vars[14], vars[45]); if(ret) vars[93] = ret; } catch(e) { }
try { vars[89] = document.createElement("foo"); Object.defineProperty(vars[89], "100", {get: f6, set: f6} ); } catch(e) { }
try { var ret = new Error(vars[46], true, arg2); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = vars[27].input; if(ret) vars[92] = ret; } catch(e) { }
try { vars[42].callee = true; } catch(e) { }
try { var ret = []; if(ret) vars[85] = ret; } catch(e) { }
try { vars[28].toJSON = 'a'; } catch(e) { }
try { var ret = GetObject(vars[46]); if(ret) vars[56] = ret; } catch(e) { }
try { var ret = new RegExp(Array(1025).join(String.fromCharCode(5)) + Array(4097).join(String.fromCharCode(81))); if(ret) vars[11] = ret; } catch(e) { }
try { var ret = vars[89](vars[28], true, vars[57], vars[98], vars[80]); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[57], vars[57]); if(ret) vars[13] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleUpperCase.call(vars[68]); if(ret) vars[20] = ret; } catch(e) { }
try { var ret = new Date(vars[69], Infinity, vars[14], vars[27], vars[58], vars[44], vars[2]); if(ret) vars[21] = ret; } catch(e) { }
try { vars[35].options = vars[87]; } catch(e) { }
try { vars[64] = document.createElement("foo"); Object.defineProperty(vars[64], "0", {get: f1, set: f5} ); } catch(e) { }
try { var ret = Date.prototype.getFullYear.call(vars[66]); if(ret) vars[52] = ret; } catch(e) { }
try { var ret = vars[21].length; if(ret) vars[15] = ret; } catch(e) { }
try { var ret = Object.defineProperty(vars[59], '2', { enumerable: vars[5] }); if(ret) vars[29] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[21], Array(65).join(String.fromCharCode(99)) + Array(65).join(String.fromCharCode(38, 4)) + Array(4097).join(String.fromCharCode(45, 51, 5)), 'g'); } catch(e) { }
try { var ret = vars[23].call(vars[36], arg4, arg6, vars[82], vars[53], 0); if(ret) vars[15] = ret; } catch(e) { }
try { vars[38].toString = vars[3]; } catch(e) { }
try { var ret = new Boolean(); if(ret) vars[31] = ret; } catch(e) { }
try { vars[12].foo = vars[2]; } catch(e) { }
try { var ret = new URIError(vars[3], false, 'a'); if(ret) vars[20] = ret; } catch(e) { }
try { vars[69] = Date; } catch(e) { }
try { var ret = Array(vars[99], Infinity, false); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = ActiveXObject(vars[10], vars[69]); if(ret) vars[64] = ret; } catch(e) { }
try { var ret = vars[94].toLocaleString; if(ret) vars[48] = ret; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[81], vars[28], vars[11], Infinity, true); if(ret) vars[26] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[61], -1, f3); if(ret) vars[55] = ret; } catch(e) { }
try { eval(Array(17).join(String.fromCharCode(20, 67, 64))); } catch(e) { }
try { var ret = vars[25].input; if(ret) vars[87] = ret; } catch(e) { }
try { var ret = []; if(ret) vars[78] = ret; } catch(e) { }
try { var ret = RegExp.rightContext; if(ret) vars[87] = ret; } catch(e) { }
try { vars[38] = {}; } catch(e) { }
try { function f_inner_97() { return f7(); } vars[92] = f_inner_97; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[19], true); if(ret) vars[33] = ret; } catch(e) { }
try { vars[50].arguments = vars[91]; } catch(e) { }
try { var ret = vars[72][5]; if(ret) vars[32] = ret; } catch(e) { }
try { var ret = RegExp.$5; if(ret) vars[23] = ret; } catch(e) { }
try { var ret = vars[64].call(vars[75]); if(ret) vars[42] = ret; } catch(e) { }
try { var ret = Error.prototype.toString.call(vars[6]); if(ret) vars[59] = ret; } catch(e) { }
try { vars[0].lastIndex = Infinity; } catch(e) { }
try { var ret = decodeURIComponent(100); if(ret) vars[34] = ret; } catch(e) { }
try { var ret = vars[34].appy(vars[33], vars[75]); if(ret) vars[17] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[28], vars[97], vars[69]); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = vars[50].caller; if(ret) vars[54] = ret; } catch(e) { }
try { var ret = vars[30].lastIndex; if(ret) vars[3] = ret; } catch(e) { }
try { var ret = vars[56].source; if(ret) vars[30] = ret; } catch(e) { }
try { vars[58].toArray = f7; } catch(e) { }
try { vars[69] = {}; } catch(e) { }
try { vars[88].length = Infinity; } catch(e) { }
try { var ret = RegExp.$5; if(ret) vars[99] = ret; } catch(e) { }
try { var ret = vars[30].toFixed; if(ret) vars[28] = ret; } catch(e) { }
try { var ret = Array.prototype.reverse.call(vars[32]); if(ret) vars[44] = ret; } catch(e) { }
try { RegExp.input = vars[60]; } catch(e) { }
try { var ret = new VBArray(vars[96]); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = vars[85].source; if(ret) vars[23] = ret; } catch(e) { }
try { var ret = Date(vars[96]); if(ret) vars[31] = ret; } catch(e) { }
try { vars[17].arguments = 'a'; } catch(e) { }
try { var ret = vars[44].foo; if(ret) vars[96] = ret; } catch(e) { }
try { vars[0].toExponential = vars[37]; } catch(e) { }
try { vars[82].toLocaleString = f3; } catch(e) { }
try { var ret = vars[26].call(vars[30]); if(ret) vars[10] = ret; } catch(e) { }
try { vars[12].global = vars[68]; } catch(e) { }
try { var ret = vars[36].callee; if(ret) vars[5] = ret; } catch(e) { }
try { vars[95] = Array(65537).join(String.fromCharCode(106, 91, 11)) + Array(17).join(String.fromCharCode(7, 75)) + Array(4097).join(String.fromCharCode(66, 68)); } catch(e) { }
try { var ret = isFinite(vars[66]); if(ret) vars[38] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[85]); if(ret) vars[29] = ret; } catch(e) { }
try { var ret = String.FromCharCode(arg1, 'a', vars[95]); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = vars[88].arguments; if(ret) vars[71] = ret; } catch(e) { }
try { var ret = ActiveXObject(false, arg1); if(ret) vars[83] = ret; } catch(e) { }
try { vars[25].global = Infinity; } catch(e) { }
try { var ret = VBArray.prototype.lbound.call(vars[71], vars[76]); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = DblFromLus(vars[97]); if(ret) vars[28] = ret; } catch(e) { }
try { var ret = new Error(); if(ret) vars[45] = ret; } catch(e) { }
try { var ret = Date.prototype.getTimezoneOffset.call(vars[75]); if(ret) vars[93] = ret; } catch(e) { }
try { var ret = RegExp.$9; if(ret) vars[14] = ret; } catch(e) { }
try { var ret = vars[89].call(vars[79], arg7, vars[51], vars[17], false, vars[16]); if(ret) vars[64] = ret; } catch(e) { }
try { var ret = vars[57].apply(vars[79], vars[9]); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = Error(vars[78], vars[85], vars[74]); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = Enumerator(vars[26]); if(ret) vars[65] = ret; } catch(e) { }
try { vars[21] = JSON; } catch(e) { }
try { var ret = DblFromLus(vars[45]); if(ret) vars[36] = ret; } catch(e) { }
try { vars[28] = new Array(0); } catch(e) { }
try { var ret = String.prototype.substring.call(vars[7], vars[26]); if(ret) vars[46] = ret; } catch(e) { }
try { vars[21].toPrecision = false; } catch(e) { }
try { var ret = vars[93].length; if(ret) vars[4] = ret; } catch(e) { }
try { vars[93] = {}; } catch(e) { }
try { var ret = vars[26].apply(vars[26], vars[12]); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = arguments; if(ret) vars[0] = ret; } catch(e) { }
try { vars[37] = Function; } catch(e) { }
try { var ret = isFinite(1); if(ret) vars[55] = ret; } catch(e) { }
try { var ret = String.prototype.charAt.call(vars[53], vars[22]); if(ret) vars[8] = ret; } catch(e) { }
try { vars[3].constructor = vars[51]; } catch(e) { }
try { var ret = new Array(Infinity); if(ret) vars[16] = ret; } catch(e) { }
try { vars[10].toLocaleString = vars[74]; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[37], false, vars[43]); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = vars[64].toFixed; if(ret) vars[51] = ret; } catch(e) { }
try { var ret = vars[88].arguments; if(ret) vars[75] = ret; } catch(e) { }
try { var ret = String.prototype.match.call(vars[61], vars[47]); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = RangeError(arg4, arg7, vars[53]); if(ret) vars[11] = ret; } catch(e) { }
try { vars[39].prototype = vars[43]; } catch(e) { }
try { var ret = Array.prototype.shift.call(vars[78]); if(ret) vars[11] = ret; } catch(e) { }
try { var ret = Array(vars[81]); if(ret) vars[45] = ret; } catch(e) { }
try { var ret = new RegExp(); if(ret) vars[81] = ret; } catch(e) { }
try { vars[83].input = vars[82]; } catch(e) { }
try { vars[66] = RegExp; } catch(e) { }
try { vars[78].valueOf = f8; } catch(e) { }
try { var ret = String.prototype.strike.call(vars[44], arg7); if(ret) vars[36] = ret; } catch(e) { }
try { var ret = vars[51].input; if(ret) vars[0] = ret; } catch(e) { }
try { var ret = vars[8].call(vars[96], arg3, 'a', vars[26]); if(ret) vars[84] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[60], 5); if(ret) vars[67] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleTimeString.call(vars[57]); if(ret) vars[93] = ret; } catch(e) { }
try { var ret = JSON.stringify('a'); if(ret) vars[53] = ret; } catch(e) { }
try { var ret = new vars[73](vars[98], arg2, arg3, vars[63], vars[26]); if(ret) vars[56] = ret; } catch(e) { }
try { vars[21] = Enumerator; } catch(e) { }
try { RegExp.prototype.test.call(vars[96], vars[60]); } catch(e) { }
try { vars[78] = document.createElement("foo"); } catch(e) { }
try { var ret = Array.prototype.join.call(vars[63], vars[8]); if(ret) vars[61] = ret; } catch(e) { }
try { vars[51].caller = Infinity; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[90], vars[19], vars[32]); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = String.prototype.search.call(vars[62], vars[9]); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.atEnd.call(vars[22]); if(ret) vars[42] = ret; } catch(e) { }
try { vars[7] = Boolean; } catch(e) { }
try { vars[35].length = vars[96]; } catch(e) { }
try { var ret = RegExp(Array(257).join(String.fromCharCode(107, 69, 63)), 'm'); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = Error(true, 'a', false); if(ret) vars[88] = ret; } catch(e) { }
try { vars[37] = {}; } catch(e) { }
try { var ret = new vars[95].call(vars[35], 2, true, 'a', vars[12], vars[6]); if(ret) vars[66] = ret; } catch(e) { }
try { vars[26].toLocaleString = vars[49]; } catch(e) { }
try { var ret = Date.prototype.getTimezoneOffset.call(vars[20]); if(ret) vars[53] = ret; } catch(e) { }
try { var ret = Debug.writeln(true); if(ret) vars[2] = ret; } catch(e) { }
try { var ret = Array.prototype.shift.call(vars[28]); if(ret) vars[73] = ret; } catch(e) { }
try { var ret = vars[61].call(vars[24], Infinity, vars[12], vars[30], vars[95], 'a'); if(ret) vars[62] = ret; } catch(e) { }
try { var ret = String.FromCharCode(arg6, true, 4); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = RegExp.lastMatch; if(ret) vars[45] = ret; } catch(e) { }
try { vars[28].length = vars[77]; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[32], arg5, false, vars[83]); if(ret) vars[83] = ret; } catch(e) { }
try { var ret = ActiveXObject(Infinity); if(ret) vars[40] = ret; } catch(e) { }
try { var ret = ReferenceError(vars[25], vars[90], vars[23]); if(ret) vars[51] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[66], vars[34]); } catch(e) { }
try { var ret = VBArray.prototype.toArray.call(vars[74]); if(ret) vars[26] = ret; } catch(e) { }
try { var ret = VBArray.prototype.dimensions.call(vars[85]); if(ret) vars[24] = ret; } catch(e) { }
try { var ret = new RegExp(Array(257).join(String.fromCharCode(68, 94, 76)) + Array(17).join(String.fromCharCode(16, 61)), 'g'); if(ret) vars[22] = ret; } catch(e) { }
try { var ret = vars[94].source; if(ret) vars[91] = ret; } catch(e) { }
try { var ret = RegExp.$9; if(ret) vars[99] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[34]); if(ret) vars[4] = ret; } catch(e) { }
try { var ret = URIError(1000, arg7, arg7); if(ret) vars[62] = ret; } catch(e) { }
try { vars[65] = Array(257).join(String.fromCharCode(22, 113, 61)) + Array(65537).join(String.fromCharCode(100, 68)); } catch(e) { }
try { var ret = new RegExp(Array(257).join(String.fromCharCode(23)) + Array(4097).join(String.fromCharCode(39, 50)) + Array(65).join(String.fromCharCode(113, 57)), 'm'); if(ret) vars[80] = ret; } catch(e) { }
try { var ret = Array.prototype.shift.call(vars[76]); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = RegExp.$4; if(ret) vars[96] = ret; } catch(e) { }
try { var ret = String.prototype.charAt.call(vars[94], false); if(ret) vars[88] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[36], Infinity); if(ret) vars[36] = ret; } catch(e) { }
try { var ret = decodeURI(vars[40]); if(ret) vars[29] = ret; } catch(e) { }
try { var ret = VBArray.prototype.ubound.call(vars[37], false); if(ret) vars[24] = ret; } catch(e) { }
try { var ret = RegExp.$3; if(ret) vars[14] = ret; } catch(e) { }
try { vars[79].toPrecision = arg7; } catch(e) { }
try { var ret = vars[25][5]; if(ret) vars[78] = ret; } catch(e) { }
try { var ret = Array.prototype.shift.call(vars[72]); if(ret) vars[77] = ret; } catch(e) { }
try { var ret = Array.prototype.shift.call(vars[36]); if(ret) vars[31] = ret; } catch(e) { }
try { var ret = new Date(vars[48]); if(ret) vars[58] = ret; } catch(e) { }
try { var ret = LuLow(vars[12]); if(ret) vars[91] = ret; } catch(e) { }
try { var ret = RegExp.lastIndex; if(ret) vars[66] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[87], vars[91]); } catch(e) { }
try { var ret = vars[77].options; if(ret) vars[40] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[91], true, vars[68]); if(ret) vars[75] = ret; } catch(e) { }
try { var ret = vars[61].call(vars[90], true, false, false); if(ret) vars[46] = ret; } catch(e) { }
try { var ret = new Array(); if(ret) vars[42] = ret; } catch(e) { }
try { var ret = RuntimeObject(); if(ret) vars[23] = ret; } catch(e) { }
try { var ret = new Error(); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = Boolean.prototype.toString.call(vars[2]); if(ret) vars[23] = ret; } catch(e) { }
try { var ret = Debug.write(vars[38], arg9, vars[57]); if(ret) vars[91] = ret; } catch(e) { }
try { var ret = unescape(vars[72]); if(ret) vars[2] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[88], vars[44], vars[83]); if(ret) vars[75] = ret; } catch(e) { }
try { var ret = vars[80].call(vars[76], 'a', arg3, arg5, 3, vars[72]); if(ret) vars[22] = ret; } catch(e) { }
try { var ret = new vars[21].call(vars[93], Infinity, true, vars[77], arg1, arg5); if(ret) vars[61] = ret; } catch(e) { }
try { vars[15].toString = f5; } catch(e) { }
try { var ret = Date.prototype.getFullYear.call(vars[99]); if(ret) vars[71] = ret; } catch(e) { }
try { var ret = String.prototype.match.call(vars[94], true); if(ret) vars[80] = ret; } catch(e) { }
try { eval(Array(4097).join(String.fromCharCode(122)) + Array(65).join(String.fromCharCode(4, 54)) + Array(17).join(String.fromCharCode(110))); } catch(e) { }
try { var ret = Function.prototype.call.call(vars[28], vars[22], vars[9], true, Infinity); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = Array.prototype.reverse.call(vars[21]); if(ret) vars[38] = ret; } catch(e) { }
try { var ret = new Date(arg3); if(ret) vars[97] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[64], vars[78]); if(ret) vars[88] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[21], Array(257).join(String.fromCharCode(86, 64, 14)) + Array(17).join(String.fromCharCode(101, 22)) + Array(17).join(String.fromCharCode(93, 71))); } catch(e) { }
try { var ret = new vars[71].apply(vars[75], vars[74]); if(ret) vars[2] = ret; } catch(e) { }
try { vars[1] = Array; } catch(e) { }
try { vars[88] = new Array(4294967296); } catch(e) { }
try { vars[85][1000000] = vars[25]; } catch(e) { }
try { vars[97].constructor = 3; } catch(e) { }
try { var ret = vars[93][10]; if(ret) vars[15] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[35], vars[97], Infinity); if(ret) vars[66] = ret; } catch(e) { }
try { var ret = Date(vars[49]); if(ret) vars[46] = ret; } catch(e) { }
try { var ret = new ActiveXObject(true); if(ret) vars[44] = ret; } catch(e) { }
try { var ret = vars[32][1]; if(ret) vars[32] = ret; } catch(e) { }
try { var ret = String.prototype.localeCompare.call(vars[62], vars[30]); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[25], f5); if(ret) vars[36] = ret; } catch(e) { }
try { var ret = RegExp.lastMatch; if(ret) vars[67] = ret; } catch(e) { }
try { var ret = new EvalError(vars[2], vars[24], Infinity); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = Array(); if(ret) vars[82] = ret; } catch(e) { }
try { var ret = Object.defineProperty(vars[73], '10', { writable: false, enumerable: false, writable: true }); if(ret) vars[13] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[59], 'a', arg4, arg4); if(ret) vars[12] = ret; } catch(e) { }
try { vars[34][1] = false; } catch(e) { }
try { RegExp.prototype.test.call(vars[97], false); } catch(e) { }
try { var ret = RegExp.$3; if(ret) vars[4] = ret; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[95], vars[89]); if(ret) vars[94] = ret; } catch(e) { }
try { var ret = vars[5].toLocaleString; if(ret) vars[51] = ret; } catch(e) { }
try { var ret = vars[2].toExponential; if(ret) vars[95] = ret; } catch(e) { }
try { var ret = RegExp.$4; if(ret) vars[38] = ret; } catch(e) { }
try { vars[73].toString = f8; } catch(e) { }
try { RegExp.prototype.compile.call(vars[19], vars[53], vars[35]); } catch(e) { }
try { var ret = String.prototype.toLowerCase.call(vars[4]); if(ret) vars[35] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[86], true, arg7); if(ret) vars[20] = ret; } catch(e) { }
try { vars[73].arguments = vars[49]; } catch(e) { }
try { vars[46].length = 'a'; } catch(e) { }
try { var ret = vars[60][3]; if(ret) vars[86] = ret; } catch(e) { }
try { var ret = Object.defineProperty(vars[80], 'toFixed', { enumerable: 'a', writable: vars[65], writable: vars[43] }); if(ret) vars[4] = ret; } catch(e) { }
try { var ret = Date.parse(arg6); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = Date.parse(Infinity); if(ret) vars[65] = ret; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[70], vars[87], vars[94]); if(ret) vars[76] = ret; } catch(e) { }
try { var ret = vars[81].call(vars[77], 'a', 100, vars[58]); if(ret) vars[79] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[2], vars[52]); if(ret) vars[65] = ret; } catch(e) { }
try { vars[63][1] = vars[46]; } catch(e) { }
try { var ret = vars[97].callee; if(ret) vars[29] = ret; } catch(e) { }
try { vars[26].toJSON = vars[93]; } catch(e) { }
try { vars[4] = {}; } catch(e) { }
try { var ret = VBArray.prototype.dimensions.call(vars[75]); if(ret) vars[22] = ret; } catch(e) { }
try { vars[26].prototype = false; } catch(e) { }
try { var ret = Date.prototype.toUTCString.call(vars[76]); if(ret) vars[16] = ret; } catch(e) { }
try { var ret = VBArray(vars[85]); if(ret) vars[46] = ret; } catch(e) { }
try { var ret = String.prototype.search.call(vars[65], vars[28]); if(ret) vars[61] = ret; } catch(e) { }
try { var ret = JSON.parse(Infinity); if(ret) vars[25] = ret; } catch(e) { }
try { var ret = VBArray.prototype.lbound.call(vars[26], vars[6]); if(ret) vars[91] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleLowerCase.call(vars[42]); if(ret) vars[30] = ret; } catch(e) { }
try { vars[30] = f9; } catch(e) { }
try { vars[66].foo = arg4; } catch(e) { }
try { var ret = String.prototype.split.call(vars[27], vars[41], 100); if(ret) vars[76] = ret; } catch(e) { }
try { var ret = Object.getOwnPropertyDescriptor(vars[21], Infinity); if(ret) vars[5] = ret; } catch(e) { }
try { var ret = RuntimeObject(); if(ret) vars[35] = ret; } catch(e) { }
try { var ret = vars[15][1073741824]; if(ret) vars[37] = ret; } catch(e) { }
try { var ret = RegExp.$9; if(ret) vars[40] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleTimeString.call(vars[12]); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = Debug.write(vars[27]); if(ret) vars[61] = ret; } catch(e) { }
try { var ret = Array(arg6); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[36], false, vars[97], 'a', false); if(ret) vars[69] = ret; } catch(e) { }
try { var ret = RegExp.input; if(ret) vars[20] = ret; } catch(e) { }
try { vars[73] = new Array(100); } catch(e) { }
try { var ret = Array.prototype.pop.call(vars[76]); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = new ReferenceError(vars[95], arg2, vars[24]); if(ret) vars[89] = ret; } catch(e) { }
try { vars[60].toJSON = vars[15]; } catch(e) { }
try { var ret = arg1; if(ret) vars[69] = ret; } catch(e) { }
try { var ret = LuHigh(arg8); if(ret) vars[79] = ret; } catch(e) { }
try { var ret = Object.getOwnPropertyDescriptor(vars[31], vars[10]); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = vars[40].toPrecision; if(ret) vars[0] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[24], true, 100); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = Error(vars[57], vars[12], Infinity); if(ret) vars[59] = ret; } catch(e) { }
//endjs
CollectGarbage();
return vars[86];

}

function f7(arg4, arg5, arg6) {
runcount.f7++; if(runcount.f7>2) return;
//alert(7);
//beginjs
try { var ret = Date(false); if(ret) vars[91] = ret; } catch(e) { }
try { var ret = Boolean.prototype.valueOf.call(vars[14]); if(ret) vars[52] = ret; } catch(e) { }
try { var ret = escape(vars[75]); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[65], Infinity, true); if(ret) vars[70] = ret; } catch(e) { }
try { var ret = new vars[85].call(vars[44], Infinity, Infinity, vars[22], vars[55], Infinity); if(ret) vars[8] = ret; } catch(e) { }
try { var ret = vars[64].toExponential; if(ret) vars[13] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[66], vars[71]); if(ret) vars[70] = ret; } catch(e) { }
try { vars[86].toJSON = 'a'; } catch(e) { }
try { var ret = Date.prototype.getTimezoneOffset.call(vars[55]); if(ret) vars[29] = ret; } catch(e) { }
try { vars[64].constructor = 'a'; } catch(e) { }
try { var ret = Debug.write(vars[63], vars[35], true); if(ret) vars[45] = ret; } catch(e) { }
try { var ret = parseInt(vars[89]); if(ret) vars[36] = ret; } catch(e) { }
try { vars[12].toLocaleString = arg8; } catch(e) { }
try { vars[70].foo = vars[34]; } catch(e) { }
try { vars[12][10] = vars[96]; } catch(e) { }
try { var ret = new Error(vars[60], vars[84], vars[2]); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = RegExp.$2; if(ret) vars[54] = ret; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[32], vars[97], vars[14], 1000); if(ret) vars[54] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[37], false); if(ret) vars[53] = ret; } catch(e) { }
try { var ret = JSON.parse(vars[73]); if(ret) vars[45] = ret; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[6], vars[0], false, Infinity, vars[58]); if(ret) vars[44] = ret; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[94], vars[39], vars[83], false, vars[90]); if(ret) vars[22] = ret; } catch(e) { }
try { var ret = new RangeError(vars[60], vars[85], vars[10]); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = URIError(vars[68], vars[49], vars[14]); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = new ActiveXObject(vars[22]); if(ret) vars[6] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[72], Infinity, vars[17]); if(ret) vars[13] = ret; } catch(e) { }
try { vars[76] = document.createElement("foo"); } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[10], Infinity); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[79], Infinity, vars[19]); if(ret) vars[0] = ret; } catch(e) { }
try { vars[69] = Array(1025).join(String.fromCharCode(4, 122)); } catch(e) { }
try { RegExp.prototype.test.call(vars[44], vars[28]); } catch(e) { }
try { RegExp.prototype.compile.call(vars[79], Array(65).join(String.fromCharCode(110, 84)) + Array(257).join(String.fromCharCode(122)), 'i'); } catch(e) { }
try { var ret = RegExp.$4; if(ret) vars[26] = ret; } catch(e) { }
try { vars[57] = this; } catch(e) { }
try { var ret = Date(vars[34], vars[43], vars[72], arg9, vars[1], vars[45], true); if(ret) vars[26] = ret; } catch(e) { }
try { vars[23] = {}; } catch(e) { }
try { var ret = Date.prototype.toLocaleString.call(vars[80]); if(ret) vars[25] = ret; } catch(e) { }
try { var ret = vars[70].toJSON; if(ret) vars[66] = ret; } catch(e) { }
try { var ret = vars[25].length; if(ret) vars[1] = ret; } catch(e) { }
try { var ret = Date(); if(ret) vars[2] = ret; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[82], arg6); if(ret) vars[43] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[59], vars[52]); if(ret) vars[74] = ret; } catch(e) { }
try { var ret = new RegExp(Array(17).join(String.fromCharCode(27)) + Array(17).join(String.fromCharCode(101, 54))); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = vars[33].source; if(ret) vars[67] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[27], Infinity, vars[51]); if(ret) vars[13] = ret; } catch(e) { }
try { vars[31] = new Array(4); } catch(e) { }
try { var ret = Date(true); if(ret) vars[85] = ret; } catch(e) { }
try { var ret = vars[91].options; if(ret) vars[30] = ret; } catch(e) { }
try { var ret = unescape(arg4); if(ret) vars[22] = ret; } catch(e) { }
try { var ret = new Date(); if(ret) vars[43] = ret; } catch(e) { }
try { var ret = vars[5].length; if(ret) vars[52] = ret; } catch(e) { }
try { var ret = unescape(true); if(ret) vars[19] = ret; } catch(e) { }
try { var ret = vars[95][5]; if(ret) vars[26] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[71], Infinity, false); if(ret) vars[1] = ret; } catch(e) { }
try { vars[51] = Date; } catch(e) { }
try { vars[57].source = vars[47]; } catch(e) { }
try { var ret = RangeError(Infinity, Infinity, 'a'); if(ret) vars[75] = ret; } catch(e) { }
try { vars[67] = Boolean; } catch(e) { }
try { vars[86] = new Array(3); } catch(e) { }
try { var ret = String.prototype.slice.call(vars[96], vars[91], vars[42]); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = RegExp.lastMatch; if(ret) vars[75] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleLowerCase.call(vars[87]); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = vars[86][536870912]; if(ret) vars[80] = ret; } catch(e) { }
try { var ret = EncodeURI(3); if(ret) vars[13] = ret; } catch(e) { }
try { var ret = VBArray.prototype.lbound.call(vars[65], vars[13]); if(ret) vars[77] = ret; } catch(e) { }
try { var ret = vars[36].appy(vars[93], vars[43]); if(ret) vars[6] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[84], false, 'a'); if(ret) vars[97] = ret; } catch(e) { }
try { var ret = new RegExp(Array(257).join(String.fromCharCode(13, 111, 31)) + Array(4097).join(String.fromCharCode(88)) + Array(17).join(String.fromCharCode(47, 103))); if(ret) vars[83] = ret; } catch(e) { }
try { var ret = vars[87][5]; if(ret) vars[56] = ret; } catch(e) { }
try { var ret = vars[75].prototype; if(ret) vars[14] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[39], vars[29], 2); } catch(e) { }
try { var ret = String.prototype.replace.call(vars[58], Infinity, vars[27]); if(ret) vars[19] = ret; } catch(e) { }
try { var ret = VBArray(vars[56]); if(ret) vars[52] = ret; } catch(e) { }
try { var ret = vars[43].input; if(ret) vars[41] = ret; } catch(e) { }
try { var ret = new vars[16].call(vars[33], vars[23], 1, true, false, vars[76]); if(ret) vars[97] = ret; } catch(e) { }
try { var ret = vars[60].input; if(ret) vars[2] = ret; } catch(e) { }
try { var ret = decodeURIComponent('a'); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = parseFloat(Infinity); if(ret) vars[43] = ret; } catch(e) { }
try { var ret = new Enumerator(Infinity); if(ret) vars[73] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[14]); if(ret) vars[19] = ret; } catch(e) { }
try { var ret = vars[62].global; if(ret) vars[74] = ret; } catch(e) { }
try { var ret = RegExp.input; if(ret) vars[41] = ret; } catch(e) { }
try { vars[93][1000000] = vars[55]; } catch(e) { }
try { var ret = new ActiveXObject(true, vars[81]); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.moveFirst.call(vars[91]); if(ret) vars[95] = ret; } catch(e) { }
try { var ret = RegExp.index; if(ret) vars[45] = ret; } catch(e) { }
try { var ret = new ReferenceError(Infinity, Infinity, Infinity); if(ret) vars[49] = ret; } catch(e) { }
try { var ret = VBArray.prototype.dimensions.call(vars[77]); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[24], Infinity, vars[55]); if(ret) vars[71] = ret; } catch(e) { }
try { var ret = vars[31].input; if(ret) vars[23] = ret; } catch(e) { }
try { var ret = String.prototype.charAt.call(vars[24], vars[63]); if(ret) vars[7] = ret; } catch(e) { }
try { vars[12] = Date; } catch(e) { }
try { var ret = Date.prototype.getTimezoneOffset.call(vars[69]); if(ret) vars[37] = ret; } catch(e) { }
try { vars[60].lastIndex = vars[84]; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[87]); if(ret) vars[85] = ret; } catch(e) { }
try { var ret = vars[42].caller; if(ret) vars[53] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleLowerCase.call(vars[18]); if(ret) vars[17] = ret; } catch(e) { }
try { vars[19] = Array(65537).join(String.fromCharCode(71)); } catch(e) { }
try { var ret = EncodeURI(arg4); if(ret) vars[8] = ret; } catch(e) { }
try { vars[59].callee = 'a'; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[33], f7); if(ret) vars[54] = ret; } catch(e) { }
try { vars[76] = new Array(2); } catch(e) { }
try { var ret = Date.prototype.toJSON.call(vars[8]); if(ret) vars[30] = ret; } catch(e) { }
try { vars[31].toLocaleString = f7; } catch(e) { }
try { RegExp.input = vars[35]; } catch(e) { }
try { var ret = new Error(vars[27]); if(ret) vars[3] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[84], true); } catch(e) { }
try { var ret = Enumerator.prototype.moveFirst.call(vars[54]); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = vars[48][5]; if(ret) vars[39] = ret; } catch(e) { }
try { var ret = new Enumerator(vars[86]); if(ret) vars[23] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[2], 2147483647, vars[26]); if(ret) vars[17] = ret; } catch(e) { }
try { var ret = Function.prototype.toString.call(vars[11]); if(ret) vars[34] = ret; } catch(e) { }
try { var ret = String.prototype.localeCompare.call(vars[3], vars[38]); if(ret) vars[20] = ret; } catch(e) { }
try { var ret = VBArray.prototype.toArray.call(vars[66]); if(ret) vars[88] = ret; } catch(e) { }
try { var ret = new vars[34].call(vars[59], arg8, 3, vars[44], vars[37], false); if(ret) vars[63] = ret; } catch(e) { }
try { var ret = vars[58].callee; if(ret) vars[92] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[26], 1000, true); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = vars[80].appy(vars[59], vars[18]); if(ret) vars[55] = ret; } catch(e) { }
try { vars[14][1000] = vars[68]; } catch(e) { }
try { var ret = new RegExp(); if(ret) vars[76] = ret; } catch(e) { }
try { RegExp.input = vars[90]; } catch(e) { }
try { var ret = vars[44].constructor; if(ret) vars[60] = ret; } catch(e) { }
try { vars[1] = {}; } catch(e) { }
try { RegExp.prototype.compile.call(vars[75], Infinity, vars[32]); } catch(e) { }
try { var ret = Array.prototype.reverse.call(vars[37]); if(ret) vars[43] = ret; } catch(e) { }
try { vars[81].toJSON = true; } catch(e) { }
try { vars[18][1000] = vars[97]; } catch(e) { }
try { vars[54] = {}; } catch(e) { }
try { var ret = Boolean(); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[16], vars[38], vars[53]); if(ret) vars[3] = ret; } catch(e) { }
try { vars[22].toString = f8; } catch(e) { }
try { vars[14] = Enumerator; } catch(e) { }
try { vars[1].length = vars[55]; } catch(e) { }
try { vars[58].toString = vars[48]; } catch(e) { }
try { vars[46].toPrecision = vars[16]; } catch(e) { }
try { vars[56].callee = vars[88]; } catch(e) { }
try { vars[73].toPrecision = f9; } catch(e) { }
try { vars[67].arguments = vars[63]; } catch(e) { }
try { var ret = Date.prototype.toUTCString.call(vars[33]); if(ret) vars[13] = ret; } catch(e) { }
try { var ret = Error(vars[36]); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[85], true); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = vars[87].prototype; if(ret) vars[3] = ret; } catch(e) { }
try { RegExp.input = vars[27]; } catch(e) { }
try { vars[79] = Array; } catch(e) { }
try { var ret = vars[95].toExponential; if(ret) vars[18] = ret; } catch(e) { }
try { var ret = new RuntimeObject(); if(ret) vars[76] = ret; } catch(e) { }
try { var ret = vars[65].options; if(ret) vars[18] = ret; } catch(e) { }
try { var ret = RegExp(Array(257).join(String.fromCharCode(5, 24)) + Array(65537).join(String.fromCharCode(25, 95))); if(ret) vars[17] = ret; } catch(e) { }
try { var ret = parseInt(vars[21]); if(ret) vars[28] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[14], vars[84]); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = RegExp.index; if(ret) vars[13] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleTimeString.call(vars[15]); if(ret) vars[53] = ret; } catch(e) { }
try { var ret = VBArray.prototype.dimensions.call(vars[71]); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[81], vars[93], Infinity, vars[90]); if(ret) vars[85] = ret; } catch(e) { }
try { var ret = vars[48].toPrecision; if(ret) vars[5] = ret; } catch(e) { }
try { vars[76] = Function; } catch(e) { }
try { var ret = GetObject(arg7, vars[17]); if(ret) vars[41] = ret; } catch(e) { }
try { var ret = RegExp.$7; if(ret) vars[11] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[30], vars[68], vars[40]); if(ret) vars[85] = ret; } catch(e) { }
try { var ret = Object.getOwnPropertyDescriptor(vars[89], vars[82]); if(ret) vars[36] = ret; } catch(e) { }
try { var ret = vars[9].toExponential; if(ret) vars[39] = ret; } catch(e) { }
try { var ret = vars[0].foo; if(ret) vars[91] = ret; } catch(e) { }
try { var ret = Date(1000000); if(ret) vars[84] = ret; } catch(e) { }
try { vars[42] = Array(65).join(String.fromCharCode(112, 96, 101)) + Array(17).join(String.fromCharCode(72)) + Array(65537).join(String.fromCharCode(82, 82, 58)); } catch(e) { }
try { vars[19].toLocaleString = f6; } catch(e) { }
try { vars[98].toLocaleString = f4; } catch(e) { }
try { vars[77] = Boolean; } catch(e) { }
try { var ret = new ReferenceError(vars[3], vars[62], vars[98]); if(ret) vars[62] = ret; } catch(e) { }
try { var ret = RegExp.lastIndex; if(ret) vars[61] = ret; } catch(e) { }
try { var ret = vars[5].constructor; if(ret) vars[13] = ret; } catch(e) { }
try { vars[48] = JSON; } catch(e) { }
try { vars[41] = f2; } catch(e) { }
try { vars[36][4] = vars[10]; } catch(e) { }
try { var ret = RegExp.$4; if(ret) vars[66] = ret; } catch(e) { }
try { var ret = Array(true); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[68], vars[66], false); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[70]); if(ret) vars[40] = ret; } catch(e) { }
try { var ret = arg1; if(ret) vars[48] = ret; } catch(e) { }
try { var ret = new vars[69].apply(vars[28], false); if(ret) vars[92] = ret; } catch(e) { }
try { vars[32] = ActiveXObject; } catch(e) { }
try { vars[91].toExponential = arg4; } catch(e) { }
try { vars[16] = RegExp; } catch(e) { }
try { vars[53] = new Array(1000); } catch(e) { }
try { var ret = new RegExp(Array(1025).join(String.fromCharCode(73, 61, 62)), 'i'); if(ret) vars[88] = ret; } catch(e) { }
try { var ret = vars[90].prototype; if(ret) vars[64] = ret; } catch(e) { }
try { var ret = vars[10].call(vars[39], vars[74], false, vars[0]); if(ret) vars[63] = ret; } catch(e) { }
try { var ret = ActiveXObject(vars[64]); if(ret) vars[53] = ret; } catch(e) { }
try { var ret = RangeError('a', vars[4], 'a'); if(ret) vars[67] = ret; } catch(e) { }
try { var ret = unescape(false); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.moveFirst.call(vars[69]); if(ret) vars[99] = ret; } catch(e) { }
try { vars[38].callee = vars[60]; } catch(e) { }
try { var ret = String.prototype.split.call(vars[45], Infinity); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = RegExp.$5; if(ret) vars[50] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[86], vars[12]); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = vars[12].length; if(ret) vars[87] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[27], vars[19]); if(ret) vars[50] = ret; } catch(e) { }
try { var ret = Function.prototype.toString.call(vars[84]); if(ret) vars[72] = ret; } catch(e) { }
try { vars[26].lastIndex = vars[69]; } catch(e) { }
try { var ret = URIError(vars[86], 1000000, vars[82]); if(ret) vars[28] = ret; } catch(e) { }
try { vars[45] = this; } catch(e) { }
try { var ret = isFinite(4); if(ret) vars[51] = ret; } catch(e) { }
try { var ret = vars[2].appy(vars[48], false); if(ret) vars[84] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[5], vars[47]); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = new Array(vars[3], vars[51], true); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = Date.UTC(Infinity, 10, arg7, 100, vars[93], true, true); if(ret) vars[54] = ret; } catch(e) { }
try { vars[0].toJSON = f7; } catch(e) { }
try { vars[83] = document.createElement("foo"); Object.defineProperty(vars[83], "length", {get: f9, set: f1} ); } catch(e) { }
try { var ret = String.prototype.toUpperCase.call(vars[32]); if(ret) vars[32] = ret; } catch(e) { }
try { var ret = URIError(vars[17], vars[1], Infinity); if(ret) vars[17] = ret; } catch(e) { }
try { var ret = String.prototype.search.call(vars[53], arg5); if(ret) vars[50] = ret; } catch(e) { }
try { var ret = new Error(Infinity); if(ret) vars[14] = ret; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[26]); if(ret) vars[58] = ret; } catch(e) { }
try { vars[13].input = false; } catch(e) { }
try { var ret = Function.prototype.toString.call(vars[57]); if(ret) vars[58] = ret; } catch(e) { }
try { var ret = new ActiveXObject(vars[26], 'a'); if(ret) vars[69] = ret; } catch(e) { }
try { var ret = new Boolean(); if(ret) vars[99] = ret; } catch(e) { }
try { vars[33].toExponential = Infinity; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[43], 'a'); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = vars[13][1000000]; if(ret) vars[31] = ret; } catch(e) { }
try { var ret = escape(4); if(ret) vars[42] = ret; } catch(e) { }
try { var ret = Function.prototype.toString.call(vars[2]); if(ret) vars[8] = ret; } catch(e) { }
try { vars[23] = new Array(5); } catch(e) { }
try { var ret = RuntimeObject(); if(ret) vars[94] = ret; } catch(e) { }
try { var ret = RegExp.$4; if(ret) vars[93] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[10], true); if(ret) vars[28] = ret; } catch(e) { }
try { var ret = LuHigh(true); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleString.call(vars[49]); if(ret) vars[55] = ret; } catch(e) { }
try { var ret = new Date(true); if(ret) vars[59] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[36], 'a', 10); if(ret) vars[40] = ret; } catch(e) { }
try { var ret = Array.prototype.shift.call(vars[45]); if(ret) vars[34] = ret; } catch(e) { }
try { var ret = String.prototype.localeCompare.call(vars[47], vars[81]); if(ret) vars[28] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[78], vars[61]); if(ret) vars[55] = ret; } catch(e) { }
try { vars[43][1000000] = Infinity; } catch(e) { }
try { vars[70] = {}; } catch(e) { }
try { var ret = String.prototype.toUpperCase.call(vars[83]); if(ret) vars[24] = ret; } catch(e) { }
try { var ret = new ActiveXObject(vars[86], 'a'); if(ret) vars[73] = ret; } catch(e) { }
try { var ret = Array.prototype.pop.call(vars[15]); if(ret) vars[36] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleLowerCase.call(vars[84]); if(ret) vars[88] = ret; } catch(e) { }
try { var ret = encodeURIComponent(vars[67]); if(ret) vars[80] = ret; } catch(e) { }
try { vars[30].toExponential = Infinity; } catch(e) { }
try { var ret = new Error(); if(ret) vars[26] = ret; } catch(e) { }
try { var ret = vars[42].lastIndex; if(ret) vars[11] = ret; } catch(e) { }
try { var ret = RegExp.$9; if(ret) vars[6] = ret; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[43], arg3, false); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = RegExp.$4; if(ret) vars[20] = ret; } catch(e) { }
try { vars[90] = Object; } catch(e) { }
try { var ret = vars[72].options; if(ret) vars[77] = ret; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[67], arg3); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = Boolean.prototype.toString.call(vars[88]); if(ret) vars[40] = ret; } catch(e) { }
try { vars[75].foo = vars[58]; } catch(e) { }
try { var ret = vars[65].input; if(ret) vars[17] = ret; } catch(e) { }
try { var ret = Array.prototype.pop.call(vars[99]); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = Debug.writeln(vars[25]); if(ret) vars[90] = ret; } catch(e) { }
try { vars[47] = ActiveXObject; } catch(e) { }
try { vars[59] = Date; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[86]); if(ret) vars[22] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleLowerCase.call(vars[59]); if(ret) vars[60] = ret; } catch(e) { }
try { var ret = new Array(true, vars[70], vars[50]); if(ret) vars[81] = ret; } catch(e) { }
try { vars[87].source = 3; } catch(e) { }
try { var ret = Enumerator.prototype.moveNext.call(vars[6]); if(ret) vars[25] = ret; } catch(e) { }
try { var ret = vars[36][1000]; if(ret) vars[12] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[10], arg9); } catch(e) { }
try { var ret = vars[7].global; if(ret) vars[14] = ret; } catch(e) { }
try { vars[61] = JSON; } catch(e) { }
try { var ret = new Boolean(); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = vars[78].foo; if(ret) vars[18] = ret; } catch(e) { }
try { var ret = JSON.stringify('a'); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = []; if(ret) vars[42] = ret; } catch(e) { }
try { var ret = []; if(ret) vars[13] = ret; } catch(e) { }
try { var ret = Error(vars[97], vars[46], vars[51]); if(ret) vars[63] = ret; } catch(e) { }
try { var ret = vars[64].toString; if(ret) vars[82] = ret; } catch(e) { }
try { vars[18] = ActiveXObject; } catch(e) { }
try { var ret = vars[2].call(vars[3]); if(ret) vars[1] = ret; } catch(e) { }
try { vars[34].toJSON = vars[63]; } catch(e) { }
try { var ret = vars[68].foo; if(ret) vars[75] = ret; } catch(e) { }
try { var ret = Array(); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[35], true); if(ret) vars[46] = ret; } catch(e) { }
try { var ret = vars[93].call(vars[44], vars[85], Infinity, false); if(ret) vars[36] = ret; } catch(e) { }
try { var ret = Boolean.prototype.toString.call(vars[43]); if(ret) vars[41] = ret; } catch(e) { }
try { var ret = Date(vars[67], 100, vars[33], false, vars[30], vars[95], vars[12]); if(ret) vars[43] = ret; } catch(e) { }
try { var ret = vars[79].prototype; if(ret) vars[95] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.moveFirst.call(vars[47]); if(ret) vars[59] = ret; } catch(e) { }
try { var ret = Array.prototype.unshift.call(vars[27], arg6, vars[93]); if(ret) vars[43] = ret; } catch(e) { }
try { var ret = Date.UTC(false, vars[39], vars[89], 1000000, arg2, vars[85], 5); if(ret) vars[4] = ret; } catch(e) { }
try { var ret = arg1; if(ret) vars[37] = ret; } catch(e) { }
try { var ret = vars[51].toFixed; if(ret) vars[81] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[61], arg4, 'a'); if(ret) vars[28] = ret; } catch(e) { }
try { var ret = Object.getOwnPropertyDescriptor(vars[24], vars[90]); if(ret) vars[56] = ret; } catch(e) { }
try { var ret = RegExp.leftContext; if(ret) vars[63] = ret; } catch(e) { }
try { var ret = vars[49].toFixed; if(ret) vars[53] = ret; } catch(e) { }
try { var ret = vars[46].toString; if(ret) vars[99] = ret; } catch(e) { }
try { var ret = new Array(); if(ret) vars[25] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[81], vars[24]); if(ret) vars[75] = ret; } catch(e) { }
try { var ret = new RegExp(Array(4097).join(String.fromCharCode(108, 40, 99)) + Array(17).join(String.fromCharCode(24, 93)), 'gi'); if(ret) vars[36] = ret; } catch(e) { }
try { vars[20].toLocaleString = Infinity; } catch(e) { }
try { vars[85] = Date; } catch(e) { }
try { var ret = RuntimeObject(); if(ret) vars[2] = ret; } catch(e) { }
try { var ret = Array.prototype.reverse.call(vars[23]); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = ActiveXObject(arg5, false); if(ret) vars[76] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[9]); if(ret) vars[18] = ret; } catch(e) { }
try { vars[60] = Enumerator; } catch(e) { }
try { var ret = ReferenceError(vars[78], vars[18], arg3); if(ret) vars[26] = ret; } catch(e) { }
try { var ret = Array(vars[79]); if(ret) vars[60] = ret; } catch(e) { }
try { vars[2].valueOf = vars[80]; } catch(e) { }
try { var ret = Date.prototype.getTimezoneOffset.call(vars[75]); if(ret) vars[11] = ret; } catch(e) { }
try { var ret = Enumerator('a'); if(ret) vars[78] = ret; } catch(e) { }
try { var ret = String.prototype.strike.call(vars[83], Infinity); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.atEnd.call(vars[77]); if(ret) vars[52] = ret; } catch(e) { }
try { var ret = vars[43].toFixed; if(ret) vars[89] = ret; } catch(e) { }
try { var ret = new RuntimeObject(); if(ret) vars[56] = ret; } catch(e) { }
try { vars[92] = new Array(100); } catch(e) { }
try { var ret = Array.prototype.unshift.call(vars[72], Infinity, vars[48]); if(ret) vars[63] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[2], -1); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = encodeURIComponent(arg8); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = Boolean.prototype.toJSON.call(vars[97]); if(ret) vars[95] = ret; } catch(e) { }
try { var ret = RegExp.$2; if(ret) vars[43] = ret; } catch(e) { }
try { var ret = Date.prototype.toJSON.call(vars[3]); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = RegExp.lastMatch; if(ret) vars[46] = ret; } catch(e) { }
try { vars[63] = new Array(5); } catch(e) { }
try { var ret = RegExp.$7; if(ret) vars[77] = ret; } catch(e) { }
try { var ret = Debug.writeln(vars[32], vars[86], vars[72]); if(ret) vars[90] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[23], Array(4097).join(String.fromCharCode(49, 115, 64)) + Array(1025).join(String.fromCharCode(32))); } catch(e) { }
try { var ret = String.prototype.strike.call(vars[44], vars[78]); if(ret) vars[48] = ret; } catch(e) { }
try { function f_inner_16() { return f2(); } vars[90] = f_inner_16; } catch(e) { }
try { var ret = RegExp.$5; if(ret) vars[38] = ret; } catch(e) { }
try { vars[52] = Array(65537).join(String.fromCharCode(117, 20, 48)) + Array(1025).join(String.fromCharCode(75, 101, 102)); } catch(e) { }
try { vars[82] = this; } catch(e) { }
try { var ret = new vars[60].apply(vars[22], vars[41]); if(ret) vars[40] = ret; } catch(e) { }
try { var ret = new Error(); if(ret) vars[31] = ret; } catch(e) { }
try { var ret = new Error(); if(ret) vars[36] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[33], 'a'); if(ret) vars[31] = ret; } catch(e) { }
try { var ret = Array.prototype.unshift.call(vars[79], vars[97], arg5); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = []; if(ret) vars[45] = ret; } catch(e) { }
try { var ret = RuntimeObject(); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = Boolean.prototype.toString.call(vars[48]); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = new EvalError(vars[90], 'a', arg9); if(ret) vars[64] = ret; } catch(e) { }
try { var ret = decodeURI(Infinity); if(ret) vars[56] = ret; } catch(e) { }
try { var ret = new RangeError(vars[80], 'a', vars[32]); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[77], false); if(ret) vars[20] = ret; } catch(e) { }
try { var ret = new vars[98](vars[17], true, Infinity, vars[63], Infinity); if(ret) vars[60] = ret; } catch(e) { }
try { var ret = vars[99][4]; if(ret) vars[60] = ret; } catch(e) { }
try { vars[96].toExponential = 'a'; } catch(e) { }
try { var ret = new vars[34]('a', Infinity, true, 1, Infinity); if(ret) vars[2] = ret; } catch(e) { }
try { vars[83] = Object; } catch(e) { }
try { RegExp.prototype.compile.call(vars[96], Array(257).join(String.fromCharCode(12, 72)) + Array(17).join(String.fromCharCode(46, 97)) + Array(65).join(String.fromCharCode(114)), 'igg'); } catch(e) { }
try { var ret = String.prototype.split.call(vars[50], vars[24], 0); if(ret) vars[42] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[48], Infinity); } catch(e) { }
try { var ret = RegExp(); if(ret) vars[14] = ret; } catch(e) { }
try { var ret = Debug.writeln(vars[31], vars[76], vars[75]); if(ret) vars[5] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[51], vars[27], false, 'a'); if(ret) vars[94] = ret; } catch(e) { }
try { var ret = vars[73][100]; if(ret) vars[41] = ret; } catch(e) { }
try { var ret = Enumerator(); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = Error(vars[39]); if(ret) vars[19] = ret; } catch(e) { }
try { var ret = Array.prototype.toLocaleString.call(vars[87]); if(ret) vars[82] = ret; } catch(e) { }
try { var ret = vars[37].length; if(ret) vars[33] = ret; } catch(e) { }
try { var ret = new Array(vars[12]); if(ret) vars[26] = ret; } catch(e) { }
try { vars[43].options = vars[47]; } catch(e) { }
try { var ret = Date.prototype.getTimezoneOffset.call(vars[94]); if(ret) vars[67] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[54], 1000000, false); if(ret) vars[17] = ret; } catch(e) { }
try { var ret = Error(); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = new Error('a', Infinity, 'a'); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = vars[22].caller; if(ret) vars[52] = ret; } catch(e) { }
try { var ret = vars[42].call(vars[88], vars[43], vars[86], arg7); if(ret) vars[77] = ret; } catch(e) { }
try { var ret = String.prototype.localeCompare.call(vars[71], 'a'); if(ret) vars[83] = ret; } catch(e) { }
try { var ret = new Array(vars[47], vars[60], vars[3]); if(ret) vars[14] = ret; } catch(e) { }
try { vars[70] = Array; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[15], -1); if(ret) vars[99] = ret; } catch(e) { }
try { var ret = Array.prototype.unshift.call(vars[68], 2, vars[27]); if(ret) vars[76] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[94], vars[55], vars[23]); if(ret) vars[93] = ret; } catch(e) { }
try { var ret = String.FromCharCode(3, arg2, arg5); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = vars[22].global; if(ret) vars[55] = ret; } catch(e) { }
try { vars[5] = Function; } catch(e) { }
try { var ret = new RangeError(vars[77], vars[62], true); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[91], vars[62]); if(ret) vars[44] = ret; } catch(e) { }
try { vars[51].toLocaleString = vars[52]; } catch(e) { }
try { var ret = VBArray.prototype.lbound.call(vars[49], vars[82]); if(ret) vars[71] = ret; } catch(e) { }
try { var ret = Object.defineProperty(vars[64], 'valueOf', { enumerable: Infinity }); if(ret) vars[38] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[5], vars[20]); if(ret) vars[91] = ret; } catch(e) { }
try { var ret = Debug.write(false, Infinity, vars[36]); if(ret) vars[88] = ret; } catch(e) { }
try { var ret = new Enumerator(); if(ret) vars[46] = ret; } catch(e) { }
try { vars[60].toLocaleString = vars[69]; } catch(e) { }
try { var ret = Error(true); if(ret) vars[69] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[25], vars[46], arg8); if(ret) vars[97] = ret; } catch(e) { }
try { var ret = vars[97].prototype; if(ret) vars[14] = ret; } catch(e) { }
try { var ret = vars[64][0]; if(ret) vars[6] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[46], vars[73], 'a'); if(ret) vars[12] = ret; } catch(e) { }
try { vars[54] = new Array(2147483648); } catch(e) { }
try { vars[8].prototype = 'a'; } catch(e) { }
try { vars[70].arguments = 4294967295; } catch(e) { }
try { var ret = String.prototype.toUpperCase.call(vars[72]); if(ret) vars[49] = ret; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[91], vars[40], vars[73], false, vars[97]); if(ret) vars[83] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[36], Array(1025).join(String.fromCharCode(94)), 'img'); } catch(e) { }
try { vars[42].caller = -1; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[1], vars[51]); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = arguments; if(ret) vars[25] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[83], vars[3], false); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = new Error(-1); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = Date(Infinity); if(ret) vars[11] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[21]); if(ret) vars[40] = ret; } catch(e) { }
try { var ret = vars[93].callee; if(ret) vars[53] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[88], vars[35]); if(ret) vars[28] = ret; } catch(e) { }
try { vars[18].toLocaleString = false; } catch(e) { }
try { var ret = Array(536870911, 4, vars[67]); if(ret) vars[61] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[1], vars[47]); if(ret) vars[34] = ret; } catch(e) { }
try { vars[94] = Array(4097).join(String.fromCharCode(80, 27)) + Array(257).join(String.fromCharCode(48, 60, 93)) + Array(4097).join(String.fromCharCode(95, 23)); } catch(e) { }
try { var ret = Object.defineProperty(vars[38], '4', { value: vars[86], writable: vars[39], writable: true }); if(ret) vars[43] = ret; } catch(e) { }
try { var ret = new Date(); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = vars[28].call(vars[10], arg5, Infinity, vars[64]); if(ret) vars[78] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[82], false, 'a'); if(ret) vars[34] = ret; } catch(e) { }
try { vars[35] = new Array(0); } catch(e) { }
try { var ret = new RegExp(Array(4097).join(String.fromCharCode(67, 39, 88)) + Array(17).join(String.fromCharCode(89)) + Array(257).join(String.fromCharCode(72)), 'ggi'); if(ret) vars[73] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[11], vars[19]); } catch(e) { }
try { var ret = Error(true, true, vars[3]); if(ret) vars[12] = ret; } catch(e) { }
try { var ret = Debug.writeln(vars[5], vars[13], vars[28]); if(ret) vars[89] = ret; } catch(e) { }
try { vars[77] = Array(65537).join(String.fromCharCode(42, 72)); } catch(e) { }
try { vars[6].toPrecision = vars[41]; } catch(e) { }
try { var ret = RegExp.$4; if(ret) vars[44] = ret; } catch(e) { }
try { var ret = Boolean(); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = Date.prototype.valueOf.call(vars[30]); if(ret) vars[70] = ret; } catch(e) { }
try { vars[51][100] = true; } catch(e) { }
try { vars[3] = new Array(2); } catch(e) { }
try { var ret = LuHigh('a'); if(ret) vars[70] = ret; } catch(e) { }
try { var ret = Function.prototype.toString.call(vars[33]); if(ret) vars[57] = ret; } catch(e) { }
try { vars[46].input = true; } catch(e) { }
try { vars[4] = Array(65537).join(String.fromCharCode(75, 111)) + Array(65).join(String.fromCharCode(84, 62)); } catch(e) { }
try { var ret = new Boolean(); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = RegExp(Array(1025).join(String.fromCharCode(59)) + Array(65537).join(String.fromCharCode(116, 44, 110))); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = new Array(); if(ret) vars[25] = ret; } catch(e) { }
try { var ret = new Date(); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleString.call(vars[20]); if(ret) vars[74] = ret; } catch(e) { }
try { var ret = RegExp(); if(ret) vars[24] = ret; } catch(e) { }
try { var ret = Array.prototype.unshift.call(vars[70], vars[99], false); if(ret) vars[76] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[19], vars[64], f7); if(ret) vars[19] = ret; } catch(e) { }
try { var ret = vars[21][4]; if(ret) vars[98] = ret; } catch(e) { }
try { vars[35] = RegExp; } catch(e) { }
try { var ret = JSON.stringify(arg4); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = new Array(); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = vars[48].arguments; if(ret) vars[78] = ret; } catch(e) { }
try { vars[28] = Date; } catch(e) { }
try { vars[77] = new Array(100); } catch(e) { }
try { var ret = RegExp(Array(17).join(String.fromCharCode(13)) + Array(65).join(String.fromCharCode(109, 79)), 'gg'); if(ret) vars[59] = ret; } catch(e) { }
try { vars[68].toArray = f7; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[51]); if(ret) vars[44] = ret; } catch(e) { }
try { var ret = vars[9].toString; if(ret) vars[49] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[45]); if(ret) vars[25] = ret; } catch(e) { }
try { var ret = decodeURIComponent(false); if(ret) vars[71] = ret; } catch(e) { }
try { vars[75].arguments = false; } catch(e) { }
try { var ret = EncodeURI(false); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = isFinite(true); if(ret) vars[93] = ret; } catch(e) { }
try { var ret = vars[78].prototype; if(ret) vars[41] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[77], true); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = Enumerator('a'); if(ret) vars[13] = ret; } catch(e) { }
try { vars[29].prototype = false; } catch(e) { }
try { var ret = new Error('a'); if(ret) vars[84] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[39], false); if(ret) vars[95] = ret; } catch(e) { }
try { var ret = new Array(false, 'a', 'a'); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = [arg5, vars[6], false]; if(ret) vars[22] = ret; } catch(e) { }
try { vars[44].callee = vars[43]; } catch(e) { }
try { var ret = vars[13].callee; if(ret) vars[56] = ret; } catch(e) { }
try { var ret = new URIError(arg4, true, Infinity); if(ret) vars[56] = ret; } catch(e) { }
try { var ret = Array.prototype.unshift.call(vars[25], vars[59], false); if(ret) vars[39] = ret; } catch(e) { }
try { var ret = new Enumerator(); if(ret) vars[22] = ret; } catch(e) { }
try { vars[4][1000] = 'a'; } catch(e) { }
try { var ret = VBArray(vars[98]); if(ret) vars[74] = ret; } catch(e) { }
try { var ret = ActiveXObject('a', Infinity); if(ret) vars[24] = ret; } catch(e) { }
try { var ret = Array.prototype.unshift.call(vars[6], vars[26], vars[83]); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = Array.prototype.reverse.call(vars[59]); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = Debug.writeln(2, vars[48], vars[69]); if(ret) vars[34] = ret; } catch(e) { }
try { var ret = vars[49].input; if(ret) vars[86] = ret; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[20], true); if(ret) vars[21] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[72], vars[11], vars[70]); } catch(e) { }
try { var ret = Boolean(); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[50], false, 0); if(ret) vars[54] = ret; } catch(e) { }
try { var ret = Error(); if(ret) vars[15] = ret; } catch(e) { }
try { var ret = VBArray.prototype.dimensions.call(vars[47]); if(ret) vars[27] = ret; } catch(e) { }
try { vars[56] = {}; } catch(e) { }
try { var ret = encodeURIComponent(10); if(ret) vars[65] = ret; } catch(e) { }
try { var ret = decodeURIComponent(vars[19]); if(ret) vars[9] = ret; } catch(e) { }
try { vars[94] = Object; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[70], Infinity, f4); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[7], Infinity); if(ret) vars[94] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[9]); if(ret) vars[29] = ret; } catch(e) { }
try { var ret = VBArray.prototype.toArray.call(vars[76]); if(ret) vars[61] = ret; } catch(e) { }
try { vars[77] = {}; } catch(e) { }
try { var ret = Debug.writeln(arg1, vars[53], vars[77]); if(ret) vars[64] = ret; } catch(e) { }
try { vars[46] = new Array(4); } catch(e) { }
try { var ret = new Date(vars[74], arg8, 0, vars[71], arg8, vars[33], vars[30]); if(ret) vars[66] = ret; } catch(e) { }
try { vars[45][2] = vars[91]; } catch(e) { }
try { var ret = vars[35].toExponential; if(ret) vars[17] = ret; } catch(e) { }
try { var ret = Object.defineProperty(vars[52], 'constructor', { get: f4, enumerable: 2, set: f2 }); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = RegExp.$8; if(ret) vars[72] = ret; } catch(e) { }
try { var ret = vars[98].prototype; if(ret) vars[66] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.moveFirst.call(vars[19]); if(ret) vars[13] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[82], vars[7]); } catch(e) { }
try { var ret = String.prototype.toLocaleUpperCase.call(vars[11]); if(ret) vars[49] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[90]); if(ret) vars[8] = ret; } catch(e) { }
try { var ret = RegExp.$4; if(ret) vars[39] = ret; } catch(e) { }
try { vars[45].foo = Infinity; } catch(e) { }
try { var ret = VBArray.prototype.toArray.call(vars[45]); if(ret) vars[8] = ret; } catch(e) { }
try { var ret = vars[12].input; if(ret) vars[6] = ret; } catch(e) { }
//endjs
CollectGarbage();
return vars[36];

}

function f8(arg7, arg8, arg9) {
runcount.f8++; if(runcount.f8>2) return;
//alert(8);
//beginjs
try { var ret = RegExp.lastIndex; if(ret) vars[93] = ret; } catch(e) { }
try { vars[57][100] = vars[52]; } catch(e) { }
try { vars[3].toString = f0; } catch(e) { }
try { var ret = decodeURI(vars[98]); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = Boolean(); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = Date.parse(vars[36]); if(ret) vars[44] = ret; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[39], vars[49], vars[35]); if(ret) vars[67] = ret; } catch(e) { }
try { var ret = vars[46].valueOf; if(ret) vars[30] = ret; } catch(e) { }
try { vars[23] = document.createElement("foo"); } catch(e) { }
try { var ret = vars[76].callee; if(ret) vars[98] = ret; } catch(e) { }
try { var ret = vars[27][1000]; if(ret) vars[5] = ret; } catch(e) { }
try { vars[15] = RegExp; } catch(e) { }
try { var ret = vars[95].constructor; if(ret) vars[52] = ret; } catch(e) { }
try { var ret = new ActiveXObject(vars[52]); if(ret) vars[81] = ret; } catch(e) { }
try { vars[47].toJSON = vars[89]; } catch(e) { }
try { var ret = new Error(vars[56]); if(ret) vars[20] = ret; } catch(e) { }
try { vars[42].toString = f3; } catch(e) { }
try { var ret = vars[12].toString; if(ret) vars[57] = ret; } catch(e) { }
try { var ret = Object.getOwnPropertyDescriptor(vars[97], vars[9]); if(ret) vars[97] = ret; } catch(e) { }
try { var ret = new Array(true, false, false); if(ret) vars[11] = ret; } catch(e) { }
try { var ret = Enumerator('a'); if(ret) vars[49] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[46], vars[43]); if(ret) vars[53] = ret; } catch(e) { }
try { var ret = GetObject(vars[53]); if(ret) vars[50] = ret; } catch(e) { }
try { var ret = parseFloat(vars[83]); if(ret) vars[40] = ret; } catch(e) { }
try { vars[74] = {}; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[68]); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = vars[58].call(vars[9], arg9, vars[72], vars[62]); if(ret) vars[64] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[68], arg3, vars[62]); if(ret) vars[39] = ret; } catch(e) { }
try { var ret = new ReferenceError('a', vars[45], false); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleString.call(vars[65]); if(ret) vars[38] = ret; } catch(e) { }
try { var ret = VBArray.prototype.lbound.call(vars[55], vars[33]); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = new Date(vars[90]); if(ret) vars[6] = ret; } catch(e) { }
try { var ret = VBArray.prototype.dimensions.call(vars[45]); if(ret) vars[35] = ret; } catch(e) { }
try { vars[13].source = Infinity; } catch(e) { }
try { var ret = vars[76].toPrecision; if(ret) vars[45] = ret; } catch(e) { }
try { var ret = VBArray.prototype.lbound.call(vars[80], 'a'); if(ret) vars[17] = ret; } catch(e) { }
try { var ret = String.prototype.strike.call(vars[51], false); if(ret) vars[24] = ret; } catch(e) { }
try { vars[93] = document.createElement("foo"); } catch(e) { }
try { var ret = vars[0].toPrecision; if(ret) vars[74] = ret; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[76], vars[86]); if(ret) vars[5] = ret; } catch(e) { }
try { var ret = vars[65].options; if(ret) vars[39] = ret; } catch(e) { }
try { vars[82].constructor = true; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[32], f2); if(ret) vars[42] = ret; } catch(e) { }
try { var ret = vars[14].call(vars[57], arg8, vars[93], Infinity, vars[21], 'a'); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = vars[86].toLocaleString; if(ret) vars[60] = ret; } catch(e) { }
try { var ret = vars[20][1000]; if(ret) vars[58] = ret; } catch(e) { }
try { var ret = new Error(true); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[91], vars[33]); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[49], vars[46]); if(ret) vars[99] = ret; } catch(e) { }
try { var ret = vars[18].global; if(ret) vars[15] = ret; } catch(e) { }
try { var ret = vars[0].arguments; if(ret) vars[79] = ret; } catch(e) { }
try { var ret = Object.getOwnPropertyDescriptor(vars[2], arg9); if(ret) vars[31] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[16], false); if(ret) vars[25] = ret; } catch(e) { }
try { RegExp.input = false; } catch(e) { }
try { var ret = new Error(); if(ret) vars[92] = ret; } catch(e) { }
try { vars[1].source = vars[94]; } catch(e) { }
try { var ret = RegExp.$8; if(ret) vars[43] = ret; } catch(e) { }
try { var ret = RegExp.$2; if(ret) vars[21] = ret; } catch(e) { }
try { vars[89][1] = vars[64]; } catch(e) { }
try { var ret = String.prototype.split.call(vars[76], vars[52], vars[80]); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[67]); if(ret) vars[6] = ret; } catch(e) { }
try { var ret = ReferenceError(2, arg2, vars[25]); if(ret) vars[48] = ret; } catch(e) { }
try { vars[83] = ActiveXObject; } catch(e) { }
try { var ret = Array.prototype.unshift.call(vars[76], 2147483647, -1); if(ret) vars[0] = ret; } catch(e) { }
try { vars[65] = {}; } catch(e) { }
try { vars[52].toString = f5; } catch(e) { }
try { var ret = encodeURIComponent(Infinity); if(ret) vars[4] = ret; } catch(e) { }
try { var ret = String.prototype.match.call(vars[33], vars[11]); if(ret) vars[18] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[17], Array(4097).join(String.fromCharCode(115, 61)) + Array(65537).join(String.fromCharCode(91, 112, 120)) + Array(4097).join(String.fromCharCode(106, 112))); } catch(e) { }
try { var ret = new Date(0); if(ret) vars[98] = ret; } catch(e) { }
try { vars[30].lastIndex = Infinity; } catch(e) { }
try { var ret = vars[95].global; if(ret) vars[85] = ret; } catch(e) { }
try { var ret = RegExp.input; if(ret) vars[68] = ret; } catch(e) { }
try { var ret = DblFromLus(vars[43]); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = RegExp.$1; if(ret) vars[55] = ret; } catch(e) { }
try { var ret = vars[72][1]; if(ret) vars[39] = ret; } catch(e) { }
try { var ret = vars[80].toLocaleString; if(ret) vars[65] = ret; } catch(e) { }
try { var ret = vars[15].prototype; if(ret) vars[9] = ret; } catch(e) { }
try { var ret = arguments; if(ret) vars[40] = ret; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[31], true, vars[2]); if(ret) vars[14] = ret; } catch(e) { }
try { vars[67] = {}; } catch(e) { }
try { var ret = Debug.write(vars[92]); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[62], vars[82], vars[6], vars[12], vars[75]); if(ret) vars[23] = ret; } catch(e) { }
try { vars[72] = Enumerator; } catch(e) { }
try { var ret = Date.prototype.toLocaleString.call(vars[31]); if(ret) vars[50] = ret; } catch(e) { }
try { var ret = JSON.stringify(arg6); if(ret) vars[66] = ret; } catch(e) { }
try { vars[92].toPrecision = f2; } catch(e) { }
try { var ret = new Array(); if(ret) vars[64] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[16], -1, vars[27]); if(ret) vars[64] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[49]); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = vars[94].toFixed; if(ret) vars[12] = ret; } catch(e) { }
try { vars[4].toJSON = arg7; } catch(e) { }
try { var ret = String.prototype.charAt.call(vars[69], 0); if(ret) vars[74] = ret; } catch(e) { }
try { vars[87].toArray = f1; } catch(e) { }
try { var ret = Array(Infinity, vars[41], vars[85]); if(ret) vars[62] = ret; } catch(e) { }
try { var ret = new URIError(vars[24], true, vars[34]); if(ret) vars[91] = ret; } catch(e) { }
try { var ret = RegExp.leftContext; if(ret) vars[41] = ret; } catch(e) { }
try { var ret = vars[77][1000000]; if(ret) vars[80] = ret; } catch(e) { }
try { var ret = VBArray.prototype.ubound.call(vars[17], vars[4]); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = GetObject(false); if(ret) vars[15] = ret; } catch(e) { }
try { var ret = new vars[9](vars[18], vars[2], vars[48], 536870911, true); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = Boolean.prototype.toString.call(vars[65]); if(ret) vars[24] = ret; } catch(e) { }
try { var ret = vars[22][4]; if(ret) vars[64] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[44], vars[86], vars[64]); if(ret) vars[36] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[94], Infinity); } catch(e) { }
try { var ret = new Date(); if(ret) vars[40] = ret; } catch(e) { }
try { var ret = vars[86][0]; if(ret) vars[4] = ret; } catch(e) { }
try { var ret = unescape(vars[11]); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[69], vars[93], 'a', vars[44], vars[22]); if(ret) vars[49] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.moveNext.call(vars[25]); if(ret) vars[35] = ret; } catch(e) { }
try { vars[82].caller = vars[8]; } catch(e) { }
try { vars[44] = Date; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[92]); if(ret) vars[61] = ret; } catch(e) { }
try { var ret = vars[85].lastIndex; if(ret) vars[11] = ret; } catch(e) { }
try { var ret = new ActiveXObject(true); if(ret) vars[81] = ret; } catch(e) { }
try { var ret = RegExp.$1; if(ret) vars[74] = ret; } catch(e) { }
try { var ret = RegExp.$8; if(ret) vars[61] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[30], -1); if(ret) vars[8] = ret; } catch(e) { }
try { var ret = Object.defineProperty(vars[32], '4294967296', { configurable: vars[48] }); if(ret) vars[95] = ret; } catch(e) { }
try { vars[47][1000000] = false; } catch(e) { }
try { RegExp.prototype.exec.call(vars[34], true); } catch(e) { }
try { var ret = Array.prototype.toString.call(vars[99]); if(ret) vars[69] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[84], vars[1], false); if(ret) vars[44] = ret; } catch(e) { }
try { vars[38].toString = vars[28]; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[34], vars[45]); if(ret) vars[23] = ret; } catch(e) { }
try { var ret = EncodeURI(vars[20]); if(ret) vars[45] = ret; } catch(e) { }
try { vars[51] = Enumerator; } catch(e) { }
try { vars[62].toExponential = f4; } catch(e) { }
try { var ret = Array.prototype.pop.call(vars[87]); if(ret) vars[53] = ret; } catch(e) { }
try { vars[58].callee = arg3; } catch(e) { }
try { var ret = new Enumerator(true); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = RegExp.$5; if(ret) vars[56] = ret; } catch(e) { }
try { var ret = RegExp.$8; if(ret) vars[38] = ret; } catch(e) { }
try { var ret = Array(257).join(String.fromCharCode(66, 34, 69)) + Array(65).join(String.fromCharCode(127, 121, 74)) + Array(1025).join(String.fromCharCode(51, 23)); if(ret) vars[17] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[76], true); if(ret) vars[98] = ret; } catch(e) { }
try { vars[99].toString = f0; } catch(e) { }
try { var ret = new Enumerator(); if(ret) vars[83] = ret; } catch(e) { }
try { vars[36] = Error; } catch(e) { }
try { var ret = JSON.stringify(10); if(ret) vars[44] = ret; } catch(e) { }
try { var ret = vars[46].options; if(ret) vars[33] = ret; } catch(e) { }
try { var ret = Object.getOwnPropertyDescriptor(vars[58], vars[56]); if(ret) vars[26] = ret; } catch(e) { }
try { var ret = new Error(false); if(ret) vars[8] = ret; } catch(e) { }
try { var ret = new Error(); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = vars[92][3]; if(ret) vars[32] = ret; } catch(e) { }
try { vars[31] = {}; } catch(e) { }
try { vars[62].toPrecision = f9; } catch(e) { }
try { var ret = RegExp.$4; if(ret) vars[55] = ret; } catch(e) { }
try { var ret = new Enumerator(); if(ret) vars[29] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.moveFirst.call(vars[97]); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleUpperCase.call(vars[22]); if(ret) vars[78] = ret; } catch(e) { }
try { var ret = DblFromLus(true); if(ret) vars[56] = ret; } catch(e) { }
try { var ret = Date.parse(Infinity); if(ret) vars[8] = ret; } catch(e) { }
try { var ret = Array.prototype.shift.call(vars[38]); if(ret) vars[78] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[74], 100); if(ret) vars[95] = ret; } catch(e) { }
try { var ret = Date.UTC(vars[82], true, vars[24], arg2, vars[58], vars[63], false); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = Enumerator(vars[4]); if(ret) vars[76] = ret; } catch(e) { }
try { vars[4].constructor = vars[10]; } catch(e) { }
try { vars[51].valueOf = f1; } catch(e) { }
try { vars[46].toExponential = arg3; } catch(e) { }
try { var ret = vars[75].toPrecision; if(ret) vars[30] = ret; } catch(e) { }
try { var ret = String.prototype.match.call(vars[44], vars[18]); if(ret) vars[64] = ret; } catch(e) { }
try { vars[49].toString = true; } catch(e) { }
try { var ret = vars[50].constructor; if(ret) vars[19] = ret; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[39], f3); if(ret) vars[25] = ret; } catch(e) { }
try { var ret = new Array(); if(ret) vars[69] = ret; } catch(e) { }
try { vars[69].toFixed = false; } catch(e) { }
try { vars[98].constructor = true; } catch(e) { }
try { var ret = parseInt(true); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[53], arg5); if(ret) vars[25] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleTimeString.call(vars[39]); if(ret) vars[26] = ret; } catch(e) { }
try { var ret = String.prototype.localeCompare.call(vars[57], vars[56]); if(ret) vars[64] = ret; } catch(e) { }
try { var ret = vars[85].caller; if(ret) vars[70] = ret; } catch(e) { }
try { vars[98] = Boolean; } catch(e) { }
try { var ret = vars[60].call(vars[69], vars[96], vars[94], vars[4], false, vars[21]); if(ret) vars[47] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[15], vars[0]); if(ret) vars[53] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[79], arg7); if(ret) vars[85] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[3], vars[27], true, vars[80]); if(ret) vars[30] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[3], vars[75], Infinity); } catch(e) { }
try { var ret = VBArray.prototype.dimensions.call(vars[46]); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = RegExp.rightContext; if(ret) vars[84] = ret; } catch(e) { }
try { var ret = VBArray.prototype.dimensions.call(vars[37]); if(ret) vars[94] = ret; } catch(e) { }
try { var ret = parseInt(vars[63]); if(ret) vars[67] = ret; } catch(e) { }
try { var ret = vars[39].constructor; if(ret) vars[74] = ret; } catch(e) { }
try { vars[35].input = vars[17]; } catch(e) { }
try { var ret = new Error(); if(ret) vars[23] = ret; } catch(e) { }
try { vars[85][1000] = vars[74]; } catch(e) { }
try { var ret = decodeURIComponent(Infinity); if(ret) vars[16] = ret; } catch(e) { }
try { var ret = vars[23][1000]; if(ret) vars[83] = ret; } catch(e) { }
try { vars[31] = new Array(1); } catch(e) { }
try { var ret = Error(vars[94]); if(ret) vars[24] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[54], false); } catch(e) { }
try { var ret = vars[87].input; if(ret) vars[73] = ret; } catch(e) { }
try { vars[25] = Enumerator; } catch(e) { }
try { var ret = Object.defineProperty(vars[78], 'prototype', { value: vars[15], enumerable: vars[11], set: f8 }); if(ret) vars[31] = ret; } catch(e) { }
try { vars[80].toArray = f6; } catch(e) { }
try { var ret = new RegExp(Array(257).join(String.fromCharCode(53, 113)), 'm'); if(ret) vars[80] = ret; } catch(e) { }
try { var ret = encodeURIComponent(vars[92]); if(ret) vars[8] = ret; } catch(e) { }
try { vars[61].callee = vars[23]; } catch(e) { }
try { vars[97][0] = vars[67]; } catch(e) { }
try { var ret = new Array(true); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = vars[66].input; if(ret) vars[33] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[35], Array(4097).join(String.fromCharCode(16))); } catch(e) { }
try { var ret = Date.prototype.getTimezoneOffset.call(vars[91]); if(ret) vars[12] = ret; } catch(e) { }
try { vars[70] = document.createElement("foo"); } catch(e) { }
try { var ret = new Array(); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = vars[86][0]; if(ret) vars[0] = ret; } catch(e) { }
try { var ret = String.prototype.toLowerCase.call(vars[15]); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[93], vars[62], vars[18], vars[55], vars[85]); if(ret) vars[20] = ret; } catch(e) { }
try { var ret = vars[66].call(vars[9], vars[52], Infinity, vars[78]); if(ret) vars[82] = ret; } catch(e) { }
try { var ret = ActiveXObject(true); if(ret) vars[47] = ret; } catch(e) { }
try { eval(Array(65537).join(String.fromCharCode(58, 66, 24)) + Array(4097).join(String.fromCharCode(2, 121, 7)) + Array(257).join(String.fromCharCode(10))); } catch(e) { }
try { var ret = vars[67].toFixed; if(ret) vars[11] = ret; } catch(e) { }
try { var ret = Error(arg7); if(ret) vars[56] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[52], Infinity, f3); if(ret) vars[3] = ret; } catch(e) { }
try { vars[89] = RegExp; } catch(e) { }
try { vars[1] = this; } catch(e) { }
try { var ret = vars[40].foo; if(ret) vars[45] = ret; } catch(e) { }
try { vars[18] = {}; } catch(e) { }
try { var ret = new RegExp(); if(ret) vars[23] = ret; } catch(e) { }
try { var ret = Array(true, vars[39], vars[22]); if(ret) vars[22] = ret; } catch(e) { }
try { vars[23].length = false; } catch(e) { }
try { var ret = LuHigh('a'); if(ret) vars[63] = ret; } catch(e) { }
try { var ret = Object.defineProperty(vars[70], '10', { value: 'a', get: f3, enumerable: vars[93] }); if(ret) vars[12] = ret; } catch(e) { }
try { var ret = new ActiveXObject(Infinity); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = VBArray.prototype.lbound.call(vars[5], arg6); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = Error(arg5, vars[9], 'a'); if(ret) vars[50] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleUpperCase.call(vars[36]); if(ret) vars[67] = ret; } catch(e) { }
try { var ret = Array.prototype.pop.call(vars[79]); if(ret) vars[92] = ret; } catch(e) { }
try { vars[39] = document.createElement("foo"); } catch(e) { }
try { var ret = Object.getOwnPropertyDescriptor(vars[33], 4); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[72]); if(ret) vars[29] = ret; } catch(e) { }
try { var ret = escape(false); if(ret) vars[16] = ret; } catch(e) { }
try { var ret = new ActiveXObject(vars[48]); if(ret) vars[73] = ret; } catch(e) { }
try { var ret = Date.prototype.toJSON.call(vars[3]); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = vars[50].input; if(ret) vars[84] = ret; } catch(e) { }
try { var ret = RegExp.lastIndex; if(ret) vars[64] = ret; } catch(e) { }
try { var ret = RuntimeObject(); if(ret) vars[45] = ret; } catch(e) { }
try { var ret = new VBArray(vars[13]); if(ret) vars[91] = ret; } catch(e) { }
try { vars[72].toJSON = false; } catch(e) { }
try { vars[37] = Array; } catch(e) { }
try { var ret = new EvalError(false, arg5, Infinity); if(ret) vars[38] = ret; } catch(e) { }
try { var ret = decodeURIComponent('a'); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[68], Infinity, vars[76]); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[75], Infinity); if(ret) vars[34] = ret; } catch(e) { }
try { var ret = JSON.stringify(false); if(ret) vars[50] = ret; } catch(e) { }
try { var ret = vars[59].length; if(ret) vars[13] = ret; } catch(e) { }
try { vars[75][4] = vars[46]; } catch(e) { }
try { var ret = vars[5].toLocaleString; if(ret) vars[39] = ret; } catch(e) { }
try { var ret = RegExp.index; if(ret) vars[91] = ret; } catch(e) { }
try { var ret = Debug.writeln(vars[67], vars[42], vars[35]); if(ret) vars[91] = ret; } catch(e) { }
try { var ret = ActiveXObject(vars[83], false); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = Boolean(); if(ret) vars[29] = ret; } catch(e) { }
try { vars[96] = Object; } catch(e) { }
try { var ret = vars[34].toLocaleString; if(ret) vars[5] = ret; } catch(e) { }
try { var ret = new VBArray(vars[60]); if(ret) vars[41] = ret; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[40], vars[36]); if(ret) vars[25] = ret; } catch(e) { }
try { var ret = Array.prototype.reverse.call(vars[44]); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = new Enumerator(); if(ret) vars[14] = ret; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[34], vars[86]); if(ret) vars[9] = ret; } catch(e) { }
try { RegExp.input = 5; } catch(e) { }
try { vars[56] = new Array(10); } catch(e) { }
try { var ret = new RangeError(true, vars[56], vars[30]); if(ret) vars[24] = ret; } catch(e) { }
try { vars[65].toLocaleString = f1; } catch(e) { }
try { var ret = Array(vars[60], false, vars[70]); if(ret) vars[59] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[91]); if(ret) vars[39] = ret; } catch(e) { }
try { var ret = vars[91][-1]; if(ret) vars[74] = ret; } catch(e) { }
try { vars[49].toJSON = f0; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[21]); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = vars[51][0]; if(ret) vars[33] = ret; } catch(e) { }
try { var ret = Function.prototype.toString.call(vars[37]); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = Enumerator(vars[65]); if(ret) vars[23] = ret; } catch(e) { }
try { vars[16] = {}; } catch(e) { }
try { var ret = vars[16].prototype; if(ret) vars[48] = ret; } catch(e) { }
try { var ret = new ReferenceError(true, vars[51], false); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = ReferenceError(vars[44], true, 'a'); if(ret) vars[11] = ret; } catch(e) { }
try { var ret = Array(65537).join(String.fromCharCode(24)) + Array(257).join(String.fromCharCode(40, 115, 93)) + Array(65).join(String.fromCharCode(73, 96, 20)); if(ret) vars[65] = ret; } catch(e) { }
try { var ret = vars[35].caller; if(ret) vars[18] = ret; } catch(e) { }
try { var ret = Boolean.prototype.toString.call(vars[58]); if(ret) vars[47] = ret; } catch(e) { }
try { var ret = RegExp.input; if(ret) vars[17] = ret; } catch(e) { }
try { var ret = vars[54].lastIndex; if(ret) vars[88] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[72], arg3, vars[60], arg1); if(ret) vars[70] = ret; } catch(e) { }
try { var ret = RegExp.lastIndex; if(ret) vars[58] = ret; } catch(e) { }
try { var ret = new Enumerator(vars[7]); if(ret) vars[51] = ret; } catch(e) { }
try { vars[78].toArray = f2; } catch(e) { }
try { vars[61].valueOf = vars[66]; } catch(e) { }
try { var ret = Enumerator(vars[16]); if(ret) vars[99] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[82], arg5); if(ret) vars[70] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[52], vars[25], 100); if(ret) vars[91] = ret; } catch(e) { }
try { var ret = Enumerator(false); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = vars[27].toPrecision; if(ret) vars[48] = ret; } catch(e) { }
try { var ret = vars[9].global; if(ret) vars[90] = ret; } catch(e) { }
try { eval(Array(65537).join(String.fromCharCode(119, 9, 126)) + Array(4097).join(String.fromCharCode(33, 34, 32)) + Array(65537).join(String.fromCharCode(58))); } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[38], 'a', vars[10], false, false); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = Array.prototype.toLocaleString.call(vars[22]); if(ret) vars[20] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[5], Array(257).join(String.fromCharCode(21, 49, 86)), 'i'); } catch(e) { }
try { vars[30].toPrecision = vars[5]; } catch(e) { }
try { var ret = new Array(); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = Date.prototype.getFullYear.call(vars[64]); if(ret) vars[93] = ret; } catch(e) { }
try { vars[53] = {}; } catch(e) { }
try { vars[46].caller = 'a'; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[59], 5); if(ret) vars[0] = ret; } catch(e) { }
try { function f_inner_42() { return f3(); } vars[50] = f_inner_42; } catch(e) { }
try { var ret = RegExp.$5; if(ret) vars[68] = ret; } catch(e) { }
try { var ret = Array.prototype.reverse.call(vars[21]); if(ret) vars[2] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[56]); if(ret) vars[77] = ret; } catch(e) { }
try { var ret = new vars[87](vars[59], vars[16], vars[87], true, vars[66]); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = ActiveXObject(false); if(ret) vars[28] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[43], Infinity); } catch(e) { }
try { vars[95].lastIndex = vars[66]; } catch(e) { }
try { function f_inner_39() { return f8(); } vars[59] = f_inner_39; } catch(e) { }
try { var ret = VBArray.prototype.ubound.call(vars[95], vars[4]); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = vars[53].constructor; if(ret) vars[49] = ret; } catch(e) { }
try { var ret = RegExp.$8; if(ret) vars[62] = ret; } catch(e) { }
try { vars[66] = new Array(0); } catch(e) { }
try { RegExp.input = vars[4]; } catch(e) { }
try { var ret = Array(1073741824, vars[76], arg7); if(ret) vars[67] = ret; } catch(e) { }
try { var ret = String.prototype.localeCompare.call(vars[68], true); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = new RegExp(Array(1025).join(String.fromCharCode(79)) + Array(17).join(String.fromCharCode(114)) + Array(4097).join(String.fromCharCode(126, 81, 0))); if(ret) vars[22] = ret; } catch(e) { }
try { var ret = new Date(); if(ret) vars[72] = ret; } catch(e) { }
try { vars[35] = Date; } catch(e) { }
try { var ret = Enumerator.prototype.atEnd.call(vars[81]); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = Array.prototype.unshift.call(vars[18], vars[14], vars[83]); if(ret) vars[71] = ret; } catch(e) { }
try { var ret = vars[18].lastIndex; if(ret) vars[92] = ret; } catch(e) { }
try { vars[63].foo = 'a'; } catch(e) { }
try { var ret = vars[53].callee; if(ret) vars[90] = ret; } catch(e) { }
try { vars[76] = {}; } catch(e) { }
try { vars[92] = Array; } catch(e) { }
try { var ret = RegExp.$4; if(ret) vars[22] = ret; } catch(e) { }
try { var ret = RegExp.index; if(ret) vars[88] = ret; } catch(e) { }
try { var ret = RegExp.$9; if(ret) vars[63] = ret; } catch(e) { }
try { vars[65] = Error; } catch(e) { }
try { var ret = new Date(false); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = new Array(); if(ret) vars[61] = ret; } catch(e) { }
try { var ret = VBArray.prototype.toArray.call(vars[90]); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[90], true, vars[3]); if(ret) vars[5] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleTimeString.call(vars[5]); if(ret) vars[53] = ret; } catch(e) { }
try { vars[52].constructor = 'a'; } catch(e) { }
try { vars[75].toString = f4; } catch(e) { }
try { var ret = vars[78][3]; if(ret) vars[3] = ret; } catch(e) { }
try { vars[72] = Boolean; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[81], vars[90]); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = Function.prototype.toString.call(vars[54]); if(ret) vars[65] = ret; } catch(e) { }
try { var ret = String.prototype.toUpperCase.call(vars[16]); if(ret) vars[65] = ret; } catch(e) { }
try { var ret = Date.prototype.getFullYear.call(vars[86]); if(ret) vars[19] = ret; } catch(e) { }
try { vars[49] = Object; } catch(e) { }
try { var ret = new Array(vars[31], false, vars[49]); if(ret) vars[5] = ret; } catch(e) { }
try { var ret = Debug.write(vars[81]); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[15], vars[79]); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = ReferenceError('a', 'a', arg6); if(ret) vars[95] = ret; } catch(e) { }
try { vars[93][1] = false; } catch(e) { }
try { var ret = Debug.write(vars[2]); if(ret) vars[74] = ret; } catch(e) { }
try { vars[17].lastIndex = true; } catch(e) { }
try { var ret = Date.parse(vars[86]); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = RegExp.index; if(ret) vars[66] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleString.call(vars[73]); if(ret) vars[39] = ret; } catch(e) { }
try { vars[13].input = 'a'; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[8], arg3, vars[46]); if(ret) vars[58] = ret; } catch(e) { }
try { var ret = new ReferenceError(vars[86], true, Infinity); if(ret) vars[41] = ret; } catch(e) { }
try { var ret = Boolean(); if(ret) vars[62] = ret; } catch(e) { }
try { var ret = vars[25].callee; if(ret) vars[38] = ret; } catch(e) { }
try { vars[80] = document.createElement("foo"); Object.defineProperty(vars[80], "source", {get: f2, set: f2} ); } catch(e) { }
try { var ret = Array.prototype.join.call(vars[2]); if(ret) vars[38] = ret; } catch(e) { }
try { vars[20].source = arg9; } catch(e) { }
try { vars[86].toJSON = f4; } catch(e) { }
try { var ret = new Array(); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = new VBArray(vars[56]); if(ret) vars[75] = ret; } catch(e) { }
try { var ret = RegExp(Array(65537).join(String.fromCharCode(13, 57, 53)) + Array(4097).join(String.fromCharCode(98)) + Array(17).join(String.fromCharCode(20))); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[44], vars[88]); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = new Array(); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = RegExp.$7; if(ret) vars[45] = ret; } catch(e) { }
try { var ret = vars[3].toString; if(ret) vars[14] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[5]); if(ret) vars[16] = ret; } catch(e) { }
try { var ret = VBArray.prototype.ubound.call(vars[26], vars[36]); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = vars[58].call(vars[96], vars[15], vars[84], 1000000, vars[18], true); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = vars[8].toExponential; if(ret) vars[85] = ret; } catch(e) { }
try { var ret = ReferenceError(4, vars[0], vars[52]); if(ret) vars[27] = ret; } catch(e) { }
try { vars[54] = {}; } catch(e) { }
try { var ret = Array('a', arg8, vars[82]); if(ret) vars[79] = ret; } catch(e) { }
try { var ret = Error(); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = String.prototype.toLowerCase.call(vars[53]); if(ret) vars[73] = ret; } catch(e) { }
try { vars[89].toLocaleString = vars[49]; } catch(e) { }
try { var ret = String.prototype.localeCompare.call(vars[24], vars[58]); if(ret) vars[19] = ret; } catch(e) { }
try { var ret = new Date('a', vars[29], vars[51], vars[23], false, vars[36], Infinity); if(ret) vars[59] = ret; } catch(e) { }
try { vars[57] = {}; } catch(e) { }
try { var ret = vars[71].caller; if(ret) vars[68] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleLowerCase.call(vars[22]); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = String.prototype.charAt.call(vars[88], vars[32]); if(ret) vars[49] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[45], 4294967296); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = String.prototype.match.call(vars[86], vars[82]); if(ret) vars[22] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[59], Array(257).join(String.fromCharCode(118, 114, 39)) + Array(1025).join(String.fromCharCode(97, 62, 50)), 'ii'); } catch(e) { }
try { var ret = vars[50][4]; if(ret) vars[96] = ret; } catch(e) { }
try { var ret = vars[10].lastIndex; if(ret) vars[97] = ret; } catch(e) { }
try { vars[58].toPrecision = f1; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[85], vars[35]); if(ret) vars[52] = ret; } catch(e) { }
try { var ret = parseFloat(vars[23]); if(ret) vars[59] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[97], Array(17).join(String.fromCharCode(118, 30)) + Array(4097).join(String.fromCharCode(93, 74, 122)), 'mi'); } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[88]); if(ret) vars[73] = ret; } catch(e) { }
try { var ret = VBArray.prototype.lbound.call(vars[56], vars[26]); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = vars[35].toExponential; if(ret) vars[17] = ret; } catch(e) { }
try { var ret = VBArray.prototype.ubound.call(vars[2], false); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = new vars[19](false, vars[29], arg2, vars[20], vars[89]); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[58], true, vars[81]); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[69], vars[60]); if(ret) vars[96] = ret; } catch(e) { }
try { vars[41].valueOf = f1; } catch(e) { }
try { var ret = vars[57].call(vars[30]); if(ret) vars[90] = ret; } catch(e) { }
try { vars[51][1000000] = false; } catch(e) { }
try { var ret = String.prototype.match.call(vars[72], vars[31]); if(ret) vars[83] = ret; } catch(e) { }
try { var ret = GetObject(vars[0], 1000000); if(ret) vars[23] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[40], vars[52], vars[37]); if(ret) vars[31] = ret; } catch(e) { }
try { var ret = RegExp.$6; if(ret) vars[31] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[26], vars[24], vars[30]); } catch(e) { }
try { var ret = Array.prototype.push.call(vars[80], Infinity); if(ret) vars[85] = ret; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[9], arg3); if(ret) vars[34] = ret; } catch(e) { }
try { var ret = new Array(true, vars[78], false); if(ret) vars[45] = ret; } catch(e) { }
try { var ret = decodeURIComponent(true); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = new EvalError(vars[81], false, vars[21]); if(ret) vars[2] = ret; } catch(e) { }
try { var ret = new URIError(vars[95], Infinity, false); if(ret) vars[34] = ret; } catch(e) { }
try { var ret = unescape(vars[86]); if(ret) vars[20] = ret; } catch(e) { }
try { var ret = new VBArray(); if(ret) vars[14] = ret; } catch(e) { }
try { var ret = vars[63].callee; if(ret) vars[64] = ret; } catch(e) { }
try { var ret = Array.prototype.reverse.call(vars[60]); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = vars[58].caller; if(ret) vars[11] = ret; } catch(e) { }
try { vars[78] = new Array(1000); } catch(e) { }
try { var ret = Error(vars[93], vars[56], vars[74]); if(ret) vars[40] = ret; } catch(e) { }
try { var ret = Array(); if(ret) vars[47] = ret; } catch(e) { }
try { var ret = new vars[59].call(vars[59], vars[32], vars[91], Infinity, true, vars[89]); if(ret) vars[29] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[68], Array(4097).join(String.fromCharCode(27, 80, 109))); } catch(e) { }
try { var ret = Object.defineProperty(vars[46], 'toString', { configurable: vars[11], enumerable: true, writable: 0 }); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = RegExp.$5; if(ret) vars[23] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[20], arg8, vars[60]); } catch(e) { }
try { vars[79].toLocaleString = f9; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[58], vars[9], true); if(ret) vars[26] = ret; } catch(e) { }
try { var ret = Array(65537).join(String.fromCharCode(1, 41)); if(ret) vars[41] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleLowerCase.call(vars[42]); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = new Date(); if(ret) vars[62] = ret; } catch(e) { }
try { var ret = new RegExp(Array(17).join(String.fromCharCode(45)) + Array(17).join(String.fromCharCode(82, 22, 101)) + Array(1025).join(String.fromCharCode(52, 118, 113)), 'i'); if(ret) vars[59] = ret; } catch(e) { }
try { var ret = vars[89][1000]; if(ret) vars[85] = ret; } catch(e) { }
try { var ret = vars[19].global; if(ret) vars[47] = ret; } catch(e) { }
try { var ret = []; if(ret) vars[73] = ret; } catch(e) { }
try { var ret = RegExp.$7; if(ret) vars[66] = ret; } catch(e) { }
try { var ret = vars[36].constructor; if(ret) vars[9] = ret; } catch(e) { }
try { vars[98].valueOf = vars[26]; } catch(e) { }
try { vars[28] = JSON; } catch(e) { }
try { vars[45] = ActiveXObject; } catch(e) { }
try { RegExp.prototype.exec.call(vars[99], Array(4097).join(String.fromCharCode(117, 82))); } catch(e) { }
try { vars[66] = Function; } catch(e) { }
try { vars[84].prototype = true; } catch(e) { }
try { var ret = Object.defineProperty(vars[86], '10', { writable: 'a', writable: true, enumerable: 'a' }); if(ret) vars[59] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[54], vars[83], vars[84]); if(ret) vars[58] = ret; } catch(e) { }
try { vars[72] = {}; } catch(e) { }
try { var ret = String.prototype.search.call(vars[38], 'a'); if(ret) vars[97] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[6], 1); if(ret) vars[88] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[93], arg2, 1000000); if(ret) vars[32] = ret; } catch(e) { }
try { var ret = Date.prototype.toJSON.call(vars[61]); if(ret) vars[87] = ret; } catch(e) { }
try { vars[10].toArray = f4; } catch(e) { }
try { var ret = new RuntimeObject(); if(ret) vars[89] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[32], vars[86]); if(ret) vars[40] = ret; } catch(e) { }
try { var ret = RegExp.input; if(ret) vars[72] = ret; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[21], vars[71]); if(ret) vars[80] = ret; } catch(e) { }
try { var ret = vars[4].lastIndex; if(ret) vars[64] = ret; } catch(e) { }
try { var ret = Array.prototype.reverse.call(vars[14]); if(ret) vars[44] = ret; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[80], vars[96], true); if(ret) vars[91] = ret; } catch(e) { }
try { var ret = RuntimeObject(); if(ret) vars[26] = ret; } catch(e) { }
try { vars[28].toFixed = f3; } catch(e) { }
try { var ret = Array.prototype.shift.call(vars[22]); if(ret) vars[33] = ret; } catch(e) { }
try { vars[97] = {}; } catch(e) { }
try { var ret = RegExp(Array(4097).join(String.fromCharCode(65)) + Array(257).join(String.fromCharCode(101, 64, 103))); if(ret) vars[65] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleUpperCase.call(vars[40]); if(ret) vars[20] = ret; } catch(e) { }
try { vars[54] = ActiveXObject; } catch(e) { }
try { var ret = GetObject(100, false); if(ret) vars[78] = ret; } catch(e) { }
try { var ret = Debug.writeln(vars[16], vars[87], 'a'); if(ret) vars[6] = ret; } catch(e) { }
try { var ret = GetObject(100, false); if(ret) vars[79] = ret; } catch(e) { }
try { var ret = Array.prototype.toLocaleString.call(vars[24]); if(ret) vars[52] = ret; } catch(e) { }
try { vars[42] = new Array(100); } catch(e) { }
try { var ret = VBArray(); if(ret) vars[46] = ret; } catch(e) { }
try { var ret = vars[37].options; if(ret) vars[69] = ret; } catch(e) { }
try { var ret = vars[81].options; if(ret) vars[11] = ret; } catch(e) { }
try { var ret = Enumerator(); if(ret) vars[13] = ret; } catch(e) { }
try { var ret = Function.prototype.toString.call(vars[73]); if(ret) vars[15] = ret; } catch(e) { }
try { var ret = String.prototype.anchor.call(vars[94], vars[11]); if(ret) vars[29] = ret; } catch(e) { }
try { var ret = String.prototype.anchor.call(vars[59], vars[69]); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = EncodeURI(vars[57]); if(ret) vars[94] = ret; } catch(e) { }
try { vars[75].callee = false; } catch(e) { }
try { var ret = RegExp(Array(1025).join(String.fromCharCode(24, 55)), 'm'); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = Array.prototype.reverse.call(vars[39]); if(ret) vars[44] = ret; } catch(e) { }
try { var ret = Object.getOwnPropertyDescriptor(vars[26], 'a'); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = new ActiveXObject(vars[27]); if(ret) vars[77] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[13], Array(257).join(String.fromCharCode(17, 85))); } catch(e) { }
try { var ret = VBArray(); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = Array(false, 'a', false); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[7], false, vars[23], false); if(ret) vars[16] = ret; } catch(e) { }
try { var ret = new Enumerator(arg5); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = vars[89].constructor; if(ret) vars[31] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[55], Array(257).join(String.fromCharCode(6)) + Array(4097).join(String.fromCharCode(125, 123, 17))); } catch(e) { }
try { vars[86] = Enumerator; } catch(e) { }
try { vars[47].toPrecision = vars[13]; } catch(e) { }
try { var ret = Debug.write(vars[60]); if(ret) vars[51] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.atEnd.call(vars[49]); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[34], vars[45], arg6); if(ret) vars[48] = ret; } catch(e) { }
try { vars[19][1000000] = 'a'; } catch(e) { }
//endjs
CollectGarbage();
throw new Error();

}

function f9(arg1, arg2, arg3) {
runcount.f9++; if(runcount.f9>2) return;
//alert(9);
//beginjs
try { var ret = Boolean.prototype.toString.call(vars[16]); if(ret) vars[83] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[49], vars[84], true); } catch(e) { }
try { vars[40][1000000] = vars[55]; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[60], vars[69], false); if(ret) vars[67] = ret; } catch(e) { }
try { vars[60] = new Array(1000); } catch(e) { }
try { var ret = parseInt('a'); if(ret) vars[51] = ret; } catch(e) { }
try { var ret = decodeURI('a'); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = EncodeURI(true); if(ret) vars[51] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[31]); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = new vars[82].call(vars[78], true, Infinity, vars[84], vars[67], 'a'); if(ret) vars[97] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[9], 'a', true); if(ret) vars[46] = ret; } catch(e) { }
try { var ret = new Error(); if(ret) vars[38] = ret; } catch(e) { }
try { var ret = new RangeError(vars[95], 2, vars[12]); if(ret) vars[79] = ret; } catch(e) { }
try { vars[37].toArray = f3; } catch(e) { }
try { vars[18].global = 1; } catch(e) { }
try { vars[93] = ActiveXObject; } catch(e) { }
try { vars[47] = Array; } catch(e) { }
try { var ret = vars[21](false, 100, vars[73], vars[93], vars[49]); if(ret) vars[41] = ret; } catch(e) { }
try { vars[79].toFixed = f6; } catch(e) { }
try { var ret = vars[39].toExponential; if(ret) vars[98] = ret; } catch(e) { }
try { var ret = vars[39].toPrecision; if(ret) vars[48] = ret; } catch(e) { }
try { var ret = vars[84][1000000]; if(ret) vars[43] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[97], arg1); if(ret) vars[46] = ret; } catch(e) { }
try { vars[71].callee = false; } catch(e) { }
try { var ret = RegExp.rightContext; if(ret) vars[68] = ret; } catch(e) { }
try { var ret = new Array(); if(ret) vars[81] = ret; } catch(e) { }
try { vars[14] = Array; } catch(e) { }
try { var ret = Enumerator(); if(ret) vars[61] = ret; } catch(e) { }
try { var ret = Date(Infinity); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = vars[25].call(vars[37], vars[76], vars[59], 1000000, vars[45], false); if(ret) vars[4] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[52], false, vars[69]); } catch(e) { }
try { var ret = RegExp.rightContext; if(ret) vars[62] = ret; } catch(e) { }
try { var ret = vars[90].toFixed; if(ret) vars[39] = ret; } catch(e) { }
try { var ret = vars[83].foo; if(ret) vars[47] = ret; } catch(e) { }
try { var ret = vars[88].caller; if(ret) vars[35] = ret; } catch(e) { }
try { var ret = decodeURI(true); if(ret) vars[92] = ret; } catch(e) { }
try { var ret = vars[68].toString; if(ret) vars[91] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleString.call(vars[72]); if(ret) vars[50] = ret; } catch(e) { }
try { var ret = vars[12].caller; if(ret) vars[87] = ret; } catch(e) { }
try { vars[40] = Boolean; } catch(e) { }
try { vars[26] = {}; } catch(e) { }
try { vars[79].toPrecision = vars[32]; } catch(e) { }
try { var ret = Enumerator(); if(ret) vars[71] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[39], false, vars[58]); if(ret) vars[35] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[49], vars[24]); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = Array.prototype.pop.call(vars[67]); if(ret) vars[17] = ret; } catch(e) { }
try { var ret = vars[53][100]; if(ret) vars[11] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[9], true); if(ret) vars[26] = ret; } catch(e) { }
try { var ret = []; if(ret) vars[74] = ret; } catch(e) { }
try { vars[93].caller = vars[63]; } catch(e) { }
try { var ret = Date.prototype.toLocaleString.call(vars[87]); if(ret) vars[78] = ret; } catch(e) { }
try { var ret = String.prototype.strike.call(vars[27], 'a'); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = String.prototype.toUpperCase.call(vars[14]); if(ret) vars[15] = ret; } catch(e) { }
try { var ret = vars[8].arguments; if(ret) vars[45] = ret; } catch(e) { }
try { var ret = vars[91].toPrecision; if(ret) vars[50] = ret; } catch(e) { }
try { var ret = Boolean(); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = escape(true); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = RegExp.$9; if(ret) vars[97] = ret; } catch(e) { }
try { var ret = new VBArray(); if(ret) vars[94] = ret; } catch(e) { }
try { var ret = Debug.write('a', vars[16], 'a'); if(ret) vars[81] = ret; } catch(e) { }
try { var ret = new RangeError(vars[2], Infinity, true); if(ret) vars[17] = ret; } catch(e) { }
try { var ret = vars[15].call(vars[32], vars[70], vars[47], vars[15]); if(ret) vars[11] = ret; } catch(e) { }
try { var ret = new RuntimeObject(); if(ret) vars[79] = ret; } catch(e) { }
try { var ret = new URIError(0, true, false); if(ret) vars[55] = ret; } catch(e) { }
try { var ret = String.prototype.charAt.call(vars[1], 100); if(ret) vars[52] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[45], 4294967296, Infinity); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = vars[51].call(vars[81], true, 5, vars[4]); if(ret) vars[57] = ret; } catch(e) { }
try { vars[23] = {}; } catch(e) { }
try { var ret = vars[70].input; if(ret) vars[12] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[68], Infinity); if(ret) vars[50] = ret; } catch(e) { }
try { var ret = vars[77].toPrecision; if(ret) vars[20] = ret; } catch(e) { }
try { vars[98] = new Array(1); } catch(e) { }
try { var ret = new Date(vars[37], 1, true, true, 1000, Infinity, arg3); if(ret) vars[51] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[66], Array(1025).join(String.fromCharCode(74, 102, 58)) + Array(65).join(String.fromCharCode(27, 10, 80))); } catch(e) { }
try { vars[96].length = vars[69]; } catch(e) { }
try { var ret = String.prototype.strike.call(vars[53], 3); if(ret) vars[31] = ret; } catch(e) { }
try { var ret = LuLow(true); if(ret) vars[88] = ret; } catch(e) { }
try { var ret = parseInt(false); if(ret) vars[8] = ret; } catch(e) { }
try { vars[89] = {}; } catch(e) { }
try { var ret = Error(vars[80], false, true); if(ret) vars[25] = ret; } catch(e) { }
try { vars[48].toJSON = f0; } catch(e) { }
try { var ret = Date.prototype.getFullYear.call(vars[73]); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = Array(vars[20], true, true); if(ret) vars[93] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[18], vars[13]); if(ret) vars[17] = ret; } catch(e) { }
try { var ret = RegExp.$2; if(ret) vars[97] = ret; } catch(e) { }
try { var ret = Debug.writeln(vars[5], true, arg2); if(ret) vars[54] = ret; } catch(e) { }
try { var ret = String.prototype.substring.call(vars[5], true); if(ret) vars[67] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[16], Infinity, Infinity); if(ret) vars[66] = ret; } catch(e) { }
try { var ret = EvalError(true, vars[34], 2); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = Boolean.prototype.toString.call(vars[34]); if(ret) vars[75] = ret; } catch(e) { }
try { var ret = Enumerator(); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = LuLow(vars[3]); if(ret) vars[49] = ret; } catch(e) { }
try { var ret = Array.prototype.reverse.call(vars[64]); if(ret) vars[86] = ret; } catch(e) { }
try { vars[55] = {}; } catch(e) { }
try { var ret = JSON.stringify(vars[9]); if(ret) vars[46] = ret; } catch(e) { }
try { vars[87] = Function; } catch(e) { }
try { RegExp.prototype.test.call(vars[15], true); } catch(e) { }
try { var ret = vars[89].toJSON; if(ret) vars[27] = ret; } catch(e) { }
try { var ret = Date.prototype.toUTCString.call(vars[91]); if(ret) vars[93] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[26], 1000, vars[71]); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = RegExp.lastIndex; if(ret) vars[11] = ret; } catch(e) { }
try { var ret = parseFloat(vars[10]); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[17], vars[46]); if(ret) vars[26] = ret; } catch(e) { }
try { var ret = Function.prototype.toString.call(vars[79]); if(ret) vars[46] = ret; } catch(e) { }
try { vars[76] = {}; } catch(e) { }
try { var ret = EncodeURI(vars[44]); if(ret) vars[17] = ret; } catch(e) { }
try { vars[33][3] = Infinity; } catch(e) { }
try { vars[43] = Array; } catch(e) { }
try { var ret = ActiveXObject(vars[51]); if(ret) vars[84] = ret; } catch(e) { }
try { var ret = Date.UTC(vars[83], vars[4], vars[96], vars[91], 3, vars[67], arg9); if(ret) vars[17] = ret; } catch(e) { }
try { var ret = vars[8].source; if(ret) vars[31] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[68], 1, 1073741824); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[5], f6); if(ret) vars[46] = ret; } catch(e) { }
try { var ret = unescape(5); if(ret) vars[18] = ret; } catch(e) { }
try { vars[6].toJSON = arg8; } catch(e) { }
try { var ret = RegExp.$5; if(ret) vars[48] = ret; } catch(e) { }
try { var ret = VBArray(vars[44]); if(ret) vars[59] = ret; } catch(e) { }
try { var ret = isFinite(false); if(ret) vars[42] = ret; } catch(e) { }
try { var ret = GetObject(vars[90], arg1); if(ret) vars[78] = ret; } catch(e) { }
try { var ret = Error.prototype.toString.call(vars[32]); if(ret) vars[61] = ret; } catch(e) { }
try { var ret = EncodeURI(arg3); if(ret) vars[42] = ret; } catch(e) { }
try { vars[4].toLocaleString = f5; } catch(e) { }
try { var ret = JSON.parse(arg4); if(ret) vars[20] = ret; } catch(e) { }
try { var ret = Boolean.prototype.toString.call(vars[15]); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = Error(vars[64]); if(ret) vars[65] = ret; } catch(e) { }
try { var ret = new ActiveXObject(vars[28]); if(ret) vars[54] = ret; } catch(e) { }
try { var ret = RegExp(Array(17).join(String.fromCharCode(18, 86))); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = Date.UTC(false, 1000000, vars[98], vars[97], vars[83], arg2, false); if(ret) vars[85] = ret; } catch(e) { }
try { vars[31].constructor = vars[68]; } catch(e) { }
try { RegExp.prototype.exec.call(vars[15], Array(1025).join(String.fromCharCode(6, 84, 59)) + Array(17).join(String.fromCharCode(109)) + Array(17).join(String.fromCharCode(95, 101, 71))); } catch(e) { }
try { var ret = Debug.writeln(Infinity, arg5, vars[62]); if(ret) vars[52] = ret; } catch(e) { }
try { var ret = JSON.stringify(vars[56]); if(ret) vars[72] = ret; } catch(e) { }
try { vars[24].toFixed = f8; } catch(e) { }
try { var ret = String.prototype.charAt.call(vars[54], arg3); if(ret) vars[14] = ret; } catch(e) { }
try { var ret = vars[40].toExponential; if(ret) vars[80] = ret; } catch(e) { }
try { var ret = vars[2].toFixed; if(ret) vars[26] = ret; } catch(e) { }
try { var ret = ReferenceError(vars[39], vars[34], vars[26]); if(ret) vars[12] = ret; } catch(e) { }
try { var ret = encodeURIComponent(vars[55]); if(ret) vars[79] = ret; } catch(e) { }
try { vars[3].toString = f7; } catch(e) { }
try { vars[16] = Array(65537).join(String.fromCharCode(5)) + Array(4097).join(String.fromCharCode(47, 57, 114)); } catch(e) { }
try { var ret = ActiveXObject(vars[39]); if(ret) vars[23] = ret; } catch(e) { }
try { var ret = vars[31].call(vars[80], Infinity, vars[18], false); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = new Date(vars[73], false, Infinity, 'a', true, 1, vars[72]); if(ret) vars[69] = ret; } catch(e) { }
try { vars[34].toPrecision = f2; } catch(e) { }
try { var ret = Array.prototype.reverse.call(vars[49]); if(ret) vars[26] = ret; } catch(e) { }
try { var ret = RegExp.lastIndex; if(ret) vars[25] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.moveFirst.call(vars[46]); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = RegExp.$1; if(ret) vars[84] = ret; } catch(e) { }
try { vars[27].valueOf = Infinity; } catch(e) { }
try { vars[2][2] = vars[63]; } catch(e) { }
try { var ret = vars[6].caller; if(ret) vars[11] = ret; } catch(e) { }
try { var ret = Array.prototype.toString.call(vars[23]); if(ret) vars[54] = ret; } catch(e) { }
try { var ret = Array.prototype.toLocaleString.call(vars[87]); if(ret) vars[12] = ret; } catch(e) { }
try { var ret = Date(-1, vars[18], vars[45], vars[76], vars[47], 'a', vars[8]); if(ret) vars[99] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleString.call(vars[81]); if(ret) vars[75] = ret; } catch(e) { }
try { var ret = String.prototype.toUpperCase.call(vars[5]); if(ret) vars[83] = ret; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[81], 536870911, f5); if(ret) vars[88] = ret; } catch(e) { }
try { var ret = RegExp.$8; if(ret) vars[20] = ret; } catch(e) { }
try { vars[25] = Enumerator; } catch(e) { }
try { var ret = RegExp.lastIndex; if(ret) vars[81] = ret; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[11], false, true, arg5, vars[61]); if(ret) vars[53] = ret; } catch(e) { }
try { vars[42].options = vars[55]; } catch(e) { }
try { var ret = String.prototype.strike.call(vars[88], vars[11]); if(ret) vars[57] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[74], Array(257).join(String.fromCharCode(78)) + Array(4097).join(String.fromCharCode(85, 28)) + Array(1025).join(String.fromCharCode(39, 14, 63)), 'm'); } catch(e) { }
try { var ret = Date(); if(ret) vars[58] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[88], 1); } catch(e) { }
try { var ret = vars[58].source; if(ret) vars[67] = ret; } catch(e) { }
try { var ret = VBArray.prototype.dimensions.call(vars[29]); if(ret) vars[49] = ret; } catch(e) { }
try { var ret = vars[65].caller; if(ret) vars[53] = ret; } catch(e) { }
try { var ret = Debug.writeln(vars[34]); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.atEnd.call(vars[44]); if(ret) vars[51] = ret; } catch(e) { }
try { vars[97] = {}; } catch(e) { }
try { var ret = String.FromCharCode(vars[33], vars[67], vars[9]); if(ret) vars[40] = ret; } catch(e) { }
try { var ret = String.prototype.toLowerCase.call(vars[25]); if(ret) vars[59] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[60], vars[61], vars[4]); if(ret) vars[40] = ret; } catch(e) { }
try { var ret = String.prototype.split.call(vars[7], vars[12]); if(ret) vars[71] = ret; } catch(e) { }
try { var ret = String.prototype.toLowerCase.call(vars[28]); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = RegExp(Array(17).join(String.fromCharCode(62, 120, 91)) + Array(4097).join(String.fromCharCode(83, 17))); if(ret) vars[65] = ret; } catch(e) { }
try { var ret = new vars[50].call(vars[50], vars[61], false, 1, vars[69], 3); if(ret) vars[14] = ret; } catch(e) { }
try { var ret = Date(vars[49]); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = String.prototype.anchor.call(vars[34], false); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = new RegExp(Array(1025).join(String.fromCharCode(87)) + Array(65).join(String.fromCharCode(83, 111))); if(ret) vars[99] = ret; } catch(e) { }
try { vars[78].toString = vars[19]; } catch(e) { }
try { var ret = RegExp.lastParen; if(ret) vars[17] = ret; } catch(e) { }
try { var ret = RegExp.lastParen; if(ret) vars[33] = ret; } catch(e) { }
try { vars[14] = this; } catch(e) { }
try { var ret = new Array(vars[83]); if(ret) vars[69] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[38], vars[1]); } catch(e) { }
try { var ret = new Array(false, 'a', 536870911); if(ret) vars[42] = ret; } catch(e) { }
try { var ret = GetObject(vars[53], true); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[64], Infinity, 1000000); if(ret) vars[66] = ret; } catch(e) { }
try { var ret = RegExp(Array(1025).join(String.fromCharCode(37, 123, 47)) + Array(257).join(String.fromCharCode(4, 50, 126)), 'g'); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = parseInt(false); if(ret) vars[78] = ret; } catch(e) { }
try { var ret = String.prototype.anchor.call(vars[35], true); if(ret) vars[91] = ret; } catch(e) { }
try { var ret = VBArray(vars[12]); if(ret) vars[93] = ret; } catch(e) { }
try { var ret = decodeURI(vars[73]); if(ret) vars[76] = ret; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[74], vars[29]); if(ret) vars[24] = ret; } catch(e) { }
try { function f_inner_84() { return f3(); } vars[47] = f_inner_84; } catch(e) { }
try { var ret = vars[72].valueOf; if(ret) vars[26] = ret; } catch(e) { }
try { vars[48] = ActiveXObject; } catch(e) { }
try { vars[14] = Enumerator; } catch(e) { }
try { var ret = String.prototype.strike.call(vars[72], 3); if(ret) vars[81] = ret; } catch(e) { }
try { var ret = ReferenceError('a', vars[27], vars[33]); if(ret) vars[52] = ret; } catch(e) { }
try { var ret = JSON.stringify(vars[79]); if(ret) vars[73] = ret; } catch(e) { }
try { var ret = new Array(vars[5]); if(ret) vars[92] = ret; } catch(e) { }
try { vars[28] = Date; } catch(e) { }
try { var ret = vars[8].callee; if(ret) vars[8] = ret; } catch(e) { }
try { RegExp.prototype.exec.call(vars[74], vars[65]); } catch(e) { }
try { var ret = Array.prototype.push.call(vars[62], vars[29], vars[54]); if(ret) vars[52] = ret; } catch(e) { }
try { RegExp.prototype.compile.call(vars[15], Array(4097).join(String.fromCharCode(32)) + Array(65537).join(String.fromCharCode(43)), 'imm'); } catch(e) { }
try { vars[13] = Array; } catch(e) { }
try { var ret = RegExp.leftContext; if(ret) vars[72] = ret; } catch(e) { }
try { var ret = Date(Infinity, vars[48], vars[72], Infinity, vars[80], vars[7], vars[97]); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[93], vars[40], vars[59]); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = new Date('a'); if(ret) vars[79] = ret; } catch(e) { }
try { var ret = JSON.parse(vars[46]); if(ret) vars[4] = ret; } catch(e) { }
try { vars[63].toPrecision = f8; } catch(e) { }
try { RegExp.input = vars[23]; } catch(e) { }
try { var ret = RegExp.leftContext; if(ret) vars[79] = ret; } catch(e) { }
try { vars[53].toString = f8; } catch(e) { }
try { var ret = Debug.write(true); if(ret) vars[67] = ret; } catch(e) { }
try { var ret = Date(vars[68], 2, vars[42], vars[74], Infinity, false, vars[82]); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = vars[84].foo; if(ret) vars[75] = ret; } catch(e) { }
try { var ret = VBArray.prototype.toArray.call(vars[89]); if(ret) vars[47] = ret; } catch(e) { }
try { vars[82].toFixed = Infinity; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[5], 1000, 1000); if(ret) vars[37] = ret; } catch(e) { }
try { vars[93] = JSON; } catch(e) { }
try { var ret = isFinite(4); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = new ActiveXObject(arg1, vars[14]); if(ret) vars[88] = ret; } catch(e) { }
try { var ret = Array.prototype.reverse.call(vars[94]); if(ret) vars[70] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[4], vars[81]); if(ret) vars[86] = ret; } catch(e) { }
try { var ret = Array(); if(ret) vars[75] = ret; } catch(e) { }
try { var ret = Error(-1); if(ret) vars[54] = ret; } catch(e) { }
try { var ret = vars[50].prototype; if(ret) vars[46] = ret; } catch(e) { }
try { vars[13] = Date; } catch(e) { }
try { var ret = RegExp.input; if(ret) vars[40] = ret; } catch(e) { }
try { var ret = new RegExp(Array(65537).join(String.fromCharCode(124, 44)) + Array(257).join(String.fromCharCode(28)), 'mi'); if(ret) vars[13] = ret; } catch(e) { }
try { var ret = vars[69].appy(vars[55], Infinity); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[61]); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[57]); if(ret) vars[13] = ret; } catch(e) { }
try { var ret = Date.prototype.valueOf.call(vars[88]); if(ret) vars[56] = ret; } catch(e) { }
try { var ret = RegExp.lastMatch; if(ret) vars[33] = ret; } catch(e) { }
try { var ret = RegExp.$2; if(ret) vars[38] = ret; } catch(e) { }
try { var ret = vars[66][536870911]; if(ret) vars[80] = ret; } catch(e) { }
try { var ret = String.prototype.localeCompare.call(vars[81], vars[30]); if(ret) vars[51] = ret; } catch(e) { }
try { var ret = Date.prototype.getFullYear.call(vars[3]); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = RegExp.lastIndex; if(ret) vars[89] = ret; } catch(e) { }
try { var ret = VBArray.prototype.dimensions.call(vars[28]); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = Date.prototype.toJSON.call(vars[84]); if(ret) vars[41] = ret; } catch(e) { }
try { var ret = vars[72].source; if(ret) vars[74] = ret; } catch(e) { }
try { vars[21].callee = true; } catch(e) { }
try { vars[72] = {}; } catch(e) { }
try { var ret = String.prototype.match.call(vars[38], vars[54]); if(ret) vars[8] = ret; } catch(e) { }
try { var ret = vars[74].arguments; if(ret) vars[54] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[16], vars[57], false, true, true); if(ret) vars[85] = ret; } catch(e) { }
try { var ret = Date.prototype.toUTCString.call(vars[68]); if(ret) vars[0] = ret; } catch(e) { }
try { var ret = RegExp.lastIndex; if(ret) vars[38] = ret; } catch(e) { }
try { vars[45].caller = vars[92]; } catch(e) { }
try { var ret = VBArray.prototype.toArray.call(vars[97]); if(ret) vars[31] = ret; } catch(e) { }
try { var ret = isFinite(vars[18]); if(ret) vars[94] = ret; } catch(e) { }
try { var ret = RegExp.rightContext; if(ret) vars[33] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[71], Infinity); if(ret) vars[82] = ret; } catch(e) { }
try { var ret = Date.prototype.getFullYear.call(vars[47]); if(ret) vars[44] = ret; } catch(e) { }
try { vars[41].toPrecision = vars[28]; } catch(e) { }
try { var ret = RegExp.$6; if(ret) vars[61] = ret; } catch(e) { }
try { var ret = new RangeError(Infinity, vars[31], arg5); if(ret) vars[42] = ret; } catch(e) { }
try { vars[53] = RegExp; } catch(e) { }
try { vars[96].constructor = vars[59]; } catch(e) { }
try { var ret = Array(vars[96]); if(ret) vars[71] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[37], vars[80], vars[33], false); if(ret) vars[88] = ret; } catch(e) { }
try { var ret = EncodeURI(vars[30]); if(ret) vars[31] = ret; } catch(e) { }
try { vars[75] = ActiveXObject; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[74]); if(ret) vars[24] = ret; } catch(e) { }
try { var ret = Date('a'); if(ret) vars[82] = ret; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[29], vars[6]); if(ret) vars[75] = ret; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[56], vars[44], 'a'); if(ret) vars[28] = ret; } catch(e) { }
try { var ret = Debug.writeln(false, false, false); if(ret) vars[6] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[32], Array(4097).join(String.fromCharCode(2)) + Array(65).join(String.fromCharCode(80))); } catch(e) { }
try { vars[55].arguments = vars[21]; } catch(e) { }
try { RegExp.prototype.compile.call(vars[50], Array(65537).join(String.fromCharCode(46)) + Array(257).join(String.fromCharCode(106, 41, 48)) + Array(65).join(String.fromCharCode(72, 41, 102)), 'i'); } catch(e) { }
try { var ret = [vars[4], vars[95], 2]; if(ret) vars[21] = ret; } catch(e) { }
try { vars[13] = new Array(2); } catch(e) { }
try { var ret = Array.prototype.join.call(vars[45], Infinity); if(ret) vars[85] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleString.call(vars[75]); if(ret) vars[19] = ret; } catch(e) { }
try { vars[31] = Boolean; } catch(e) { }
try { var ret = Boolean(); if(ret) vars[9] = ret; } catch(e) { }
try { var ret = decodeURI(Infinity); if(ret) vars[31] = ret; } catch(e) { }
try { var ret = vars[15].prototype; if(ret) vars[66] = ret; } catch(e) { }
try { var ret = String.prototype.toUpperCase.call(vars[80]); if(ret) vars[35] = ret; } catch(e) { }
try { var ret = escape(vars[93]); if(ret) vars[51] = ret; } catch(e) { }
try { vars[26].callee = false; } catch(e) { }
try { var ret = vars[45](true, true, vars[28], vars[97], vars[19]); if(ret) vars[12] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[68], vars[82], arg8); if(ret) vars[54] = ret; } catch(e) { }
try { var ret = RegExp.$6; if(ret) vars[14] = ret; } catch(e) { }
try { var ret = vars[77].toString; if(ret) vars[10] = ret; } catch(e) { }
try { var ret = Date.prototype.getMilliseconds.call(vars[79]); if(ret) vars[26] = ret; } catch(e) { }
try { var ret = RegExp.input; if(ret) vars[59] = ret; } catch(e) { }
try { var ret = vars[55].call(vars[14], vars[1], vars[79], arg9, vars[0], false); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = Date(Infinity, 'a', Infinity, arg2, 'a', vars[7], Infinity); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = Object.defineProperty(vars[19], 'length', { value: arg8 }); if(ret) vars[69] = ret; } catch(e) { }
try { var ret = RegExp.$4; if(ret) vars[80] = ret; } catch(e) { }
try { vars[60] = new Array(-1); } catch(e) { }
try { vars[44].toLocaleString = f5; } catch(e) { }
try { var ret = RegExp.lastIndex; if(ret) vars[96] = ret; } catch(e) { }
try { var ret = RegExp.$9; if(ret) vars[57] = ret; } catch(e) { }
try { var ret = vars[77].call(vars[0]); if(ret) vars[58] = ret; } catch(e) { }
try { var ret = Error(); if(ret) vars[59] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[14], arg4, vars[62]); if(ret) vars[44] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[5], -1, 'a', true); if(ret) vars[2] = ret; } catch(e) { }
try { vars[14].callee = 1; } catch(e) { }
try { var ret = RegExp.lastIndex; if(ret) vars[15] = ret; } catch(e) { }
try { vars[83].options = vars[12]; } catch(e) { }
try { vars[39] = document.createElement("foo"); } catch(e) { }
try { var ret = vars[88].call(vars[28]); if(ret) vars[65] = ret; } catch(e) { }
try { var ret = RegExp.$3; if(ret) vars[18] = ret; } catch(e) { }
try { vars[33].toJSON = 'a'; } catch(e) { }
try { vars[46].toArray = f9; } catch(e) { }
try { var ret = RegExp.leftContext; if(ret) vars[26] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[36], vars[76]); if(ret) vars[39] = ret; } catch(e) { }
try { var ret = RegExp.$9; if(ret) vars[90] = ret; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[8], vars[73], -1); if(ret) vars[80] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCHours.call(vars[91], true); if(ret) vars[20] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[88]); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = vars[45].toPrecision; if(ret) vars[67] = ret; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[75], vars[98]); if(ret) vars[53] = ret; } catch(e) { }
try { var ret = Debug.writeln(arg5); if(ret) vars[84] = ret; } catch(e) { }
try { var ret = vars[60].toJSON; if(ret) vars[13] = ret; } catch(e) { }
try { var ret = Debug.write(vars[25], Infinity, 'a'); if(ret) vars[14] = ret; } catch(e) { }
try { var ret = GetObject(Infinity); if(ret) vars[33] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[14], 'a', Infinity); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = vars[16].toJSON; if(ret) vars[20] = ret; } catch(e) { }
try { var ret = vars[6].source; if(ret) vars[97] = ret; } catch(e) { }
try { var ret = Enumerator.prototype.moveNext.call(vars[90]); if(ret) vars[54] = ret; } catch(e) { }
try { var ret = new ActiveXObject('a'); if(ret) vars[3] = ret; } catch(e) { }
try { vars[91] = new Array(10); } catch(e) { }
try { var ret = Date.prototype.toUTCString.call(vars[72]); if(ret) vars[31] = ret; } catch(e) { }
try { vars[87].source = vars[28]; } catch(e) { }
try { var ret = Error.prototype.toString.call(vars[53]); if(ret) vars[76] = ret; } catch(e) { }
try { var ret = new RangeError('a', arg9, Infinity); if(ret) vars[47] = ret; } catch(e) { }
try { vars[0] = {}; } catch(e) { }
try { var ret = String.prototype.charAt.call(vars[81], vars[65]); if(ret) vars[35] = ret; } catch(e) { }
try { var ret = parseInt(vars[53]); if(ret) vars[66] = ret; } catch(e) { }
try { var ret = Error(1000, 2147483647, vars[34]); if(ret) vars[36] = ret; } catch(e) { }
try { var ret = RegExp.$6; if(ret) vars[79] = ret; } catch(e) { }
try { var ret = vars[43].toExponential; if(ret) vars[95] = ret; } catch(e) { }
try { var ret = RegExp(Array(65537).join(String.fromCharCode(123, 102))); if(ret) vars[56] = ret; } catch(e) { }
try { var ret = new vars[58].apply(vars[35], vars[21]); if(ret) vars[88] = ret; } catch(e) { }
try { var ret = Boolean.prototype.valueOf.call(vars[4]); if(ret) vars[68] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[45], vars[28]); if(ret) vars[52] = ret; } catch(e) { }
try { var ret = parseFloat(false); if(ret) vars[34] = ret; } catch(e) { }
try { vars[6].global = false; } catch(e) { }
try { var ret = RegExp.$8; if(ret) vars[87] = ret; } catch(e) { }
try { vars[24] = Object; } catch(e) { }
try { vars[8][100] = 10; } catch(e) { }
try { var ret = arguments; if(ret) vars[25] = ret; } catch(e) { }
try { var ret = String.prototype.localeCompare.call(vars[61], arg2); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = vars[10].toLocaleString; if(ret) vars[48] = ret; } catch(e) { }
try { var ret = VBArray.prototype.lbound.call(vars[35], vars[99]); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleLowerCase.call(vars[47]); if(ret) vars[53] = ret; } catch(e) { }
try { var ret = encodeURIComponent(false); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[85], vars[76], 0); if(ret) vars[90] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[95], 4, vars[30]); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = decodeURIComponent(arg3); if(ret) vars[29] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleUpperCase.call(vars[75]); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = Array.prototype.concat.call(vars[3], vars[5], vars[25]); if(ret) vars[27] = ret; } catch(e) { }
try { vars[83] = Object; } catch(e) { }
try { RegExp.prototype.compile.call(vars[70], Array(257).join(String.fromCharCode(66)), 'gg'); } catch(e) { }
try { var ret = new Date(); if(ret) vars[37] = ret; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[49], vars[99], vars[18]); if(ret) vars[45] = ret; } catch(e) { }
try { var ret = Enumerator(vars[19]); if(ret) vars[52] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[13], Infinity, Infinity); if(ret) vars[46] = ret; } catch(e) { }
try { var ret = isFinite(vars[84]); if(ret) vars[21] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[10], false); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = new Enumerator(); if(ret) vars[76] = ret; } catch(e) { }
try { vars[46][2] = vars[2]; } catch(e) { }
try { var ret = Boolean(); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = RegExp(); if(ret) vars[60] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[97], false); } catch(e) { }
try { vars[28] = new Array(4294967296); } catch(e) { }
try { vars[9][4] = vars[99]; } catch(e) { }
try { var ret = Array.prototype.sort.call(vars[29], f5); if(ret) vars[65] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[28]); if(ret) vars[65] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[75]); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = LuHigh(vars[3]); if(ret) vars[59] = ret; } catch(e) { }
try { var ret = new Error(vars[68], 'a', false); if(ret) vars[87] = ret; } catch(e) { }
try { var ret = vars[57].toString; if(ret) vars[82] = ret; } catch(e) { }
try { var ret = vars[60].valueOf; if(ret) vars[65] = ret; } catch(e) { }
try { var ret = Enumerator(true); if(ret) vars[60] = ret; } catch(e) { }
try { var ret = URIError(arg6, 10, Infinity); if(ret) vars[44] = ret; } catch(e) { }
try { var ret = String.prototype.toLowerCase.call(vars[21]); if(ret) vars[36] = ret; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[81], vars[0], vars[72]); if(ret) vars[1] = ret; } catch(e) { }
try { vars[9] = new Array(1000); } catch(e) { }
try { var ret = VBArray.prototype.dimensions.call(vars[5]); if(ret) vars[80] = ret; } catch(e) { }
try { vars[1] = {}; } catch(e) { }
try { var ret = new ActiveXObject(arg8); if(ret) vars[69] = ret; } catch(e) { }
try { var ret = new vars[76](false, 'a', arg2, vars[11], Infinity); if(ret) vars[14] = ret; } catch(e) { }
try { vars[40].toArray = f6; } catch(e) { }
try { var ret = VBArray.prototype.ubound.call(vars[37], vars[82]); if(ret) vars[42] = ret; } catch(e) { }
try { var ret = new Error(false); if(ret) vars[12] = ret; } catch(e) { }
try { var ret = Array.prototype.join.call(vars[7], vars[18]); if(ret) vars[98] = ret; } catch(e) { }
try { var ret = String.FromCharCode(vars[81], vars[52], false); if(ret) vars[51] = ret; } catch(e) { }
try { vars[60] = Date; } catch(e) { }
try { var ret = VBArray.prototype.lbound.call(vars[87], 1000000); if(ret) vars[63] = ret; } catch(e) { }
try { var ret = new Error(); if(ret) vars[61] = ret; } catch(e) { }
try { var ret = Debug.writeln(vars[86], 'a', vars[52]); if(ret) vars[35] = ret; } catch(e) { }
try { var ret = Enumerator(vars[74]); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = RegExp(Array(257).join(String.fromCharCode(127)) + Array(65537).join(String.fromCharCode(35, 63, 37))); if(ret) vars[25] = ret; } catch(e) { }
try { var ret = Date.prototype.toLocaleString.call(vars[66]); if(ret) vars[40] = ret; } catch(e) { }
try { var ret = vars[29][1]; if(ret) vars[80] = ret; } catch(e) { }
try { var ret = Boolean.prototype.toJSON.call(vars[97]); if(ret) vars[22] = ret; } catch(e) { }
try { var ret = vars[21][3]; if(ret) vars[95] = ret; } catch(e) { }
try { var ret = new ActiveXObject(true); if(ret) vars[18] = ret; } catch(e) { }
try { var ret = RegExp.lastParen; if(ret) vars[55] = ret; } catch(e) { }
try { var ret = EncodeURI(vars[78]); if(ret) vars[23] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[81], vars[5], 'a'); if(ret) vars[26] = ret; } catch(e) { }
try { var ret = vars[31].toFixed; if(ret) vars[97] = ret; } catch(e) { }
try { var ret = new Array(Infinity); if(ret) vars[99] = ret; } catch(e) { }
try { var ret = RegExp.$8; if(ret) vars[76] = ret; } catch(e) { }
try { var ret = String.prototype.toLocaleLowerCase.call(vars[30]); if(ret) vars[12] = ret; } catch(e) { }
try { var ret = ReferenceError(vars[96], vars[24], 1000); if(ret) vars[42] = ret; } catch(e) { }
try { var ret = ActiveXObject('a'); if(ret) vars[39] = ret; } catch(e) { }
try { var ret = ActiveXObject(vars[38], vars[1]); if(ret) vars[3] = ret; } catch(e) { }
try { var ret = new Array(vars[27]); if(ret) vars[79] = ret; } catch(e) { }
try { var ret = VBArray.prototype.ubound.call(vars[91], false); if(ret) vars[43] = ret; } catch(e) { }
try { vars[40] = document.createElement("foo"); Object.defineProperty(vars[40], "lastIndex", {get: f7, set: f2} ); } catch(e) { }
try { var ret = RegExp.index; if(ret) vars[28] = ret; } catch(e) { }
try { var ret = Enumerator(); if(ret) vars[5] = ret; } catch(e) { }
try { vars[60] = f9; } catch(e) { }
try { vars[83] = new Array(2); } catch(e) { }
try { var ret = new Date(); if(ret) vars[95] = ret; } catch(e) { }
try { var ret = vars[35].lastIndex; if(ret) vars[31] = ret; } catch(e) { }
try { var ret = VBArray.prototype.getItem.call(vars[79], arg1, 'a'); if(ret) vars[95] = ret; } catch(e) { }
try { var ret = vars[3].lastIndex; if(ret) vars[83] = ret; } catch(e) { }
try { var ret = Boolean(); if(ret) vars[8] = ret; } catch(e) { }
try { vars[15] = Date; } catch(e) { }
try { RegExp.prototype.test.call(vars[30], 'a'); } catch(e) { }
try { var ret = Array.prototype.toLocaleString.call(vars[48]); if(ret) vars[83] = ret; } catch(e) { }
try { var ret = vars[86].call(vars[91], 'a', 'a', vars[63]); if(ret) vars[1] = ret; } catch(e) { }
try { var ret = Date.UTC(vars[69], vars[37], 1, true, Infinity, arg4, vars[10]); if(ret) vars[61] = ret; } catch(e) { }
try { var ret = vars[82].caller; if(ret) vars[49] = ret; } catch(e) { }
try { vars[90] = Error; } catch(e) { }
try { var ret = String.prototype.concat.call(vars[1], true); if(ret) vars[78] = ret; } catch(e) { }
try { var ret = vars[91].toExponential; if(ret) vars[90] = ret; } catch(e) { }
try { var ret = RegExp.lastParen; if(ret) vars[10] = ret; } catch(e) { }
try { vars[90] = ActiveXObject; } catch(e) { }
try { var ret = String.prototype.substr.call(vars[14], vars[29]); if(ret) vars[57] = ret; } catch(e) { }
try { var ret = Boolean(); if(ret) vars[81] = ret; } catch(e) { }
try { var ret = vars[73][1000000]; if(ret) vars[97] = ret; } catch(e) { }
try { var ret = Array.prototype.toString.call(vars[73]); if(ret) vars[27] = ret; } catch(e) { }
try { var ret = [vars[51], vars[29], arg6]; if(ret) vars[42] = ret; } catch(e) { }
try { var ret = String.prototype.slice.call(vars[67], vars[18]); if(ret) vars[99] = ret; } catch(e) { }
try { vars[76][0] = vars[63]; } catch(e) { }
try { var ret = vars[6][4294967295]; if(ret) vars[49] = ret; } catch(e) { }
try { var ret = vars[63].caller; if(ret) vars[31] = ret; } catch(e) { }
try { var ret = String.prototype.localeCompare.call(vars[20], vars[69]); if(ret) vars[26] = ret; } catch(e) { }
try { var ret = Array.prototype.slice.call(vars[16]); if(ret) vars[46] = ret; } catch(e) { }
try { vars[9].toLocaleString = vars[30]; } catch(e) { }
try { var ret = String.prototype.charAt.call(vars[50], vars[7]); if(ret) vars[32] = ret; } catch(e) { }
try { var ret = new VBArray(vars[1]); if(ret) vars[30] = ret; } catch(e) { }
try { var ret = new RuntimeObject(); if(ret) vars[10] = ret; } catch(e) { }
try { var ret = Function.prototype.apply.call(vars[31], vars[84]); if(ret) vars[93] = ret; } catch(e) { }
try { var ret = Array(vars[24]); if(ret) vars[58] = ret; } catch(e) { }
try { var ret = Function.prototype.call.call(vars[98], vars[92]); if(ret) vars[27] = ret; } catch(e) { }
try { vars[54] = {}; } catch(e) { }
try { var ret = String.prototype.replace.call(vars[0], vars[16], f9); if(ret) vars[53] = ret; } catch(e) { }
try { vars[38].caller = 10; } catch(e) { }
try { vars[74] = {}; } catch(e) { }
try { var ret = vars[50].lastIndex; if(ret) vars[44] = ret; } catch(e) { }
try { var ret = Date.prototype.setUTCFullYear.call(vars[77], true, vars[73], Infinity); if(ret) vars[8] = ret; } catch(e) { }
try { RegExp.prototype.test.call(vars[0], vars[83]); } catch(e) { }
try { vars[22] = new Array(1); } catch(e) { }
try { var ret = new URIError(vars[6], arg8, vars[91]); if(ret) vars[96] = ret; } catch(e) { }
try { var ret = vars[89].arguments; if(ret) vars[64] = ret; } catch(e) { }
try { vars[70] = f8; } catch(e) { }
try { vars[71] = document.createElement("foo"); Object.defineProperty(vars[71], "toJSON", {get: f5, set: f3} ); } catch(e) { }
try { var ret = String.prototype.concat.call(vars[83], 10); if(ret) vars[7] = ret; } catch(e) { }
try { var ret = new EvalError(vars[23], Infinity, vars[45]); if(ret) vars[80] = ret; } catch(e) { }
try { var ret = String.prototype.lastIndexOf.call(vars[14], Infinity, Infinity); if(ret) vars[76] = ret; } catch(e) { }
try { var ret = vars[70].source; if(ret) vars[74] = ret; } catch(e) { }
try { var ret = EncodeURI(vars[81]); if(ret) vars[58] = ret; } catch(e) { }
try { var ret = VBArray(vars[71]); if(ret) vars[74] = ret; } catch(e) { }
try { var ret = vars[19].prototype; if(ret) vars[64] = ret; } catch(e) { }
try { var ret = Array.prototype.push.call(vars[64]); if(ret) vars[7] = ret; } catch(e) { }
try { vars[33].valueOf = vars[87]; } catch(e) { }
try { RegExp.prototype.exec.call(vars[92], Array(17).join(String.fromCharCode(30)) + Array(17).join(String.fromCharCode(113, 67)) + Array(17).join(String.fromCharCode(109))); } catch(e) { }
try { var ret = EncodeURI(true); if(ret) vars[22] = ret; } catch(e) { }
try { var ret = vars[81][10]; if(ret) vars[40] = ret; } catch(e) { }
try { var ret = VBArray(vars[87]); if(ret) vars[72] = ret; } catch(e) { }
try { var ret = Array.prototype.toLocaleString.call(vars[90]); if(ret) vars[56] = ret; } catch(e) { }
try { vars[74] = {}; } catch(e) { }
try { var ret = Object.getOwnPropertyDescriptor(vars[95], vars[63]); if(ret) vars[88] = ret; } catch(e) { }
try { var ret = ActiveXObject('a', 10); if(ret) vars[80] = ret; } catch(e) { }
try { var ret = Array.prototype.splice.call(vars[71], vars[77], vars[90], vars[14], false); if(ret) vars[39] = ret; } catch(e) { }
try { var ret = RegExp.input; if(ret) vars[32] = ret; } catch(e) { }
try { var ret = vars[32].arguments; if(ret) vars[22] = ret; } catch(e) { }
try { var ret = Array.prototype.reverse.call(vars[5]); if(ret) vars[73] = ret; } catch(e) { }
try { var ret = Date.prototype.toJSON.call(vars[79]); if(ret) vars[48] = ret; } catch(e) { }
try { var ret = String.prototype.indexOf.call(vars[58], true); if(ret) vars[14] = ret; } catch(e) { }
try { function f_inner_90() { return f7(); } vars[60] = f_inner_90; } catch(e) { }
try { var ret = DblFromLus(Infinity); if(ret) vars[15] = ret; } catch(e) { }
//endjs
CollectGarbage();
return vars[15];

}

for(var i=0;i<20;i++) {
  vars[i] = new Array(10);
}
for(var i=20;i<40;i++) {
  vars[i] = 'aaaaaaaaaa';
}
for(var i=40;i<60;i++) {
  vars[i] = document.createElement("foo");
}
for(var i=60;i<90;i++) {
  vars[i] = {};
}
vars[90] = f0;
vars[91] = f1;
vars[92] = f2;
vars[93] = f3;
vars[94] = f4;
vars[95] = f5;
vars[96] = f6;
vars[97] = f7;
vars[98] = f8;
vars[99] = f9;

main();

</script>
</body>
</html>
